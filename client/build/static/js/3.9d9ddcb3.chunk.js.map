{"version":3,"sources":["app/modules/UserProfile/AccountInformation.js","app/modules/UserProfile/ChangePassword.js","app/modules/UserProfile/PersonaInformation.js","app/modules/UserProfile/components/ProfileCard.js","app/modules/UserProfile/UserProfilePage.js"],"names":["connect","auth","props","intl","useIntl","useState","loading","setloading","dispatch","useDispatch","user","useSelector","state","shallowEqual","useEffect","initialValues","username","email","language","timeZone","Schema","Yup","shape","required","getInputClasses","fieldname","formik","touched","errors","useFormik","validationSchema","onSubmit","values","setStatus","setSubmitting","updatedUser","Object","assign","formData","FormData","property","append","updateUser","then","res","resUser","data","_id","setUser","catch","err","console","log","saveUser","onReset","resetForm","className","handleSubmit","formatMessage","id","type","disabled","isSubmitting","isValid","to","name","getFieldProps","placeholder","value","isError","setisError","errMsg","setErrMsg","currentPassword","password","cPassword","when","is","val","length","oneOf","changePassword","curPassword","newPassword","userId","response","message","role","src","toAbsoluteUrl","onClick","data-dismiss","aria-label","aria-hidden","href","pic","setPic","fullname","companyName","phone","website","style","backgroundImage","preview","data-action","data-toggle","title","data-original-title","accept","onChange","e","picFile","target","files","picObj","URL","createObjectURL","ProfileCard","activeClassName","UserProfilePage","useSubheader","setTitle","from","exact","path","component","AccountInformation","ChangePassword","PersonaInformation"],"mappings":"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","file":"static/js/3.9d9ddcb3.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useIntl } from \"react-intl\";\r\nimport { useSelector, shallowEqual, connect, useDispatch } from \"react-redux\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { ModalProgressBar } from \"../../../_metronic/_partials/controls\";\r\nimport * as auth from \"../Auth\";\r\nimport { updateUser } from \"../Auth/_redux/authCrud\";\r\n\r\nfunction AccountInformation(props) {\r\n  const intl = useIntl();\r\n  // Fields\r\n  const [loading, setloading] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.auth.user, shallowEqual);\r\n  useEffect(() => {}, [user]);\r\n\r\n  // Methods\r\n  const saveUser = (values, setStatus, setSubmitting) => {\r\n    setloading(true);\r\n    const updatedUser = Object.assign(user, {\r\n      username: values.username,\r\n      email: values.email,\r\n      language: values.language,\r\n      timeZone: values.timeZone,\r\n    });\r\n    \r\n    let formData = new FormData();\r\n    for (const property in updatedUser) {\r\n      formData.append(property, updatedUser[property]);\r\n    }\r\n\r\n    // user for update preparation\r\n    \r\n    updateUser(formData).then((res) => {\r\n      setloading(false);\r\n      setSubmitting(false);\r\n      // user for update preparation\r\n      const resUser = res.data;\r\n      resUser[\"id\"] = resUser._id;\r\n      delete resUser._id;\r\n      dispatch(props.setUser(resUser));\r\n    }).catch((err) => {\r\n      console.log(err);\r\n    });\r\n  };\r\n  // UI Helpers\r\n  const initialValues = {\r\n    username: user.username,\r\n    email: user.email,\r\n    language: user.language,\r\n    timeZone: user.timeZone,\r\n  };\r\n  const Schema = Yup.object().shape({\r\n    username: Yup.string().required(\"Username is required\"),\r\n    email: Yup.string()\r\n      .email(\"Wrong email format\")\r\n      .required(\"Email is required\"),\r\n    language: Yup.string(),\r\n    timeZone: Yup.string(),\r\n  });\r\n  const getInputClasses = (fieldname) => {\r\n    if (formik.touched[fieldname] && formik.errors[fieldname]) {\r\n      return \"is-invalid\";\r\n    }\r\n\r\n    if (formik.touched[fieldname] && !formik.errors[fieldname]) {\r\n      return \"is-valid\";\r\n    }\r\n\r\n    return \"\";\r\n  };\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema: Schema,\r\n    onSubmit: (values, { setStatus, setSubmitting }) => {\r\n      saveUser(values, setStatus, setSubmitting);\r\n    },\r\n    onReset: (values, { resetForm }) => {\r\n      resetForm();\r\n    },\r\n  });\r\n\r\n  return (\r\n    <form className=\"card card-custom\" onSubmit={formik.handleSubmit}>\r\n      {loading && <ModalProgressBar />}\r\n\r\n      {/* begin::Header */}\r\n      <div className=\"card-header py-3\">\r\n        <div className=\"card-title align-items-start flex-column\">\r\n          <h3 className=\"card-label font-weight-bolder text-dark\">\r\n            {intl.formatMessage({id: \"PROFILE.ACCOUNT_INFORMATION\"})}\r\n          </h3>\r\n          <span className=\"text-muted font-weight-bold font-size-sm mt-1\">\r\n            {intl.formatMessage({id: \"PROFILE.CHANGE_ACCOUNT_SETTINGS\"})}\r\n          </span>\r\n        </div>\r\n        <div className=\"card-toolbar\">\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-success mr-2\"\r\n            disabled={\r\n              formik.isSubmitting || (formik.touched && !formik.isValid)\r\n            }\r\n          >\r\n            {intl.formatMessage({id: \"FORM.SAVE_CHANGES\"})}\r\n            {formik.isSubmitting}\r\n          </button>\r\n          <Link\r\n            to=\"/user-profile/personal-information\"\r\n            className=\"btn btn-secondary\"\r\n          >\r\n            {intl.formatMessage({id: \"FORM.CANCEL\"})}\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      {/* end::Header */}\r\n      {/* begin::Form */}\r\n      <div className=\"form\">\r\n        <div className=\"card-body\">\r\n          {/* begin::Heading */}\r\n          <div className=\"row\">\r\n            <label className=\"col-xl-3\"></label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <h5 className=\"font-weight-bold mb-6\">{intl.formatMessage({id: \"PROFILE.ACCOUNT\"})}:</h5>\r\n            </div>\r\n          </div>\r\n          {/* begin::Form Group */}\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label\">{intl.formatMessage({id: \"PROFILE.USERNAME\"})}</label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <div>\r\n                <input\r\n                  type=\"text\"\r\n                  className={`form-control form-control-lg form-control-solid ${getInputClasses(\r\n                    \"username\"\r\n                  )}`}\r\n                  name=\"username\"\r\n                  {...formik.getFieldProps(\"username\")}\r\n                />\r\n                {formik.touched.username && formik.errors.username ? (\r\n                  <div className=\"invalid-feedback\">\r\n                    {formik.errors.username}\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* begin::Form Group */}\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label\">\r\n              {intl.formatMessage({id: \"PROFILE.EMAIL_ADDRESS\"})}\r\n            </label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <div className=\"input-group input-group-lg input-group-solid\">\r\n                <div className=\"input-group-prepend\">\r\n                  <span className=\"input-group-text\">\r\n                    <i className=\"fa fa-at\"></i>\r\n                  </span>\r\n                </div>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Email\"\r\n                  className={`form-control form-control-lg form-control-solid ${getInputClasses(\r\n                    \"email\"\r\n                  )}`}\r\n                  name=\"email\"\r\n                  {...formik.getFieldProps(\"email\")}\r\n                />\r\n                {formik.touched.email && formik.errors.email ? (\r\n                  <div className=\"invalid-feedback\">{formik.errors.email}</div>\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* begin::Form Group */}\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label\">{intl.formatMessage({id: \"PROFILE.LANGUAGE\"})}</label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <select\r\n                className=\"form-control form-control-lg form-control-solid\"\r\n                name=\"language\"\r\n                {...formik.getFieldProps(\"language\")}\r\n              >\r\n                <option>Select Language...</option>\r\n                <option value=\"id\">Bahasa Indonesia - Indonesian</option>\r\n                <option value=\"msa\">Bahasa Melayu - Malay</option>\r\n                <option value=\"ca\">Català - Catalan</option>\r\n                <option value=\"cs\">Čeština - Czech</option>\r\n                <option value=\"da\">Dansk - Danish</option>\r\n                <option value=\"de\">Deutsch - German</option>\r\n                <option value=\"en\">English</option>\r\n                <option value=\"en-gb\">English UK - British English</option>\r\n                <option value=\"es\">Español - Spanish</option>\r\n                <option value=\"eu\">Euskara - Basque (beta)</option>\r\n                <option value=\"fil\">Filipino</option>\r\n                <option value=\"fr\">Français - French</option>\r\n                <option value=\"pt\">Português - Portuguese</option>\r\n                <option value=\"ro\">Română - Romanian</option>\r\n                <option value=\"ru\">Русский - Russian</option>\r\n                <option value=\"sr\">Српски - Serbian</option>\r\n                <option value=\"uk\">Українська мова - Ukrainian</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          {/* begin::Form Group */}\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label\">\r\n              {intl.formatMessage({id: \"PROFILE.TIMEZONE\"})}\r\n            </label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <select\r\n                className=\"form-control form-control-lg form-control-solid\"\r\n                name=\"timeZone\"\r\n                {...formik.getFieldProps(\"timeZone\")}\r\n              >\r\n                <option value=\"International Date Line West\">\r\n                  (GMT-11:00) International Date Line West\r\n                </option>\r\n                <option value=\"Midway Island\">(GMT-11:00) Midway Island</option>\r\n\r\n                <option value=\"Central America\">\r\n                  (GMT-06:00) Central America\r\n                </option>\r\n                <option value=\"Central Time (US &amp; Canada)\">\r\n                  (GMT-05:00) Central Time (US &amp; Canada)\r\n                </option>\r\n                <option value=\"Eastern Time (US &amp; Canada)\">\r\n                  (GMT-04:00) Eastern Time (US &amp; Canada)\r\n                </option>\r\n                <option value=\"Indiana (East)\">\r\n                  (GMT-04:00) Indiana (East)\r\n                </option>\r\n\r\n                <option value=\"Georgetown\">(GMT-04:00) Georgetown</option>\r\n\r\n                <option value=\"Buenos Aires\">(GMT-03:00) Buenos Aires</option>\r\n                <option value=\"Newfoundland\">(GMT-02:30) Newfoundland</option>\r\n                <option value=\"Mid-Atlantic\">(GMT-02:00) Mid-Atlantic</option>\r\n                <option value=\"Cape Verde Is.\">\r\n                  (GMT-01:00) Cape Verde Is.\r\n                </option>\r\n                <option value=\"UTC\">(GMT) UTC</option>\r\n                <option value=\"Dublin\">(GMT+01:00) Dublin</option>\r\n                <option value=\"Edinburgh\">(GMT+01:00) Edinburgh</option>\r\n                <option value=\"London\">(GMT+01:00) London</option>\r\n                <option value=\"Prague\">(GMT+02:00) Prague</option>\r\n                <option value=\"Helsinki\">(GMT+03:00) Helsinki</option>\r\n                <option value=\"Abu Dhabi\">(GMT+04:00) Abu Dhabi</option>\r\n                <option value=\"Tehran\">(GMT+04:30) Tehran</option>\r\n                <option value=\"Islamabad\">(GMT+05:00) Islamabad</option>\r\n                <option value=\"Karachi\">(GMT+05:00) Karachi</option>\r\n                <option value=\"Tashkent\">(GMT+05:00) Tashkent</option>\r\n                <option value=\"Kathmandu\">(GMT+05:45) Kathmandu</option>\r\n                <option value=\"Astana\">(GMT+06:00) Astana</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* end::Form */}\r\n    </form>\r\n  );\r\n}\r\nexport default connect(null, auth.actions)(AccountInformation);\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useIntl } from \"react-intl\";\r\nimport { useSelector, shallowEqual, connect } from \"react-redux\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport SVG from \"react-inlinesvg\";\r\nimport { ModalProgressBar } from \"../../../_metronic/_partials/controls\";\r\nimport { toAbsoluteUrl } from \"../../../_metronic/_helpers\";\r\nimport * as auth from \"../Auth\";\r\nimport { changePassword } from \"../Auth/_redux/authCrud\";\r\n\r\nfunction ChangePassword(props) {\r\n  const intl = useIntl();\r\n  // Fields\r\n  const [loading, setloading] = useState(false);\r\n  const [isError, setisError] = useState(false);\r\n  const [errMsg, setErrMsg] = useState(\"\");\r\n  const user = useSelector((state) => state.auth.user, shallowEqual);\r\n  useEffect(() => {}, [user]);\r\n  // Methods\r\n  const saveUser = (values, setStatus, setSubmitting) => {\r\n    setloading(true);\r\n    setisError(false);\r\n    changePassword({curPassword: values.currentPassword, newPassword: values.password, userId: user.id})\r\n    .then((res) => {\r\n      setloading(false);\r\n      setSubmitting(false);\r\n      // dispatch(props.setUser(updatedUser));\r\n    }).catch((err) => {\r\n      setloading(false);\r\n      setSubmitting(false);\r\n      setErrMsg(err.response.data.message);\r\n      setisError(true);\r\n    });\r\n  };\r\n  // UI Helpers\r\n  const initialValues = {\r\n    currentPassword: \"\",\r\n    password: \"\",\r\n    cPassword: \"\",\r\n  };\r\n  const Schema = Yup.object().shape({\r\n    currentPassword: Yup.string().required(\"Current password is required\"),\r\n    password: Yup.string().required(\"New Password is required\"),\r\n    cPassword: Yup.string()\r\n      .required(\"Password confirmation is required\")\r\n      .when(\"password\", {\r\n        is: (val) => (val && val.length > 0 ? true : false),\r\n        then: Yup.string().oneOf(\r\n          [Yup.ref(\"password\")],\r\n          \"Password and Confirm Password didn't match\"\r\n        ),\r\n      }),\r\n  });\r\n  const getInputClasses = (fieldname) => {\r\n    if (formik.touched[fieldname] && formik.errors[fieldname]) {\r\n      return \"is-invalid\";\r\n    }\r\n\r\n    if (formik.touched[fieldname] && !formik.errors[fieldname]) {\r\n      return \"is-valid\";\r\n    }\r\n\r\n    return \"\";\r\n  };\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema: Schema,\r\n    onSubmit: (values, { setStatus, setSubmitting }) => {\r\n      saveUser(values, setStatus, setSubmitting);\r\n    },\r\n    onReset: (values, { resetForm }) => {\r\n      resetForm();\r\n    },\r\n  });\r\n\r\n  return (\r\n    <form className=\"card card-custom\" onSubmit={formik.handleSubmit}>\r\n      {loading && <ModalProgressBar />}\r\n\r\n      {/* begin::Header */}\r\n      <div className=\"card-header py-3\">\r\n        <div className=\"card-title align-items-start flex-column\">\r\n          <h3 className=\"card-label font-weight-bolder text-dark\">\r\n            {intl.formatMessage({id: \"PROFILE.CHANGE_PASSWORD\"})}\r\n          </h3>\r\n          <span className=\"text-muted font-weight-bold font-size-sm mt-1\">\r\n            {intl.formatMessage({id: \"PROFILE.CHANGE_YOUR_PASSWORD\"})}\r\n          </span>\r\n        </div>\r\n        <div className=\"card-toolbar\">\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-success mr-2\"\r\n            disabled={\r\n              formik.isSubmitting || (formik.touched && !formik.isValid)\r\n            }\r\n          >\r\n            {intl.formatMessage({id: \"FORM.SAVE_CHANGES\"})}\r\n            {formik.isSubmitting}\r\n          </button>\r\n          <Link\r\n            to=\"/user-profile/profile-overview\"\r\n            className=\"btn btn-secondary\"\r\n          >\r\n            {intl.formatMessage({id: \"FORM.CANCEL\"})}\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      {/* end::Header */}\r\n      {/* begin::Form */}\r\n      <div className=\"form\">\r\n        <div className=\"card-body\">\r\n          {/* begin::Alert */}\r\n          {isError && (\r\n            <div\r\n              className=\"alert alert-custom alert-light-danger fade show mb-10\"\r\n              role=\"alert\"\r\n            >\r\n              <div className=\"alert-icon\">\r\n                <span className=\"svg-icon svg-icon-3x svg-icon-danger\">\r\n                  <SVG\r\n                    src={toAbsoluteUrl(\"/media/svg/icons/Code/Info-circle.svg\")}\r\n                  ></SVG>{\" \"}\r\n                </span>\r\n              </div>\r\n              <div className=\"alert-text font-weight-bold\">\r\n                {errMsg}\r\n              </div>\r\n              <div className=\"alert-close\" onClick={() => setisError(false)}>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"alert\"\r\n                  aria-label=\"Close\"\r\n                >\r\n                  <span aria-hidden=\"true\">\r\n                    <i className=\"ki ki-close\"></i>\r\n                  </span>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n          {/* end::Alert */}\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label text-alert\">\r\n              {intl.formatMessage({id: \"PROFILE.CURRENT_PASSWORD\"})}\r\n            </label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <input\r\n                type=\"password\"\r\n                placeholder={intl.formatMessage({id: \"PROFILE.CURRENT_PASSWORD\"})}\r\n                className={`form-control form-control-lg form-control-solid mb-2 ${getInputClasses(\r\n                  \"currentPassword\"\r\n                )}`}\r\n                name=\"currentPassword\"\r\n                {...formik.getFieldProps(\"currentPassword\")}\r\n              />\r\n              {formik.touched.currentPassword &&\r\n              formik.errors.currentPassword ? (\r\n                <div className=\"invalid-feedback\">\r\n                  {formik.errors.currentPassword}\r\n                </div>\r\n              ) : null}\r\n              <a href=\"#\" className=\"text-sm font-weight-bold\">\r\n                {intl.formatMessage({id: \"PROFILE.FORGOT_PASSWORD\"})} ?\r\n              </a>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label text-alert\">\r\n              {intl.formatMessage({id: \"PROFILE.NEW_PASSWORD\"})}\r\n            </label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <input\r\n                type=\"password\"\r\n                placeholder={intl.formatMessage({id: \"PROFILE.NEW_PASSWORD\"})}\r\n                className={`form-control form-control-lg form-control-solid ${getInputClasses(\r\n                  \"password\"\r\n                )}`}\r\n                name=\"password\"\r\n                {...formik.getFieldProps(\"password\")}\r\n              />\r\n              {formik.touched.password && formik.errors.password ? (\r\n                <div className=\"invalid-feedback\">{formik.errors.password}</div>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label text-alert\">\r\n              {intl.formatMessage({id: \"PROFILE.VERIFY_PASSWORD\"})}\r\n            </label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <input\r\n                type=\"password\"\r\n                placeholder={intl.formatMessage({id: \"PROFILE.VERIFY_PASSWORD\"})}\r\n                className={`form-control form-control-lg form-control-solid ${getInputClasses(\r\n                  \"cPassword\"\r\n                )}`}\r\n                name=\"cPassword\"\r\n                {...formik.getFieldProps(\"cPassword\")}\r\n              />\r\n              {formik.touched.cPassword && formik.errors.cPassword ? (\r\n                <div className=\"invalid-feedback\">\r\n                  {formik.errors.cPassword}\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* end::Form */}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default connect(null, auth.actions)(ChangePassword);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useIntl } from \"react-intl\";\r\nimport { useSelector, shallowEqual, connect, useDispatch } from \"react-redux\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { ModalProgressBar } from \"../../../_metronic/_partials/controls\";\r\nimport { toAbsoluteUrl } from \"../../../_metronic/_helpers\";\r\nimport * as auth from \"../Auth\";\r\nimport { updateUser } from \"../Auth/_redux/authCrud\";\r\n\r\nfunction PersonaInformation(props) {\r\n  const intl = useIntl();\r\n  // Fields\r\n  const [loading, setloading] = useState(false);\r\n  const [pic, setPic] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.auth.user, shallowEqual);\r\n  useEffect(() => {\r\n    if (user.pic) {\r\n      setPic(user.pic);\r\n    }\r\n  }, [user]);\r\n\r\n  // Methods\r\n  const saveUser = (values, setStatus, setSubmitting) => {\r\n    setloading(true);\r\n    let updatedUser = Object.assign(user, values);\r\n    updatedUser = { ...updatedUser, pic: pic };\r\n    let formData = new FormData();\r\n    for (const property in updatedUser) {\r\n      formData.append(property, updatedUser[property]);\r\n    }\r\n    updateUser(formData).then((res) => {\r\n      setloading(false);\r\n      setSubmitting(false);\r\n      // user for update preparation\r\n      const resUser = res.data;\r\n      resUser[\"id\"] = resUser._id;\r\n      delete resUser._id;\r\n      dispatch(props.setUser(resUser));\r\n    }).catch((err) => {\r\n      console.log(err);\r\n    });\r\n  };\r\n\r\n  // UI Helpers\r\n  const initialValues = {\r\n    pic: user.pic ? user.pic : \"\",\r\n    fullname: user.fullname,\r\n    companyName: user.companyName ? user.companyName : \"\",\r\n    phone: user.phone ? user.phone : \"\",\r\n    email: user.email,\r\n    website: user.website ? user.website : \"\",\r\n  };\r\n\r\n  const Schema = Yup.object().shape({\r\n    pic: Yup.string(),\r\n    fullname: Yup.string().required(\"Full name is required\"),\r\n    companyName: Yup.string(),\r\n    phone: Yup.string().required(\"Phone is required\"),\r\n    email: Yup.string()\r\n      .email(\"Wrong email format\")\r\n      .required(\"Email is required\"),\r\n    website: Yup.string(),\r\n  });\r\n\r\n  const getInputClasses = (fieldname) => {\r\n    if (formik.touched[fieldname] && formik.errors[fieldname]) {\r\n      return \"is-invalid\";\r\n    }\r\n\r\n    if (formik.touched[fieldname] && !formik.errors[fieldname]) {\r\n      return \"is-valid\";\r\n    }\r\n\r\n    return \"\";\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema: Schema,\r\n    onSubmit: (values, { setStatus, setSubmitting }) => {\r\n      saveUser(values, setStatus, setSubmitting);\r\n    },\r\n    onReset: (values, { resetForm }) => {\r\n      resetForm();\r\n    },\r\n  });\r\n\r\n  const getUserPic = () => {\r\n    if (!pic) {\r\n      return \"none\";\r\n    }\r\n\r\n    return `url(${pic.preview ? pic.preview : pic})`;\r\n  };\r\n\r\n  const removePic = () => {\r\n    setPic(\"\");\r\n  };\r\n\r\n  const changeAvatar = (e) => {\r\n    const picFile = e.target.files[0];\r\n    const picObj = Object.assign(picFile, {\r\n      preview: URL.createObjectURL(picFile)\r\n    });\r\n    setPic(picObj);\r\n  }\r\n  return (\r\n    <form\r\n      className=\"card card-custom card-stretch\"\r\n      onSubmit={formik.handleSubmit}\r\n    >\r\n      {loading && <ModalProgressBar />}\r\n\r\n      {/* begin::Header */}\r\n      <div className=\"card-header py-3\">\r\n        <div className=\"card-title align-items-start flex-column\">\r\n          <h3 className=\"card-label font-weight-bolder text-dark\">\r\n            {intl.formatMessage({id: \"PROFILE.PERSONAL_INFORMATION\"})}\r\n          </h3>\r\n          <span className=\"text-muted font-weight-bold font-size-sm mt-1\">\r\n            {intl.formatMessage({id: \"PROFILE.UPDATE_PERSONAL_INFORMATION\"})}\r\n          </span>\r\n        </div>\r\n        <div className=\"card-toolbar\">\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-success mr-2\"\r\n            disabled={\r\n              formik.isSubmitting || (formik.touched && !formik.isValid)\r\n            }\r\n          >\r\n            {intl.formatMessage({id: \"FORM.SAVE_CHANGES\"})}\r\n            {formik.isSubmitting}\r\n          </button>\r\n          <Link\r\n            to=\"/user-profile/personal-information\"\r\n            className=\"btn btn-secondary\"\r\n          >\r\n            {intl.formatMessage({id: \"FORM.CANCEL\"})}\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      {/* end::Header */}\r\n      {/* begin::Form */}\r\n      <div className=\"form\">\r\n        {/* begin::Body */}\r\n        <div className=\"card-body\">\r\n          <div className=\"row\">\r\n            <label className=\"col-xl-3\"></label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <h5 className=\"font-weight-bold mb-6\">{intl.formatMessage({id: \"PROFILE.CUSTOMER_INFO\"})}</h5>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label\">{intl.formatMessage({id: \"PROFILE.AVATAR\"})}</label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <div\r\n                className=\"image-input image-input-outline\"\r\n                id=\"kt_profile_avatar\"\r\n                style={{\r\n                  backgroundImage: `url(${toAbsoluteUrl(\r\n                    \"/media/users/blank.png\"\r\n                  )}`,\r\n                }}\r\n              >\r\n                <div\r\n                  className=\"image-input-wrapper\"\r\n                  style={{ backgroundImage: `${getUserPic()}` }}\r\n                />\r\n                <label\r\n                  className=\"btn btn-xs btn-icon btn-circle btn-white btn-hover-text-primary btn-shadow\"\r\n                  data-action=\"change\"\r\n                  data-toggle=\"tooltip\"\r\n                  title=\"\"\r\n                  data-original-title=\"Change avatar\"\r\n                >\r\n                  <i className=\"fa fa-pen icon-sm text-muted\"></i>\r\n                  <input\r\n                    type=\"file\"\r\n                    // name=\"pic\"\r\n                    accept=\".png, .jpg, .jpeg\"\r\n                    onChange={changeAvatar}\r\n                    // {...formik.getFieldProps(\"pic\")}\r\n                  />\r\n                  <input type=\"hidden\" name=\"profile_avatar_remove\" />\r\n                </label>\r\n                <span\r\n                  className=\"btn btn-xs btn-icon btn-circle btn-white btn-hover-text-primary btn-shadow\"\r\n                  data-action=\"cancel\"\r\n                  data-toggle=\"tooltip\"\r\n                  title=\"\"\r\n                  data-original-title=\"Cancel avatar\"\r\n                >\r\n                  <i className=\"ki ki-bold-close icon-xs text-muted\"></i>\r\n                </span>\r\n                <span\r\n                  onClick={removePic}\r\n                  className=\"btn btn-xs btn-icon btn-circle btn-white btn-hover-text-primary btn-shadow\"\r\n                  data-action=\"remove\"\r\n                  data-toggle=\"tooltip\"\r\n                  title=\"\"\r\n                  data-original-title=\"Remove avatar\"\r\n                >\r\n                  <i className=\"ki ki-bold-close icon-xs text-muted\"></i>\r\n                </span>\r\n              </div>\r\n              <span className=\"form-text text-muted\">\r\n                {intl.formatMessage({id: \"PROFILE.ALLOWED_FILE_TYPES\"})}: png, jpg, jpeg.\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label\">\r\n              {intl.formatMessage({id: \"PROFILE.FULL_NAME\"})}\r\n            </label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder={intl.formatMessage({id: \"PROFILE.FULL_NAME\"})}\r\n                className={`form-control form-control-lg form-control-solid ${getInputClasses(\r\n                  \"fullname\"\r\n                )}`}\r\n                name=\"fullname\"\r\n                {...formik.getFieldProps(\"fullname\")}\r\n              />\r\n              {formik.touched.fullname && formik.errors.fullname ? (\r\n                <div className=\"invalid-feedback\">\r\n                  {formik.errors.fullname}\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label\">\r\n              {intl.formatMessage({id: \"PROFILE.COMPANY_NAME\"})}\r\n            </label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder={intl.formatMessage({id: \"PROFILE.COMPANY_NAME\"})}\r\n                className={`form-control form-control-lg form-control-solid`}\r\n                name=\"companyName\"\r\n                {...formik.getFieldProps(\"companyName\")}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <label className=\"col-xl-3\"></label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <h5 className=\"font-weight-bold mt-10 mb-6\">{intl.formatMessage({id: \"PROFILE.CONTACT_INFO\"})}</h5>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label\">\r\n              {intl.formatMessage({id: \"PROFILE.CONTACT_PHONE\"})}\r\n            </label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <div className=\"input-group input-group-lg input-group-solid\">\r\n                <div className=\"input-group-prepend\">\r\n                  <span className=\"input-group-text\">\r\n                    <i className=\"fa fa-phone\"></i>\r\n                  </span>\r\n                </div>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"+1(123)112-11-11\"\r\n                  className={`form-control form-control-lg form-control-solid ${getInputClasses(\r\n                    \"phone\"\r\n                  )}`}\r\n                  name=\"phone\"\r\n                  {...formik.getFieldProps(\"phone\")}\r\n                />\r\n              </div>\r\n              {formik.touched.phone && formik.errors.phone ? (\r\n                <div className=\"invalid-feedback display-block\">\r\n                  {formik.errors.phone}\r\n                </div>\r\n              ) : null}\r\n              <span className=\"form-text text-muted\">\r\n                We'll never share your phone with anyone else.\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label\">\r\n              {intl.formatMessage({id: \"PROFILE.EMAIL_ADDRESS\"})}\r\n            </label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <div className=\"input-group input-group-lg input-group-solid\">\r\n                <div className=\"input-group-prepend\">\r\n                  <span className=\"input-group-text\">\r\n                    <i className=\"fa fa-at\"></i>\r\n                  </span>\r\n                </div>\r\n                <input\r\n                  type=\"email\"\r\n                  placeholder={intl.formatMessage({id: \"PROFILE.EMAIL\"})}\r\n                  className={`form-control form-control-lg form-control-solid ${getInputClasses(\r\n                    \"email\"\r\n                  )}`}\r\n                  name=\"email\"\r\n                  {...formik.getFieldProps(\"email\")}\r\n                />\r\n              </div>\r\n              {formik.touched.email && formik.errors.email ? (\r\n                <div className=\"invalid-feedback display-block\">\r\n                  {formik.errors.email}\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label\">\r\n              {intl.formatMessage({id: \"PROFILE.COMPANY_SITE\"})}\r\n            </label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <div className=\"input-group input-group-lg input-group-solid\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"https://keenthemes.com\"\r\n                  className={`form-control form-control-lg form-control-solid`}\r\n                  name=\"website\"\r\n                  {...formik.getFieldProps(\"website\")}\r\n                />\r\n              </div>\r\n              {formik.touched.website && formik.errors.website ? (\r\n                <div className=\"invalid-feedback display-block\">\r\n                  {formik.errors.website}\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* end::Body */}\r\n      </div>\r\n      {/* end::Form */}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default connect(null, auth.actions)(PersonaInformation);\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { useEffect } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useIntl } from \"react-intl\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport SVG from \"react-inlinesvg\";\r\nimport { toAbsoluteUrl } from \"../../../../_metronic/_helpers\";\r\n\r\nexport function ProfileCard() {\r\n  const intl = useIntl();\r\n  const user = useSelector(({ auth }) => auth.user, shallowEqual);\r\n\r\n  useEffect(() => {\r\n    return () => {};\r\n  }, [user]);\r\n\r\n  return (\r\n    <>\r\n      {user && (\r\n        <div\r\n          className=\"flex-row-auto offcanvas-mobile w-250px w-xxl-350px\"\r\n          id=\"kt_profile_aside\"\r\n        >\r\n          <div className=\"card card-custom card-stretch\">\r\n            {/* begin::Body */}\r\n            <div className=\"card-body pt-4\">\r\n              {/* begin::User */}\r\n              <div className=\"d-flex justify-content-center align-items-center\">\r\n                <div className=\"symbol symbol-60 symbol-xxl-100 mr-5 align-self-start align-self-xxl-center\">\r\n                  <div\r\n                    className=\"symbol-label\"\r\n                    style={{ backgroundImage: `url(${user.pic ? user.pic : toAbsoluteUrl(\"/media/users/blank.png\")}` }}\r\n                  ></div>\r\n                  {/* style=\"background-i\r\n                  mage:url('/metronic/theme/html/demo1/dist/assets/media/users/300_21.jpg')\" */}\r\n                  <i className=\"symbol-badge bg-success\"></i>\r\n                </div>\r\n              </div>\r\n              {/* end::User */}\r\n              {/* begin::Contact */}\r\n              <div className=\"py-9\">\r\n                <div className=\"d-flex align-items-center justify-content-between mb-2\">\r\n                  <span className=\"font-weight-bold mr-2\">{intl.formatMessage({id: \"PROFILE.EMAIL\"})}:</span>\r\n                  <span className=\"text-muted text-hover-primary\">\r\n                    {user.email}\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex align-items-center justify-content-between mb-2\">\r\n                  <span className=\"font-weight-bold mr-2\">{intl.formatMessage({id: \"PROFILE.PHONE\"})}:</span>\r\n                  <span className=\"text-muted\">{user.phone}</span>\r\n                </div>\r\n                <div className=\"d-flex align-items-center justify-content-between\">\r\n                  <span className=\"font-weight-bold mr-2\">{intl.formatMessage({id: \"PROFILE.LOCATION\"})}:</span>\r\n                  {/* <span className=\"text-muted\">{user.address.city}</span> */}\r\n                </div>\r\n              </div>\r\n              {/* end::Contact */}\r\n              {/* begin::Nav */}\r\n              <div className=\"navi navi-bold navi-hover navi-active navi-link-rounded\">\r\n                <div className=\"navi-item mb-2\">\r\n                  <NavLink\r\n                    to=\"/user-profile/personal-information\"\r\n                    className=\"navi-link py-4\"\r\n                    activeClassName=\"active\"\r\n                  >\r\n                    <span className=\"navi-icon mr-2\">\r\n                      <span className=\"svg-icon\">\r\n                        <SVG\r\n                          src={toAbsoluteUrl(\r\n                            \"/media/svg/icons/General/User.svg\"\r\n                          )}\r\n                        ></SVG>{\" \"}\r\n                      </span>\r\n                    </span>\r\n                    <span className=\"navi-text font-size-lg\">\r\n                      {intl.formatMessage({id: \"PROFILE.PERSONAL_INFORMATION\"})}\r\n                    </span>\r\n                  </NavLink>\r\n                </div>\r\n                <div className=\"navi-item mb-2\">\r\n                  <NavLink\r\n                    to=\"/user-profile/account-information\"\r\n                    className=\"navi-link py-4\"\r\n                    activeClassName=\"active\"\r\n                  >\r\n                    <span className=\"navi-icon mr-2\">\r\n                      <span className=\"svg-icon\">\r\n                        <SVG\r\n                          src={toAbsoluteUrl(\r\n                            \"/media/svg/icons/Code/Compiling.svg\"\r\n                          )}\r\n                        ></SVG>{\" \"}\r\n                      </span>\r\n                    </span>\r\n                    <span className=\"navi-text font-size-lg\">\r\n                      {intl.formatMessage({id: \"PROFILE.ACCOUNT_INFORMATION\"})}\r\n                    </span>\r\n                  </NavLink>\r\n                </div>\r\n                <div className=\"navi-item mb-2\">\r\n                  <NavLink\r\n                    to=\"/user-profile/change-password\"\r\n                    className=\"navi-link py-4\"\r\n                    activeClassName=\"active\"\r\n                  >\r\n                    <span className=\"navi-icon mr-2\">\r\n                      <span className=\"svg-icon\">\r\n                        <SVG\r\n                          src={toAbsoluteUrl(\r\n                            \"/media/svg/icons/Communication/Shield-user.svg\"\r\n                          )}\r\n                        ></SVG>{\" \"}\r\n                      </span>\r\n                    </span>\r\n                    <span className=\"navi-text font-size-lg\">\r\n                      {intl.formatMessage({id: \"PROFILE.CHANGE_PASSWORD\"})}\r\n                    </span>\r\n                  </NavLink>\r\n                </div>\r\n              </div>\r\n              {/* end::Nav */}\r\n            </div>\r\n            {/* end::Body */}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport AccountInformation from \"./AccountInformation\";\r\nimport ChangePassword from \"./ChangePassword\";\r\nimport PersonaInformation from \"./PersonaInformation\";\r\nimport { ProfileCard } from \"./components/ProfileCard\";\r\n\r\nexport default function UserProfilePage() {\r\n  const suhbeader = useSubheader();\r\n  suhbeader.setTitle(\"User profile\");\r\n\r\n  return (\r\n    <div className=\"d-flex flex-row\">\r\n      <ProfileCard></ProfileCard>\r\n      <div className=\"flex-row-fluid ml-lg-8\">\r\n        <Switch>\r\n          <Redirect\r\n            from=\"/user-profile\"\r\n            exact={true}\r\n            to=\"/user-profile/personal-information\"\r\n          />\r\n          <Route\r\n            path=\"/user-profile/account-information\"\r\n            component={AccountInformation}\r\n          />\r\n          <Route\r\n            path=\"/user-profile/change-password\"\r\n            component={ChangePassword}\r\n          />\r\n          <Route\r\n            path=\"/user-profile/personal-information\"\r\n            component={PersonaInformation}\r\n          />\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}