{"version":3,"sources":["app/modules/ECommerce/pages/customers/customers-loading-dialog/CustomersLoadingDialog.js","app/modules/ECommerce/_redux/customers/customersSlice.js","app/modules/ECommerce/_redux/customers/customersActions.js","app/modules/ECommerce/_redux/customers/customersCrud.js","app/modules/ECommerce/pages/customers/customer-edit-dialog/CustomerEditDialogHeader.js","app/modules/ECommerce/pages/customers/customer-edit-dialog/CustomerEditForm.js","app/modules/ECommerce/pages/customers/CustomersUIHelpers.js","app/modules/ECommerce/pages/customers/CustomersUIContext.js","app/modules/ECommerce/pages/customers/customer-edit-dialog/CustomerEditDialog.js","app/modules/ECommerce/pages/customers/customer-delete-dialog/CustomerDeleteDialog.js","app/modules/ECommerce/pages/customers/customers-delete-dialog/CustomersDeleteDialog.js","app/modules/ECommerce/pages/customers/customers-fetch-dialog/CustomersFetchDialog.js","app/modules/ECommerce/pages/customers/customers-update-status-dialog/CustomersUpdateStateDialog.js","app/modules/ECommerce/pages/customers/customers-filter/CustomersFilter.js","app/modules/ECommerce/pages/customers/customers-table/column-formatters/StatusColumnFormatter.js","app/modules/ECommerce/pages/customers/customers-table/column-formatters/TypeColumnFormatter.js","app/modules/ECommerce/pages/customers/customers-table/column-formatters/ActionsColumnFormatter.js","app/modules/ECommerce/pages/customers/customers-table/CustomersTable.js","app/modules/ECommerce/pages/customers/customers-grouping/CustomersGrouping.js","app/modules/ECommerce/pages/customers/CustomersCard.js","app/modules/ECommerce/pages/customers/CustomersPage.js","app/modules/ECommerce/pages/products/products-loading-dialog/ProductsLoadingDialog.js","app/modules/ECommerce/_redux/products/productsSlice.js","app/modules/ECommerce/_redux/products/productsActions.js","app/modules/ECommerce/_redux/products/productsCrud.js","app/modules/ECommerce/pages/products/ProductsUIHelpers.js","app/modules/ECommerce/pages/products/ProductsUIContext.js","app/modules/ECommerce/pages/products/product-delete-dialog/ProductDeleteDialog.js","app/modules/ECommerce/pages/products/products-delete-dialog/ProductsDeleteDialog.js","app/modules/ECommerce/pages/products/products-fetch-dialog/ProductsFetchDialog.js","app/modules/ECommerce/pages/products/products-update-status-dialog/ProductsUpdateStatusDialog.js","app/modules/ECommerce/pages/products/products-filter/ProductsFilter.js","app/modules/ECommerce/pages/products/products-table/column-formatters/StatusColumnFormatter.js","app/modules/ECommerce/pages/products/products-table/column-formatters/ConditionColumnFormatter.js","app/modules/ECommerce/pages/products/products-table/column-formatters/ColorColumnFormatter.js","app/modules/ECommerce/pages/products/products-table/column-formatters/PriceColumnFormatter.js","app/modules/ECommerce/pages/products/products-table/column-formatters/ActionsColumnFormatter.js","app/modules/ECommerce/pages/products/products-table/ProductsTable.js","app/modules/ECommerce/pages/products/products-grouping/ProductsGrouping.js","app/modules/ECommerce/pages/products/ProductsCard.js","app/modules/ECommerce/pages/products/ProductsPage.js","app/modules/ECommerce/pages/products/product-edit/ProductEditForm.js","app/modules/ECommerce/pages/products/product-specifications/SpecificationsUIHelper.js","app/modules/ECommerce/pages/products/product-specifications/SpecificationsUIContext.js","app/modules/ECommerce/pages/products/product-specifications/SpecificationsFilter.js","app/modules/ECommerce/_redux/specifications/specificationsSlice.js","app/modules/ECommerce/_redux/specifications/specificationsActions.js","app/modules/ECommerce/_redux/specifications/specificationsCrud.js","app/modules/ECommerce/pages/products/product-specifications/column-formatters/ActionsColumnFormatter.js","app/modules/ECommerce/pages/products/product-specifications/SpecificationsTable.js","app/modules/ECommerce/pages/products/product-specifications/SpecificationsLoadingDialog.js","app/modules/ECommerce/pages/products/product-specifications/SpecificationsDeleteDialog.js","app/modules/ECommerce/pages/products/product-specifications/SpecificationDeleteDialog.js","app/modules/ECommerce/pages/products/product-specifications/SpecificationsFetchDialog.js","app/modules/ECommerce/pages/products/product-specifications/SpecificationsGrouping.js","app/modules/ECommerce/pages/products/product-specifications/specification-edit-dialog/SpecificationEditDialogHeader.js","app/modules/ECommerce/pages/products/product-specifications/specification-edit-dialog/SpecificationEditForm.js","app/modules/ECommerce/pages/products/product-specifications/specification-edit-dialog/SpecificationEditDialog.js","app/modules/ECommerce/pages/products/product-specifications/Specifications.js","app/modules/ECommerce/pages/products/product-remarks/RemarksUIHelper.js","app/modules/ECommerce/pages/products/product-remarks/RemarksUIContext.js","app/modules/ECommerce/pages/products/product-remarks/RemarksFilter.js","app/modules/ECommerce/_redux/remarks/remarksSlice.js","app/modules/ECommerce/_redux/remarks/remarksActions.js","app/modules/ECommerce/_redux/remarks/remarksCrud.js","app/modules/ECommerce/pages/products/product-remarks/column-formatters/ActionsColumnFormatter.js","app/modules/ECommerce/pages/products/product-remarks/RemarksTable.js","app/modules/ECommerce/pages/products/product-remarks/RemarksLoadingDialog.js","app/modules/ECommerce/pages/products/product-remarks/RemarksDeleteDialog.js","app/modules/ECommerce/pages/products/product-remarks/RemarkDeleteDialog.js","app/modules/ECommerce/pages/products/product-remarks/RemarksFetchDialog.js","app/modules/ECommerce/pages/products/product-remarks/RemarksGrouping.js","app/modules/ECommerce/pages/products/product-remarks/remark-edit-dialog/RemarkEditDialogHeader.js","app/modules/ECommerce/pages/products/product-remarks/remark-edit-dialog/RemarkEditForm.js","app/modules/ECommerce/pages/products/product-remarks/remark-edit-dialog/RemarkEditDialog.js","app/modules/ECommerce/pages/products/product-remarks/Remarks.js","app/modules/ECommerce/pages/products/product-edit/ProductEdit.js","app/modules/ECommerce/pages/eCommercePage.js"],"names":["CustomersLoadingDialog","isLoading","useSelector","state","customers","listLoading","shallowEqual","useEffect","text","initialCustomersState","actionsLoading","totalCount","entities","customerForEdit","undefined","lastError","callTypes","actions","createSlice","name","initialState","reducers","catchError","action","error","type","payload","callType","startCall","customerFetched","customersFetched","customerCreated","ewactionsLoading","push","customer","customerUpdated","map","entity","id","customerDeleted","filter","el","customersDeleted","ids","includes","customersStatusUpdated","status","findIndex","fetchCustomers","queryParams","dispatch","axios","post","requestFromServer","then","response","data","catch","clientMessage","fetchCustomer","customerId","get","deleteCustomer","delete","createCustomer","customerForCreation","updateCustomer","put","updateCustomersStatus","deleteCustomers","CustomerEditDialogHeader","useState","title","setTitle","_title","firstName","lastName","Modal","Header","closeButton","Title","CustomerEditSchema","Yup","shape","min","max","required","email","userName","dateOfBbirth","nullable","ipAddress","CustomerEditForm","saveCustomer","onHide","enableReinitialize","initialValues","validationSchema","onSubmit","values","handleSubmit","Body","className","component","Input","placeholder","label","customFeedbackLabel","value","Footer","onClick","CustomerStatusCssClasses","CustomerStatusTitles","CustomerTypeCssClasses","CustomerTypeTitles","defaultSorted","dataField","order","sizePerPageList","initialFilter","sortOrder","sortField","pageNumber","pageSize","CustomersUIContext","createContext","useCustomersUIContext","useContext","Consumer","CustomersUIProvider","customersUIEvents","children","setQueryParamsBase","setIds","setQueryParams","useCallback","nextQueryParams","prevQueryParams","isFunction","isEqual","initCustomer","gender","newCustomerButtonClick","openEditCustomerDialog","openDeleteCustomerDialog","openDeleteCustomersDialog","openFetchCustomersDialog","openUpdateCustomersStatusDialog","Provider","CustomerEditDialog","show","customersUIContext","customersUIProps","useMemo","useDispatch","size","aria-labelledby","CustomerDeleteDialog","CustomersDeleteDialog","length","selectedCustomers","_customers","forEach","find","CustomersFetchDialog","key","CustomersUpdateStateDialog","setStatus","onChange","e","target","CustomersFilter","applyFilter","newQueryParams","searchText","prepareFilter","handleBlur","setFieldValue","handleChange","onBlur","StatusColumnFormatter","cellContent","row","TypeColumnFormatter","ActionsColumnFormatter","rowIndex","src","toAbsoluteUrl","CustomersTable","currentState","columns","sort","sortCaret","headerSortingClasses","formatter","columnFormatters","formatExtraData","classes","headerClasses","style","minWidth","paginationOptions","custom","totalSize","uiHelpers","sizePerPage","page","pagination","paginationFactory","paginationProps","paginationTableProps","wrapperClasses","bordered","bootstrap4","remote","keyField","onTableChange","getHandlerTableChange","selectRow","getSelectRow","CustomersGrouping","CustomersCard","CustomersPage","history","path","match","params","ProductsLoadingDialog","products","initialProductsState","productForEdit","productFetched","productsFetched","productCreated","product","productUpdated","productDeleted","productsDeleted","productsStatusUpdated","fetchProducts","fetchProduct","productId","deleteProduct","createProduct","productForCreation","updateProduct","updateProductsStatus","deleteProducts","ProductStatusCssClasses","ProductStatusTitles","ProductConditionCssClasses","ProductConditionTitles","model","manufacture","VINCode","AVAILABLE_COLORS","AVAILABLE_MANUFACTURES","ProductsUIContext","useProductsUIContext","ProductsUIProvider","productsUIEvents","newProductButtonClick","openEditProductPage","openDeleteProductDialog","openDeleteProductsDialog","openFetchProductsDialog","openUpdateProductsStatusDialog","ProductDeleteDialog","productsUIContext","productsUIProps","variant","ProductsDeleteDialog","selectedProducts","_products","ProductsFetchDialog","width","ProductsUpdateStatusDialog","ProductsFilter","condition","ConditionColumnFormatter","ColorColumnFormatter","color","PriceColumnFormatter","price","OverlayTrigger","overlay","Tooltip","ProductsTable","ProductsGrouping","ProductsCard","ProductsPage","ProductEditSchema","modelYear","mileage","ProductEditForm","btnRef","saveProduct","index","as","display","ref","SPECIFICATIONS_DICTIONARY","SpecificationsUIContext","useSpecificationsUIContext","SpecificationsUIProvider","currentProductId","setProductId","selectedId","setSelectedId","initSpecification","specId","carId","showEditSpecificationDialog","setShowEditSpecificationDialog","showDeleteSpecificationDialog","setShowDeleteSpecificationDialog","showDeleteSpecificationsDialog","setShowDeleteSpecificationsDialog","showFetchSpecificationsDialog","setShowFetchSpecificationsDialog","openEditSpecificationDialog","openNewSpecificationDialog","closeEditSpecificationDialog","openDeleteSpecificationDialog","closeDeleteSpecificationDialog","openDeleteSpecificationsDialog","closeDeleteSpecificationsDialog","openFetchSpecificationsDialog","closeFetchSpecificationsDialog","SpecificationsFilter","specsUIContext","specsUIProps","initialSpecificationsState","specificationForEdit","specificationFetched","specificationsFetched","specificationCreated","specification","specificationUpdated","specificationDeleted","specificationsDeleted","fetchSpecifications","fetchSpecification","specificationId","deleteSpecification","createSpecification","specificationForCreation","updateSpecification","deleteSpecifications","SpecificationsTable","specifications","SpecificationsLoadingDialog","SpecificationsDeleteDialog","SpecificationDeleteDialog","selectedSpecifications","_specifications","SpecificationsFetchDialog","SpecificationsGrouping","SpecificationEditDialogHeader","SpecificationEditSchema","SpecificationEditForm","saveSpecification","spec","SpecificationEditDialog","Specifications","RemarksUIContext","useRemarksUIContext","RemarksUIProvider","showEditRemarkDialog","setShowEditRemarkDialog","initRemark","dueDate","showDeleteRemarkDialog","setShowDeleteRemarkDialog","showDeleteRemarksDialog","setShowDeleteRemarksDialog","showFetchRemarksDialog","setShowFetchRemarksDialog","openNewRemarkDialog","openEditRemarkDialog","closeEditRemarkDialog","openDeleteRemarkDialog","closeDeleteRemarkDialog","openDeleteRemarksDialog","closeDeleteRemarksDialog","openFetchRemarksDialog","closeFetchRemarksDialog","RemarksFilter","remarksUIContext","remarksUIProps","initialRemarksState","remarkForEdit","remarkFetched","remarksFetched","remarkCreated","remark","remarkUpdated","remarkDeleted","remarksDeleted","remarksStatusUpdated","fetchRemarks","fetchRemark","remarkId","deleteRemark","createRemark","remarkForCreation","updateRemark","deleteRemarks","console","log","RemarksTable","remarks","RemarksLoadingDialog","RemarksDeleteDialog","RemarkDeleteDialog","selectedRemarks","_remarks","RemarksFetchDialog","RemarksGrouping","RemarkEditDialogHeader","RemarkEditSchema","RemarkEditForm","saveRemark","RemarkEditDialog","date","year","getFullYear","month","getMonth","toString","day","getDate","getFormattedDate","Remarks","initProduct","description","ProductEdit","suhbeader","useSubheader","tab","setTab","useRef","backToProductsList","current","click","role","data-toggle","aria-selected","eCommercePage","fallback","exact","from","to"],"mappings":"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","file":"static/js/5.d6ff7677.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport { LoadingDialog } from \"../../../../../../_metronic/_partials/controls\";\r\n\r\nexport function CustomersLoadingDialog() {\r\n  // Customers Redux state\r\n  const { isLoading } = useSelector(\r\n    (state) => ({ isLoading: state.customers.listLoading }),\r\n    shallowEqual\r\n  );\r\n  // looking for loading/dispatch\r\n  useEffect(() => {}, [isLoading]);\r\n  return <LoadingDialog isLoading={isLoading} text=\"Loading ...\" />;\r\n}\r\n","import {createSlice} from \"@reduxjs/toolkit\";\r\n\r\nconst initialCustomersState = {\r\n  listLoading: false,\r\n  actionsLoading: false,\r\n  totalCount: 0,\r\n  entities: null,\r\n  customerForEdit: undefined,\r\n  lastError: null\r\n};\r\nexport const callTypes = {\r\n  list: \"list\",\r\n  action: \"action\"\r\n};\r\n\r\nexport const customersSlice = createSlice({\r\n  name: \"customers\",\r\n  initialState: initialCustomersState,\r\n  reducers: {\r\n    catchError: (state, action) => {\r\n      state.error = `${action.type}: ${action.payload.error}`;\r\n      if (action.payload.callType === callTypes.list) {\r\n        state.listLoading = false;\r\n      } else {\r\n        state.actionsLoading = false;\r\n      }\r\n    },\r\n    startCall: (state, action) => {\r\n      state.error = null;\r\n      if (action.payload.callType === callTypes.list) {\r\n        state.listLoading = true;\r\n      } else {\r\n        state.actionsLoading = true;\r\n      }\r\n    },\r\n    // getCustomerById\r\n    customerFetched: (state, action) => {\r\n      state.actionsLoading = false;\r\n      state.customerForEdit = action.payload.customerForEdit;\r\n      state.error = null;\r\n    },\r\n    // findCustomers\r\n    customersFetched: (state, action) => {\r\n      const { totalCount, entities } = action.payload;\r\n      state.listLoading = false;\r\n      state.error = null;\r\n      state.entities = entities;\r\n      state.totalCount = totalCount;\r\n    },\r\n    // createCustomer\r\n    customerCreated: (state, action) => {\r\n      state.ewactionsLoading = false;\r\n      state.error = null;\r\n      state.entities.push(action.payload.customer);\r\n    },\r\n    // updateCustomer\r\n    customerUpdated: (state, action) => {\r\n      state.error = null;\r\n      state.actionsLoading = false;\r\n      state.entities = state.entities.map(entity => {\r\n        if (entity.id === action.payload.customer.id) {\r\n          return action.payload.customer;\r\n        }\r\n        return entity;\r\n      });\r\n    },\r\n    // deleteCustomer\r\n    customerDeleted: (state, action) => {\r\n      state.error = null;\r\n      state.actionsLoading = false;\r\n      state.entities = state.entities.filter(el => el.id !== action.payload.id);\r\n    },\r\n    // deleteCustomers\r\n    customersDeleted: (state, action) => {\r\n      state.error = null;\r\n      state.actionsLoading = false;\r\n      state.entities = state.entities.filter(\r\n        el => !action.payload.ids.includes(el.id)\r\n      );\r\n    },\r\n    // customersUpdateState\r\n    customersStatusUpdated: (state, action) => {\r\n      state.actionsLoading = false;\r\n      state.error = null;\r\n      const { ids, status } = action.payload;\r\n      state.entities = state.entities.map(entity => {\r\n        if (ids.findIndex(id => id === entity.id) > -1) {\r\n          entity.status = status;\r\n        }\r\n        return entity;\r\n      });\r\n    }\r\n  }\r\n});\r\n","import * as requestFromServer from \"./customersCrud\";\r\nimport {customersSlice, callTypes} from \"./customersSlice\";\r\n\r\nconst {actions} = customersSlice;\r\n\r\nexport const fetchCustomers = queryParams => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.list }));\r\n  return requestFromServer\r\n    .findCustomers(queryParams)\r\n    .then(response => {\r\n      const { totalCount, entities } = response.data;\r\n      dispatch(actions.customersFetched({ totalCount, entities }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't find customers\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.list }));\r\n    });\r\n};\r\n\r\nexport const fetchCustomer = id => dispatch => {\r\n  if (!id) {\r\n    return dispatch(actions.customerFetched({ customerForEdit: undefined }));\r\n  }\r\n\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .getCustomerById(id)\r\n    .then(response => {\r\n      const customer = response.data;\r\n      dispatch(actions.customerFetched({ customerForEdit: customer }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't find customer\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const deleteCustomer = id => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .deleteCustomer(id)\r\n    .then(response => {\r\n      dispatch(actions.customerDeleted({ id }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't delete customer\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const createCustomer = customerForCreation => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .createCustomer(customerForCreation)\r\n    .then(response => {\r\n      const { customer } = response.data;\r\n      dispatch(actions.customerCreated({ customer }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't create customer\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const updateCustomer = customer => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .updateCustomer(customer)\r\n    .then(() => {\r\n      dispatch(actions.customerUpdated({ customer }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't update customer\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const updateCustomersStatus = (ids, status) => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .updateStatusForCustomers(ids, status)\r\n    .then(() => {\r\n      dispatch(actions.customersStatusUpdated({ ids, status }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't update customers status\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const deleteCustomers = ids => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .deleteCustomers(ids)\r\n    .then(() => {\r\n      dispatch(actions.customersDeleted({ ids }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't delete customers\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport const CUSTOMERS_URL = \"api/customers\";\r\n\r\n// CREATE =>  POST: add a new customer to the server\r\nexport function createCustomer(customer) {\r\n  return axios.post(CUSTOMERS_URL, { customer });\r\n}\r\n\r\n// READ\r\nexport function getAllCustomers() {\r\n  return axios.get(CUSTOMERS_URL);\r\n}\r\n\r\nexport function getCustomerById(customerId) {\r\n  return axios.get(`${CUSTOMERS_URL}/${customerId}`);\r\n}\r\n\r\n// Method from server should return QueryResultsModel(items: any[], totalsCount: number)\r\n// items => filtered/sorted result\r\nexport function findCustomers(queryParams) {\r\n  return axios.post(`${CUSTOMERS_URL}/find`, { queryParams });\r\n}\r\n\r\n// UPDATE => PUT: update the customer on the server\r\nexport function updateCustomer(customer) {\r\n  return axios.put(`${CUSTOMERS_URL}/${customer.id}`, { customer });\r\n}\r\n\r\n// UPDATE Status\r\nexport function updateStatusForCustomers(ids, status) {\r\n  return axios.post(`${CUSTOMERS_URL}/updateStatusForCustomers`, {\r\n    ids,\r\n    status\r\n  });\r\n}\r\n\r\n// DELETE => delete the customer from the server\r\nexport function deleteCustomer(customerId) {\r\n  return axios.delete(`${CUSTOMERS_URL}/${customerId}`);\r\n}\r\n\r\n// DELETE Customers by ids\r\nexport function deleteCustomers(ids) {\r\n  return axios.post(`${CUSTOMERS_URL}/deleteCustomers`, { ids });\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport {ModalProgressBar} from \"../../../../../../_metronic/_partials/controls\";\r\n\r\nexport function CustomerEditDialogHeader({ id }) {\r\n  // Customers Redux state\r\n  const { customerForEdit, actionsLoading } = useSelector(\r\n    (state) => ({\r\n      customerForEdit: state.customers.customerForEdit,\r\n      actionsLoading: state.customers.actionsLoading,\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  const [title, setTitle] = useState(\"\");\r\n  // Title couting\r\n  useEffect(() => {\r\n    let _title = id ? \"\" : \"New Customer\";\r\n    if (customerForEdit && id) {\r\n      _title = `Edit customer '${customerForEdit.firstName} ${customerForEdit.lastName}'`;\r\n    }\r\n\r\n    setTitle(_title);\r\n    // eslint-disable-next-line\r\n  }, [customerForEdit, actionsLoading]);\r\n\r\n  return (\r\n    <>\r\n      {actionsLoading && <ModalProgressBar />}\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">{title}</Modal.Title>\r\n      </Modal.Header>\r\n    </>\r\n  );\r\n}\r\n","// Form is based on Formik\r\n// Data validation is based on Yup\r\n// Please, be familiar with article first:\r\n// https://hackernoon.com/react-form-validation-with-formik-and-yup-8b76bda62e10\r\nimport React from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n  Input,\r\n  Select,\r\n  DatePickerField,\r\n} from \"../../../../../../_metronic/_partials/controls\";\r\n\r\n// Validation schema\r\nconst CustomerEditSchema = Yup.object().shape({\r\n  firstName: Yup.string()\r\n    .min(3, \"Minimum 3 symbols\")\r\n    .max(50, \"Maximum 50 symbols\")\r\n    .required(\"Firstname is required\"),\r\n  lastName: Yup.string()\r\n    .min(3, \"Minimum 3 symbols\")\r\n    .max(50, \"Maximum 50 symbols\")\r\n    .required(\"Lastname is required\"),\r\n  email: Yup.string()\r\n    .email(\"Invalid email\")\r\n    .required(\"Email is required\"),\r\n  userName: Yup.string().required(\"Username is required\"),\r\n  dateOfBbirth: Yup.mixed()\r\n    .nullable(false)\r\n    .required(\"Date of Birth is required\"),\r\n  ipAddress: Yup.string().required(\"IP Address is required\"),\r\n});\r\n\r\nexport function CustomerEditForm({\r\n  saveCustomer,\r\n  customer,\r\n  actionsLoading,\r\n  onHide,\r\n}) {\r\n  return (\r\n    <>\r\n      <Formik\r\n        enableReinitialize={true}\r\n        initialValues={customer}\r\n        validationSchema={CustomerEditSchema}\r\n        onSubmit={(values) => {\r\n          saveCustomer(values);\r\n        }}\r\n      >\r\n        {({ handleSubmit }) => (\r\n          <>\r\n            <Modal.Body className=\"overlay overlay-block cursor-default\">\r\n              {actionsLoading && (\r\n                <div className=\"overlay-layer bg-transparent\">\r\n                  <div className=\"spinner spinner-lg spinner-success\" />\r\n                </div>\r\n              )}\r\n              <Form className=\"form form-label-right\">\r\n                <div className=\"form-group row\">\r\n                  {/* First Name */}\r\n                  <div className=\"col-lg-4\">\r\n                    <Field\r\n                      name=\"firstName\"\r\n                      component={Input}\r\n                      placeholder=\"First Name\"\r\n                      label=\"First Name\"\r\n                    />\r\n                  </div>\r\n                  {/* Last Name */}\r\n                  <div className=\"col-lg-4\">\r\n                    <Field\r\n                      name=\"lastName\"\r\n                      component={Input}\r\n                      placeholder=\"Last Name\"\r\n                      label=\"Last Name\"\r\n                    />\r\n                  </div>\r\n                  {/* Login */}\r\n                  <div className=\"col-lg-4\">\r\n                    <Field\r\n                      name=\"userName\"\r\n                      component={Input}\r\n                      placeholder=\"Login\"\r\n                      label=\"Login\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                {/* Email */}\r\n                <div className=\"form-group row\">\r\n                  <div className=\"col-lg-4\">\r\n                    <Field\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      component={Input}\r\n                      placeholder=\"Email\"\r\n                      label=\"Email\"\r\n                    />\r\n                  </div>\r\n                  {/* Date of birth */}\r\n                  <div className=\"col-lg-4\">\r\n                    <DatePickerField\r\n                      name=\"dateOfBbirth\"\r\n                      label=\"Date of Birth\"\r\n                    />\r\n                  </div>\r\n                  {/* IP Address */}\r\n                  <div className=\"col-lg-4\">\r\n                    <Field\r\n                      name=\"ipAddress\"\r\n                      component={Input}\r\n                      placeholder=\"IP Address\"\r\n                      label=\"IP Address\"\r\n                      customFeedbackLabel=\"We'll never share customer IP Address with anyone else\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                  {/* Gender */}\r\n                  <div className=\"col-lg-4\">\r\n                    <Select name=\"Gender\" label=\"Gender\">\r\n                      <option value=\"Female\">Female</option>\r\n                      <option value=\"Male\">Male</option>\r\n                    </Select>\r\n                  </div>\r\n                  {/* Type */}\r\n                  <div className=\"col-lg-4\">\r\n                    <Select name=\"type\" label=\"Type\">\r\n                      <option value=\"0\">Business</option>\r\n                      <option value=\"1\">Individual</option>\r\n                    </Select>\r\n                  </div>\r\n                </div>\r\n              </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <button\r\n                type=\"button\"\r\n                onClick={onHide}\r\n                className=\"btn btn-light btn-elevate\"\r\n              >\r\n                Cancel\r\n              </button>\r\n              <> </>\r\n              <button\r\n                type=\"submit\"\r\n                onClick={() => handleSubmit()}\r\n                className=\"btn btn-primary btn-elevate\"\r\n              >\r\n                Save\r\n              </button>\r\n            </Modal.Footer>\r\n          </>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n","export const CustomerStatusCssClasses = [\"danger\", \"success\", \"info\", \"\"];\r\nexport const CustomerStatusTitles = [\"Suspended\", \"Active\", \"Pending\", \"\"];\r\nexport const CustomerTypeCssClasses = [\"success\", \"primary\", \"\"];\r\nexport const CustomerTypeTitles = [\"Business\", \"Individual\", \"\"];\r\nexport const defaultSorted = [{ dataField: \"id\", order: \"asc\" }];\r\nexport const sizePerPageList = [\r\n  { text: \"3\", value: 3 },\r\n  { text: \"5\", value: 5 },\r\n  { text: \"10\", value: 10 }\r\n];\r\nexport const initialFilter = {\r\n  filter: {\r\n    lastName: \"\",\r\n    firstName: \"\",\r\n    email: \"\",\r\n    ipAddress: \"\"\r\n  },\r\n  sortOrder: \"asc\", // asc||desc\r\n  sortField: \"id\",\r\n  pageNumber: 1,\r\n  pageSize: 10\r\n};\r\n","import React, {createContext, useContext, useState, useCallback} from \"react\";\r\nimport {isEqual, isFunction} from \"lodash\";\r\nimport {initialFilter} from \"./CustomersUIHelpers\";\r\n\r\nconst CustomersUIContext = createContext();\r\n\r\nexport function useCustomersUIContext() {\r\n  return useContext(CustomersUIContext);\r\n}\r\n\r\nexport const CustomersUIConsumer = CustomersUIContext.Consumer;\r\n\r\nexport function CustomersUIProvider({customersUIEvents, children}) {\r\n  const [queryParams, setQueryParamsBase] = useState(initialFilter);\r\n  const [ids, setIds] = useState([]);\r\n  const setQueryParams = useCallback(nextQueryParams => {\r\n    setQueryParamsBase(prevQueryParams => {\r\n      if (isFunction(nextQueryParams)) {\r\n        nextQueryParams = nextQueryParams(prevQueryParams);\r\n      }\r\n\r\n      if (isEqual(prevQueryParams, nextQueryParams)) {\r\n        return prevQueryParams;\r\n      }\r\n\r\n      return nextQueryParams;\r\n    });\r\n  }, []);\r\n\r\n  const initCustomer = {\r\n    id: undefined,\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    userName: \"\",\r\n    gender: \"Female\",\r\n    status: 0,\r\n    dateOfBbirth: \"\",\r\n    ipAddress: \"\",\r\n    type: 1\r\n  };\r\n\r\n  const value = {\r\n    queryParams,\r\n    setQueryParamsBase,\r\n    ids,\r\n    setIds,\r\n    setQueryParams,\r\n    initCustomer,\r\n    newCustomerButtonClick: customersUIEvents.newCustomerButtonClick,\r\n    openEditCustomerDialog: customersUIEvents.openEditCustomerDialog,\r\n    openDeleteCustomerDialog: customersUIEvents.openDeleteCustomerDialog,\r\n    openDeleteCustomersDialog: customersUIEvents.openDeleteCustomersDialog,\r\n    openFetchCustomersDialog: customersUIEvents.openFetchCustomersDialog,\r\n    openUpdateCustomersStatusDialog: customersUIEvents.openUpdateCustomersStatusDialog\r\n  };\r\n\r\n  return <CustomersUIContext.Provider value={value}>{children}</CustomersUIContext.Provider>;\r\n}","import React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../../_redux/customers/customersActions\";\r\nimport { CustomerEditDialogHeader } from \"./CustomerEditDialogHeader\";\r\nimport { CustomerEditForm } from \"./CustomerEditForm\";\r\nimport { useCustomersUIContext } from \"../CustomersUIContext\";\r\n\r\nexport function CustomerEditDialog({ id, show, onHide }) {\r\n  // Customers UI Context\r\n  const customersUIContext = useCustomersUIContext();\r\n  const customersUIProps = useMemo(() => {\r\n    return {\r\n      initCustomer: customersUIContext.initCustomer,\r\n    };\r\n  }, [customersUIContext]);\r\n\r\n  // Customers Redux state\r\n  const dispatch = useDispatch();\r\n  const { actionsLoading, customerForEdit } = useSelector(\r\n    (state) => ({\r\n      actionsLoading: state.customers.actionsLoading,\r\n      customerForEdit: state.customers.customerForEdit,\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  useEffect(() => {\r\n    // server call for getting Customer by id\r\n    dispatch(actions.fetchCustomer(id));\r\n  }, [id, dispatch]);\r\n\r\n  // server request for saving customer\r\n  const saveCustomer = (customer) => {\r\n    if (!id) {\r\n      // server request for creating customer\r\n      dispatch(actions.createCustomer(customer)).then(() => onHide());\r\n    } else {\r\n      // server request for updating customer\r\n      dispatch(actions.updateCustomer(customer)).then(() => onHide());\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      size=\"lg\"\r\n      show={show}\r\n      onHide={onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      <CustomerEditDialogHeader id={id} />\r\n      <CustomerEditForm\r\n        saveCustomer={saveCustomer}\r\n        actionsLoading={actionsLoading}\r\n        customer={customerForEdit || customersUIProps.initCustomer}\r\n        onHide={onHide}\r\n      />\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport {ModalProgressBar} from \"../../../../../../_metronic/_partials/controls\";\r\nimport * as actions from \"../../../_redux/customers/customersActions\";\r\nimport {useCustomersUIContext} from \"../CustomersUIContext\";\r\n\r\nexport function CustomerDeleteDialog({ id, show, onHide }) {\r\n  // Customers UI Context\r\n  const customersUIContext = useCustomersUIContext();\r\n  const customersUIProps = useMemo(() => {\r\n    return {\r\n      setIds: customersUIContext.setIds,\r\n      queryParams: customersUIContext.queryParams\r\n    };\r\n  }, [customersUIContext]);\r\n\r\n  // Customers Redux state\r\n  const dispatch = useDispatch();\r\n  const { isLoading } = useSelector(\r\n    (state) => ({ isLoading: state.customers.actionsLoading }),\r\n    shallowEqual\r\n  );\r\n\r\n  // if !id we should close modal\r\n  useEffect(() => {\r\n    if (!id) {\r\n      onHide();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [id]);\r\n\r\n  // looking for loading/dispatch\r\n  useEffect(() => {}, [isLoading, dispatch]);\r\n\r\n  const deleteCustomer = () => {\r\n    // server request for deleting customer by id\r\n    dispatch(actions.deleteCustomer(id)).then(() => {\r\n      // refresh list after deletion\r\n      dispatch(actions.fetchCustomers(customersUIProps.queryParams));\r\n      // clear selections list\r\n      customersUIProps.setIds([]);\r\n      // closing delete modal\r\n      onHide();\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      {/*begin::Loading*/}\r\n      {isLoading && <ModalProgressBar />}\r\n      {/*end::Loading*/}\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Customer Delete\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {!isLoading && (\r\n          <span>Are you sure to permanently delete this customer?</span>\r\n        )}\r\n        {isLoading && <span>Customer is deleting...</span>}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onHide}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={deleteCustomer}\r\n            className=\"btn btn-primary btn-elevate\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../../_redux/customers/customersActions\";\r\nimport { useCustomersUIContext } from \"../CustomersUIContext\";\r\nimport {ModalProgressBar} from \"../../../../../../_metronic/_partials/controls\";\r\n\r\nexport function CustomersDeleteDialog({ show, onHide }) {\r\n  // Customers UI Context\r\n  const customersUIContext = useCustomersUIContext();\r\n  const customersUIProps = useMemo(() => {\r\n    return {\r\n      ids: customersUIContext.ids,\r\n      setIds: customersUIContext.setIds,\r\n      queryParams: customersUIContext.queryParams,\r\n    };\r\n  }, [customersUIContext]);\r\n\r\n  // Customers Redux state\r\n  const dispatch = useDispatch();\r\n  const { isLoading } = useSelector(\r\n    (state) => ({ isLoading: state.customers.actionsLoading }),\r\n    shallowEqual\r\n  );\r\n\r\n  // if customers weren't selected we should close modal\r\n  useEffect(() => {\r\n    if (!customersUIProps.ids || customersUIProps.ids.length === 0) {\r\n      onHide();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [customersUIProps.ids]);\r\n\r\n  // looking for loading/dispatch\r\n  useEffect(() => {}, [isLoading, dispatch]);\r\n\r\n  const deleteCustomers = () => {\r\n    // server request for deleting customer by selected ids\r\n    dispatch(actions.deleteCustomers(customersUIProps.ids)).then(() => {\r\n      // refresh list after deletion\r\n      dispatch(actions.fetchCustomers(customersUIProps.queryParams)).then(\r\n        () => {\r\n          // clear selections list\r\n          customersUIProps.setIds([]);\r\n          // closing delete modal\r\n          onHide();\r\n        }\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      {/*begin::Loading*/}\r\n      {isLoading && <ModalProgressBar />}\r\n      {/*end::Loading*/}\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Customers Delete\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {!isLoading && (\r\n          <span>Are you sure to permanently delete selected customers?</span>\r\n        )}\r\n        {isLoading && <span>Customer are deleting...</span>}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onHide}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={deleteCustomers}\r\n            className=\"btn btn-primary btn-elevate\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport {\r\n  CustomerStatusCssClasses,\r\n  CustomerStatusTitles,\r\n} from \"../CustomersUIHelpers\";\r\nimport { useCustomersUIContext } from \"../CustomersUIContext\";\r\n\r\nconst selectedCustomers = (entities, ids) => {\r\n  const _customers = [];\r\n  ids.forEach((id) => {\r\n    const customer = entities.find((el) => el.id === id);\r\n    if (customer) {\r\n      _customers.push(customer);\r\n    }\r\n  });\r\n  return _customers;\r\n};\r\n\r\nexport function CustomersFetchDialog({ show, onHide }) {\r\n  // Customers UI Context\r\n  const customersUIContext = useCustomersUIContext();\r\n  const customersUIProps = useMemo(() => {\r\n    return {\r\n      ids: customersUIContext.ids,\r\n    };\r\n  }, [customersUIContext]);\r\n\r\n  // Customers Redux state\r\n  const { customers } = useSelector(\r\n    (state) => ({\r\n      customers: selectedCustomers(\r\n        state.customers.entities,\r\n        customersUIProps.ids\r\n      ),\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  // if customers weren't selected we should close modal\r\n  useEffect(() => {\r\n    if (!customersUIProps.ids || customersUIProps.ids.length === 0) {\r\n      onHide();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [customersUIProps.ids]);\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Fetch selected elements\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <table className=\"table table table-head-custom table-vertical-center overflow-hidden\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>STATUS</th>\r\n              <th>CUSTOMER</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {customers.map((customer) => (\r\n              <tr key={`id${customer.id}`}>\r\n                <td>{customer.id}</td>\r\n                <td>\r\n                  <span\r\n                    className={`label label-lg label-light-${\r\n                      CustomerStatusCssClasses[customer.status]\r\n                    } label-inline`}\r\n                  >\r\n                    {\" \"}\r\n                    {CustomerStatusTitles[customer.status]}\r\n                  </span>\r\n                </td>\r\n                <td>\r\n                  <span className=\"ml-3\">\r\n                    {customer.lastName}, {customer.firstName}\r\n                  </span>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onHide}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onHide}\r\n            className=\"btn btn-primary btn-elevate\"\r\n          >\r\n            Ok\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useEffect, useState, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  CustomerStatusCssClasses,\r\n  CustomerStatusTitles,\r\n} from \"../CustomersUIHelpers\";\r\nimport * as actions from \"../../../_redux/customers/customersActions\";\r\nimport { useCustomersUIContext } from \"../CustomersUIContext\";\r\n\r\nconst selectedCustomers = (entities, ids) => {\r\n  const _customers = [];\r\n  ids.forEach((id) => {\r\n    const customer = entities.find((el) => el.id === id);\r\n    if (customer) {\r\n      _customers.push(customer);\r\n    }\r\n  });\r\n  return _customers;\r\n};\r\n\r\nexport function CustomersUpdateStateDialog({ show, onHide }) {\r\n  // Customers UI Context\r\n  const customersUIContext = useCustomersUIContext();\r\n  const customersUIProps = useMemo(() => {\r\n    return {\r\n      ids: customersUIContext.ids,\r\n      setIds: customersUIContext.setIds,\r\n      queryParams: customersUIContext.queryParams,\r\n    };\r\n  }, [customersUIContext]);\r\n\r\n  // Customers Redux state\r\n  const { customers, isLoading } = useSelector(\r\n    (state) => ({\r\n      customers: selectedCustomers(\r\n        state.customers.entities,\r\n        customersUIProps.ids\r\n      ),\r\n      isLoading: state.customers.actionsLoading,\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  // if !id we should close modal\r\n  useEffect(() => {\r\n    if (!customersUIProps.ids || customersUIProps.ids.length === 0) {\r\n      onHide();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [customersUIProps.ids]);\r\n\r\n  const [status, setStatus] = useState(0);\r\n\r\n  const dispatch = useDispatch();\r\n  const updateStatus = () => {\r\n    // server request for update customers status by selected ids\r\n    dispatch(actions.updateCustomersStatus(customersUIProps.ids, status)).then(\r\n      () => {\r\n        // refresh list after deletion\r\n        dispatch(actions.fetchCustomers(customersUIProps.queryParams)).then(\r\n          () => {\r\n            // clear selections list\r\n            customersUIProps.setIds([]);\r\n            // closing delete modal\r\n            onHide();\r\n          }\r\n        );\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Status has been updated for selected customers\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body className=\"overlay overlay-block cursor-default\">\r\n        {/*begin::Loading*/}\r\n        {isLoading && (\r\n          <div className=\"overlay-layer\">\r\n            <div className=\"spinner spinner-lg spinner-primary\" />\r\n          </div>\r\n        )}\r\n        {/*end::Loading*/}\r\n        <table className=\"table table table-head-custom table-vertical-center overflow-hidden\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>STATUS</th>\r\n              <th>CUSTOMER</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {customers.map((customer) => (\r\n              <tr key={`id${customer.id}`}>\r\n                <td>{customer.id}</td>\r\n                <td>\r\n                  <span\r\n                    className={`label label-lg label-light-${\r\n                      CustomerStatusCssClasses[customer.status]\r\n                    } label-inline`}\r\n                  >\r\n                    {\" \"}\r\n                    {CustomerStatusTitles[customer.status]}\r\n                  </span>\r\n                </td>\r\n                <td>\r\n                  <span className=\"ml-3\">\r\n                    {customer.lastName}, {customer.firstName}\r\n                  </span>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </Modal.Body>\r\n      <Modal.Footer className=\"form\">\r\n        <div className=\"form-group\">\r\n          <select\r\n            className=\"form-control\"\r\n            value={status}\r\n            onChange={(e) => setStatus(+e.target.value)}\r\n          >\r\n            <option value=\"0\">Suspended</option>\r\n            <option value=\"1\">Active</option>\r\n            <option value=\"2\">Pending</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={onHide}\r\n            className=\"btn btn-light btn-elevate mr-3\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={updateStatus}\r\n            className=\"btn btn-primary btn-elevate\"\r\n          >\r\n            Update Status\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport { isEqual } from \"lodash\";\r\nimport { useCustomersUIContext } from \"../CustomersUIContext\";\r\n\r\nconst prepareFilter = (queryParams, values) => {\r\n  const { status, type, searchText } = values;\r\n  const newQueryParams = { ...queryParams };\r\n  const filter = {};\r\n  // Filter by status\r\n  filter.status = status !== \"\" ? +status : undefined;\r\n  // Filter by type\r\n  filter.type = type !== \"\" ? +type : undefined;\r\n  // Filter by all fields\r\n  filter.lastName = searchText;\r\n  if (searchText) {\r\n    filter.firstName = searchText;\r\n    filter.email = searchText;\r\n    filter.ipAddress = searchText;\r\n  }\r\n  newQueryParams.filter = filter;\r\n  return newQueryParams;\r\n};\r\n\r\nexport function CustomersFilter({ listLoading }) {\r\n  // Customers UI Context\r\n  const customersUIContext = useCustomersUIContext();\r\n  const customersUIProps = useMemo(() => {\r\n    return {\r\n      queryParams: customersUIContext.queryParams,\r\n      setQueryParams: customersUIContext.setQueryParams,\r\n    };\r\n  }, [customersUIContext]);\r\n\r\n  // queryParams, setQueryParams,\r\n  const applyFilter = (values) => {\r\n    const newQueryParams = prepareFilter(customersUIProps.queryParams, values);\r\n    if (!isEqual(newQueryParams, customersUIProps.queryParams)) {\r\n      newQueryParams.pageNumber = 1;\r\n      // update list by queryParams\r\n      customersUIProps.setQueryParams(newQueryParams);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={{\r\n          status: \"\", // values => All=\"\"/Susspended=0/Active=1/Pending=2\r\n          type: \"\", // values => All=\"\"/Business=0/Individual=1\r\n          searchText: \"\",\r\n        }}\r\n        onSubmit={(values) => {\r\n          applyFilter(values);\r\n        }}\r\n      >\r\n        {({\r\n          values,\r\n          handleSubmit,\r\n          handleBlur,\r\n          handleChange,\r\n          setFieldValue,\r\n        }) => (\r\n          <form onSubmit={handleSubmit} className=\"form form-label-right\">\r\n            <div className=\"form-group row\">\r\n              <div className=\"col-lg-2\">\r\n                <select\r\n                  className=\"form-control\"\r\n                  name=\"status\"\r\n                  placeholder=\"Filter by Status\"\r\n                  // TODO: Change this code\r\n                  onChange={(e) => {\r\n                    setFieldValue(\"status\", e.target.value);\r\n                    handleSubmit();\r\n                  }}\r\n                  onBlur={handleBlur}\r\n                  value={values.status}\r\n                >\r\n                  <option value=\"\">All</option>\r\n                  <option value=\"0\">Susspended</option>\r\n                  <option value=\"1\">Active</option>\r\n                  <option value=\"2\">Pending</option>\r\n                </select>\r\n                <small className=\"form-text text-muted\">\r\n                  <b>Filter</b> by Status\r\n                </small>\r\n              </div>\r\n              <div className=\"col-lg-2\">\r\n                <select\r\n                  className=\"form-control\"\r\n                  placeholder=\"Filter by Type\"\r\n                  name=\"type\"\r\n                  onBlur={handleBlur}\r\n                  onChange={(e) => {\r\n                    setFieldValue(\"type\", e.target.value);\r\n                    handleSubmit();\r\n                  }}\r\n                  value={values.type}\r\n                >\r\n                  <option value=\"\">All</option>\r\n                  <option value=\"0\">Business</option>\r\n                  <option value=\"1\">Individual</option>\r\n                </select>\r\n                <small className=\"form-text text-muted\">\r\n                  <b>Filter</b> by Type\r\n                </small>\r\n              </div>\r\n              <div className=\"col-lg-2\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"searchText\"\r\n                  placeholder=\"Search\"\r\n                  onBlur={handleBlur}\r\n                  value={values.searchText}\r\n                  onChange={(e) => {\r\n                    setFieldValue(\"searchText\", e.target.value);\r\n                    handleSubmit();\r\n                  }}\r\n                />\r\n                <small className=\"form-text text-muted\">\r\n                  <b>Search</b> in all fields\r\n                </small>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n","// please be familiar with react-bootstrap-table-next column formaters\r\n// https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html?selectedKind=Work%20on%20Columns&selectedStory=Column%20Formatter&full=0&addons=1&stories=1&panelRight=0&addonPanel=storybook%2Factions%2Factions-panel\r\nimport React from \"react\";\r\nimport {\r\n  CustomerStatusCssClasses,\r\n  CustomerStatusTitles,\r\n} from \"../../CustomersUIHelpers\";\r\n\r\nexport function StatusColumnFormatter(cellContent, row) {\r\n  const getLabelCssClasses = () => {\r\n    return `label label-lg label-light-${\r\n      CustomerStatusCssClasses[row.status]\r\n    } label-inline`;\r\n  };\r\n  return (\r\n    <span className={getLabelCssClasses()}>\r\n      {CustomerStatusTitles[row.status]}\r\n    </span>\r\n  );\r\n}\r\n","// please be familiar with react-bootstrap-table-next column formaters\r\n// https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html?selectedKind=Work%20on%20Columns&selectedStory=Column%20Formatter&full=0&addons=1&stories=1&panelRight=0&addonPanel=storybook%2Factions%2Factions-panel\r\nimport React from \"react\";\r\nimport {\r\n  CustomerTypeCssClasses,\r\n  CustomerTypeTitles,\r\n} from \"../../CustomersUIHelpers\";\r\n\r\nexport function TypeColumnFormatter(cellContent, row) {\r\n  return (\r\n    <>\r\n      <span\r\n        className={`label label-dot label-${\r\n          CustomerTypeCssClasses[row.type]\r\n        } mr-2`}\r\n      ></span>\r\n      &nbsp;\r\n      <span className={`font-bold font-${CustomerTypeCssClasses[row.type]}`}>\r\n        {CustomerTypeTitles[row.type]}\r\n      </span>\r\n    </>\r\n  );\r\n}\r\n","// please be familiar with react-bootstrap-table-next column formaters\r\n// https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html?selectedKind=Work%20on%20Columns&selectedStory=Column%20Formatter&full=0&addons=1&stories=1&panelRight=0&addonPanel=storybook%2Factions%2Factions-panel\r\n/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\r\nimport React from \"react\";\r\nimport SVG from \"react-inlinesvg\";\r\nimport { toAbsoluteUrl } from \"../../../../../../../_metronic/_helpers\";\r\n\r\nexport function ActionsColumnFormatter(\r\n  cellContent,\r\n  row,\r\n  rowIndex,\r\n  { openEditCustomerDialog, openDeleteCustomerDialog }\r\n) {\r\n  return (\r\n    <>\r\n      <a\r\n        title=\"Edit customer\"\r\n        className=\"btn btn-icon btn-light btn-hover-primary btn-sm mx-3\"\r\n        onClick={() => openEditCustomerDialog(row.id)}\r\n      >\r\n        <span className=\"svg-icon svg-icon-md svg-icon-primary\">\r\n          <SVG\r\n            src={toAbsoluteUrl(\"/media/svg/icons/Communication/Write.svg\")}\r\n          />\r\n        </span>\r\n      </a>\r\n      <> </>\r\n\r\n      <a\r\n        title=\"Delete customer\"\r\n        className=\"btn btn-icon btn-light btn-hover-danger btn-sm\"\r\n        onClick={() => openDeleteCustomerDialog(row.id)}\r\n      >\r\n        <span className=\"svg-icon svg-icon-md svg-icon-danger\">\r\n          <SVG src={toAbsoluteUrl(\"/media/svg/icons/General/Trash.svg\")} />\r\n        </span>\r\n      </a>\r\n    </>\r\n  );\r\n}\r\n","// React bootstrap table next =>\r\n// DOCS: https://react-bootstrap-table.github.io/react-bootstrap-table2/docs/\r\n// STORYBOOK: https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html\r\nimport React, { useEffect, useMemo } from \"react\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory, {\r\n  PaginationProvider,\r\n} from \"react-bootstrap-table2-paginator\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../../_redux/customers/customersActions\";\r\nimport {\r\n  getSelectRow,\r\n  getHandlerTableChange,\r\n  NoRecordsFoundMessage,\r\n  PleaseWaitMessage,\r\n  sortCaret,\r\n  headerSortingClasses,\r\n} from \"../../../../../../_metronic/_helpers\";\r\nimport * as uiHelpers from \"../CustomersUIHelpers\";\r\nimport * as columnFormatters from \"./column-formatters\";\r\nimport { Pagination } from \"../../../../../../_metronic/_partials/controls\";\r\nimport { useCustomersUIContext } from \"../CustomersUIContext\";\r\n\r\nexport function CustomersTable() {\r\n  // Customers UI Context\r\n  const customersUIContext = useCustomersUIContext();\r\n  const customersUIProps = useMemo(() => {\r\n    return {\r\n      ids: customersUIContext.ids,\r\n      setIds: customersUIContext.setIds,\r\n      queryParams: customersUIContext.queryParams,\r\n      setQueryParams: customersUIContext.setQueryParams,\r\n      openEditCustomerDialog: customersUIContext.openEditCustomerDialog,\r\n      openDeleteCustomerDialog: customersUIContext.openDeleteCustomerDialog,\r\n    };\r\n  }, [customersUIContext]);\r\n\r\n  // Getting curret state of customers list from store (Redux)\r\n  const { currentState } = useSelector(\r\n    (state) => ({ currentState: state.customers }),\r\n    shallowEqual\r\n  );\r\n  const { totalCount, entities, listLoading } = currentState;\r\n\r\n  // Customers Redux state\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    // clear selections list\r\n    customersUIProps.setIds([]);\r\n    // server call by queryParams\r\n    dispatch(actions.fetchCustomers(customersUIProps.queryParams));\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [customersUIProps.queryParams, dispatch]);\r\n  // Table columns\r\n  const columns = [\r\n    {\r\n      dataField: \"id\",\r\n      text: \"ID\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses,\r\n    },\r\n    {\r\n      dataField: \"firstName\",\r\n      text: \"Firstname\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses,\r\n    },\r\n    {\r\n      dataField: \"lastName\",\r\n      text: \"Lastname\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses,\r\n    },\r\n    {\r\n      dataField: \"email\",\r\n      text: \"Email\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses,\r\n    },\r\n    {\r\n      dataField: \"gender\",\r\n      text: \"Gender\",\r\n      sort: false,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"status\",\r\n      text: \"Status\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      formatter: columnFormatters.StatusColumnFormatter,\r\n      headerSortingClasses,\r\n    },\r\n    {\r\n      dataField: \"type\",\r\n      text: \"Type\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      formatter: columnFormatters.TypeColumnFormatter,\r\n    },\r\n    {\r\n      dataField: \"action\",\r\n      text: \"Actions\",\r\n      formatter: columnFormatters.ActionsColumnFormatter,\r\n      formatExtraData: {\r\n        openEditCustomerDialog: customersUIProps.openEditCustomerDialog,\r\n        openDeleteCustomerDialog: customersUIProps.openDeleteCustomerDialog,\r\n      },\r\n      classes: \"text-right pr-0\",\r\n      headerClasses: \"text-right pr-3\",\r\n      style: {\r\n        minWidth: \"100px\",\r\n      },\r\n    },\r\n  ];\r\n  // Table pagination properties\r\n  const paginationOptions = {\r\n    custom: true,\r\n    totalSize: totalCount,\r\n    sizePerPageList: uiHelpers.sizePerPageList,\r\n    sizePerPage: customersUIProps.queryParams.pageSize,\r\n    page: customersUIProps.queryParams.pageNumber,\r\n  };\r\n  return (\r\n    <>\r\n      <PaginationProvider pagination={paginationFactory(paginationOptions)}>\r\n        {({ paginationProps, paginationTableProps }) => {\r\n          return (\r\n            <Pagination\r\n              isLoading={listLoading}\r\n              paginationProps={paginationProps}\r\n            >\r\n              <BootstrapTable\r\n                wrapperClasses=\"table-responsive\"\r\n                bordered={false}\r\n                classes=\"table table-head-custom table-vertical-center overflow-hidden\"\r\n                bootstrap4\r\n                remote\r\n                keyField=\"id\"\r\n                data={entities === null ? [] : entities}\r\n                columns={columns}\r\n                defaultSorted={uiHelpers.defaultSorted}\r\n                onTableChange={getHandlerTableChange(\r\n                  customersUIProps.setQueryParams\r\n                )}\r\n                selectRow={getSelectRow({\r\n                  entities,\r\n                  ids: customersUIProps.ids,\r\n                  setIds: customersUIProps.setIds,\r\n                })}\r\n                {...paginationTableProps}\r\n              >\r\n                <PleaseWaitMessage entities={entities} />\r\n                <NoRecordsFoundMessage entities={entities} />\r\n              </BootstrapTable>\r\n            </Pagination>\r\n          );\r\n        }}\r\n      </PaginationProvider>\r\n    </>\r\n  );\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport { useCustomersUIContext } from \"../CustomersUIContext\";\r\n\r\nexport function CustomersGrouping() {\r\n  // Customers UI Context\r\n  const customersUIContext = useCustomersUIContext();\r\n  const customersUIProps = useMemo(() => {\r\n    return {\r\n      ids: customersUIContext.ids,\r\n      setIds: customersUIContext.setIds,\r\n      openDeleteCustomersDialog: customersUIContext.openDeleteCustomersDialog,\r\n      openFetchCustomersDialog: customersUIContext.openFetchCustomersDialog,\r\n      openUpdateCustomersStatusDialog:\r\n        customersUIContext.openUpdateCustomersStatusDialog,\r\n    };\r\n  }, [customersUIContext]);\r\n\r\n  return (\r\n    <div className=\"form\">\r\n      <div className=\"row align-items-center form-group-actions margin-top-20 margin-bottom-20\">\r\n        <div className=\"col-xl-12\">\r\n          <div className=\"form-group form-group-inline\">\r\n            <div className=\"form-label form-label-no-wrap\">\r\n              <label className=\"font-bold font-danger\">\r\n                <span>\r\n                  Selected records count: <b>{customersUIProps.ids.length}</b>\r\n                </span>\r\n              </label>\r\n            </div>\r\n            <div>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-danger font-weight-bolder font-size-sm\"\r\n                onClick={customersUIProps.openDeleteCustomersDialog}\r\n              >\r\n                <i className=\"fa fa-trash\"></i> Delete All\r\n              </button>\r\n              &nbsp;\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-light-primary font-weight-bolder font-size-sm\"\r\n                onClick={customersUIProps.openFetchCustomersDialog}\r\n              >\r\n                <i className=\"fa fa-stream\"></i> Fetch Selected\r\n              </button>\r\n              &nbsp;\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-light-primary font-weight-bolder font-size-sm\"\r\n                onClick={customersUIProps.openUpdateCustomersStatusDialog}\r\n              >\r\n                <i className=\"fa fa-sync-alt\"></i> Update Status\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar,\r\n} from \"../../../../../_metronic/_partials/controls\";\r\nimport { CustomersFilter } from \"./customers-filter/CustomersFilter\";\r\nimport { CustomersTable } from \"./customers-table/CustomersTable\";\r\nimport { CustomersGrouping } from \"./customers-grouping/CustomersGrouping\";\r\nimport { useCustomersUIContext } from \"./CustomersUIContext\";\r\n\r\nexport function CustomersCard() {\r\n  const customersUIContext = useCustomersUIContext();\r\n  const customersUIProps = useMemo(() => {\r\n    return {\r\n      ids: customersUIContext.ids,\r\n      newCustomerButtonClick: customersUIContext.newCustomerButtonClick,\r\n    };\r\n  }, [customersUIContext]);\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader title=\"Customers list\">\r\n        <CardHeaderToolbar>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary\"\r\n            onClick={customersUIProps.newCustomerButtonClick}\r\n          >\r\n            New Customer\r\n          </button>\r\n        </CardHeaderToolbar>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <CustomersFilter />\r\n        {customersUIProps.ids.length > 0 && <CustomersGrouping />}\r\n        <CustomersTable />\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { CustomersLoadingDialog } from \"./customers-loading-dialog/CustomersLoadingDialog\";\r\nimport { CustomerEditDialog } from \"./customer-edit-dialog/CustomerEditDialog\";\r\nimport { CustomerDeleteDialog } from \"./customer-delete-dialog/CustomerDeleteDialog\";\r\nimport { CustomersDeleteDialog } from \"./customers-delete-dialog/CustomersDeleteDialog\";\r\nimport { CustomersFetchDialog } from \"./customers-fetch-dialog/CustomersFetchDialog\";\r\nimport { CustomersUpdateStateDialog } from \"./customers-update-status-dialog/CustomersUpdateStateDialog\";\r\nimport { CustomersUIProvider } from \"./CustomersUIContext\";\r\nimport { CustomersCard } from \"./CustomersCard\";\r\n\r\nexport function CustomersPage({ history }) {\r\n  const customersUIEvents = {\r\n    newCustomerButtonClick: () => {\r\n      history.push(\"/e-commerce/customers/new\");\r\n    },\r\n    openEditCustomerDialog: (id) => {\r\n      history.push(`/e-commerce/customers/${id}/edit`);\r\n    },\r\n    openDeleteCustomerDialog: (id) => {\r\n      history.push(`/e-commerce/customers/${id}/delete`);\r\n    },\r\n    openDeleteCustomersDialog: () => {\r\n      history.push(`/e-commerce/customers/deleteCustomers`);\r\n    },\r\n    openFetchCustomersDialog: () => {\r\n      history.push(`/e-commerce/customers/fetch`);\r\n    },\r\n    openUpdateCustomersStatusDialog: () => {\r\n      history.push(\"/e-commerce/customers/updateStatus\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <CustomersUIProvider customersUIEvents={customersUIEvents}>\r\n      <CustomersLoadingDialog />\r\n      <Route path=\"/e-commerce/customers/new\">\r\n        {({ history, match }) => (\r\n          <CustomerEditDialog\r\n            show={match != null}\r\n            onHide={() => {\r\n              history.push(\"/e-commerce/customers\");\r\n            }}\r\n          />\r\n        )}\r\n      </Route>\r\n      <Route path=\"/e-commerce/customers/:id/edit\">\r\n        {({ history, match }) => (\r\n          <CustomerEditDialog\r\n            show={match != null}\r\n            id={match && match.params.id}\r\n            onHide={() => {\r\n              history.push(\"/e-commerce/customers\");\r\n            }}\r\n          />\r\n        )}\r\n      </Route>\r\n      <Route path=\"/e-commerce/customers/deleteCustomers\">\r\n        {({ history, match }) => (\r\n          <CustomersDeleteDialog\r\n            show={match != null}\r\n            onHide={() => {\r\n              history.push(\"/e-commerce/customers\");\r\n            }}\r\n          />\r\n        )}\r\n      </Route>\r\n      <Route path=\"/e-commerce/customers/:id/delete\">\r\n        {({ history, match }) => (\r\n          <CustomerDeleteDialog\r\n            show={match != null}\r\n            id={match && match.params.id}\r\n            onHide={() => {\r\n              history.push(\"/e-commerce/customers\");\r\n            }}\r\n          />\r\n        )}\r\n      </Route>\r\n      <Route path=\"/e-commerce/customers/fetch\">\r\n        {({ history, match }) => (\r\n          <CustomersFetchDialog\r\n            show={match != null}\r\n            onHide={() => {\r\n              history.push(\"/e-commerce/customers\");\r\n            }}\r\n          />\r\n        )}\r\n      </Route>\r\n      <Route path=\"/e-commerce/customers/updateStatus\">\r\n        {({ history, match }) => (\r\n          <CustomersUpdateStateDialog\r\n            show={match != null}\r\n            onHide={() => {\r\n              history.push(\"/e-commerce/customers\");\r\n            }}\r\n          />\r\n        )}\r\n      </Route>\r\n      <CustomersCard />\r\n    </CustomersUIProvider>\r\n  );\r\n}\r\n","import React, {useEffect} from \"react\";\r\nimport {shallowEqual, useSelector} from \"react-redux\";\r\nimport {LoadingDialog} from \"../../../../../../_metronic/_partials/controls\";\r\n\r\nexport function ProductsLoadingDialog() {\r\n  const { isLoading } = useSelector(\r\n    state => ({ isLoading: state.products.listLoading }),\r\n    shallowEqual\r\n  );\r\n  useEffect(() => {}, [isLoading]);\r\n  return <LoadingDialog isLoading={isLoading} text=\"Loading ...\" />;\r\n}\r\n","import {createSlice} from \"@reduxjs/toolkit\";\r\n\r\nconst initialProductsState = {\r\n  listLoading: false,\r\n  actionsLoading: false,\r\n  totalCount: 0,\r\n  entities: null,\r\n  productForEdit: undefined,\r\n  lastError: null\r\n};\r\nexport const callTypes = {\r\n  list: \"list\",\r\n  action: \"action\"\r\n};\r\n\r\nexport const productsSlice = createSlice({\r\n  name: \"products\",\r\n  initialState: initialProductsState,\r\n  reducers: {\r\n    catchError: (state, action) => {\r\n      state.error = `${action.type}: ${action.payload.error}`;\r\n      if (action.payload.callType === callTypes.list) {\r\n        state.listLoading = false;\r\n      } else {\r\n        state.actionsLoading = false;\r\n      }\r\n    },\r\n    startCall: (state, action) => {\r\n      state.error = null;\r\n      if (action.payload.callType === callTypes.list) {\r\n        state.listLoading = true;\r\n      } else {\r\n        state.actionsLoading = true;\r\n      }\r\n    },\r\n    // getProductById\r\n    productFetched: (state, action) => {\r\n      state.actionsLoading = false;\r\n      state.productForEdit = action.payload.productForEdit;\r\n      state.error = null;\r\n    },\r\n    // findProducts\r\n    productsFetched: (state, action) => {\r\n      const { totalCount, entities } = action.payload;\r\n      state.listLoading = false;\r\n      state.error = null;\r\n      state.entities = entities;\r\n      state.totalCount = totalCount;\r\n    },\r\n    // createProduct\r\n    productCreated: (state, action) => {\r\n      state.actionsLoading = false;\r\n      state.error = null;\r\n      state.entities.push(action.payload.product);\r\n    },\r\n    // updateProduct\r\n    productUpdated: (state, action) => {\r\n      state.error = null;\r\n      state.actionsLoading = false;\r\n      state.entities = state.entities.map(entity => {\r\n        if (entity.id === action.payload.product.id) {\r\n          return action.payload.product;\r\n        }\r\n        return entity;\r\n      });\r\n    },\r\n    // deleteProduct\r\n    productDeleted: (state, action) => {\r\n      state.error = null;\r\n      state.actionsLoading = false;\r\n      state.entities = state.entities.filter(el => el.id !== action.payload.id);\r\n    },\r\n    // deleteProducts\r\n    productsDeleted: (state, action) => {\r\n      state.error = null;\r\n      state.actionsLoading = false;\r\n      state.entities = state.entities.filter(\r\n        el => !action.payload.ids.includes(el.id)\r\n      );\r\n    },\r\n    // productsUpdateState\r\n    productsStatusUpdated: (state, action) => {\r\n      state.actionsLoading = false;\r\n      state.error = null;\r\n      const { ids, status } = action.payload;\r\n      state.entities = state.entities.map(entity => {\r\n        if (ids.findIndex(id => id === entity.id) > -1) {\r\n          entity.status = status;\r\n        }\r\n        return entity;\r\n      });\r\n    }\r\n  }\r\n});\r\n","import * as requestFromServer from \"./productsCrud\";\r\nimport {productsSlice, callTypes} from \"./productsSlice\";\r\n\r\nconst {actions} = productsSlice;\r\n\r\nexport const fetchProducts = queryParams => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.list }));\r\n  return requestFromServer\r\n    .findProducts(queryParams)\r\n    .then(response => {\r\n      const { totalCount, entities } = response.data;\r\n      dispatch(actions.productsFetched({ totalCount, entities }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't find products\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.list }));\r\n    });\r\n};\r\n\r\nexport const fetchProduct = id => dispatch => {\r\n  if (!id) {\r\n    return dispatch(actions.productFetched({ productForEdit: undefined }));\r\n  }\r\n\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .getProductById(id)\r\n    .then(response => {\r\n      const product = response.data;\r\n      dispatch(actions.productFetched({ productForEdit: product }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't find product\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const deleteProduct = id => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .deleteProduct(id)\r\n    .then(response => {\r\n      dispatch(actions.productDeleted({ id }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't delete product\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const createProduct = productForCreation => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .createProduct(productForCreation)\r\n    .then(response => {\r\n      const { product } = response.data;\r\n      dispatch(actions.productCreated({ product }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't create product\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const updateProduct = product => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .updateProduct(product)\r\n    .then(() => {\r\n      dispatch(actions.productUpdated({ product }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't update product\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const updateProductsStatus = (ids, status) => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .updateStatusForProducts(ids, status)\r\n    .then(() => {\r\n      dispatch(actions.productsStatusUpdated({ ids, status }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't update products status\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const deleteProducts = ids => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .deleteProducts(ids)\r\n    .then(() => {\r\n      dispatch(actions.productsDeleted({ ids }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't delete products\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport const PRODUCTS_URL = \"api/products\";\r\n\r\n// CREATE =>  POST: add a new product to the server\r\nexport function createProduct(product) {\r\n  return axios.post(PRODUCTS_URL, { product });\r\n}\r\n\r\n// READ\r\nexport function getAllProducts() {\r\n  return axios.get(PRODUCTS_URL);\r\n}\r\n\r\nexport function getProductById(productId) {\r\n  return axios.get(`${PRODUCTS_URL}/${productId}`);\r\n}\r\n\r\n// Method from server should return QueryResultsModel(items: any[], totalsCount: number)\r\n// items => filtered/sorted result\r\nexport function findProducts(queryParams) {\r\n  return axios.post(`${PRODUCTS_URL}/find`, { queryParams });\r\n}\r\n\r\n// UPDATE => PUT: update the procuct on the server\r\nexport function updateProduct(product) {\r\n  return axios.put(`${PRODUCTS_URL}/${product.id}`, { product });\r\n}\r\n\r\n// UPDATE Status\r\nexport function updateStatusForProducts(ids, status) {\r\n  return axios.post(`${PRODUCTS_URL}/updateStatusForProducts`, {\r\n    ids,\r\n    status\r\n  });\r\n}\r\n\r\n// DELETE => delete the product from the server\r\nexport function deleteProduct(productId) {\r\n  return axios.delete(`${PRODUCTS_URL}/${productId}`);\r\n}\r\n\r\n// DELETE Products by ids\r\nexport function deleteProducts(ids) {\r\n  return axios.post(`${PRODUCTS_URL}/deleteProducts`, { ids });\r\n}\r\n","export const ProductStatusCssClasses = [\"success\", \"info\", \"\"];\r\nexport const ProductStatusTitles = [\"Selling\", \"Sold\"];\r\nexport const ProductConditionCssClasses = [\"success\", \"danger\", \"\"];\r\nexport const ProductConditionTitles = [\"New\", \"Used\"];\r\nexport const defaultSorted = [{ dataField: \"id\", order: \"asc\" }];\r\nexport const sizePerPageList = [\r\n  { text: \"3\", value: 3 },\r\n  { text: \"5\", value: 5 },\r\n  { text: \"10\", value: 10 }\r\n];\r\nexport const initialFilter = {\r\n  filter: {\r\n    model: \"\",\r\n    manufacture: \"\",\r\n    VINCode: \"\"\r\n  },\r\n  sortOrder: \"asc\", // asc||desc\r\n  sortField: \"VINCode\",\r\n  pageNumber: 1,\r\n  pageSize: 10\r\n};\r\nexport const AVAILABLE_COLORS = [\r\n  \"Red\",\r\n  \"CadetBlue\",\r\n  \"Eagle\",\r\n  \"Gold\",\r\n  \"LightSlateGrey\",\r\n  \"RoyalBlue\",\r\n  \"Crimson\",\r\n  \"Blue\",\r\n  \"Sienna\",\r\n  \"Indigo\",\r\n  \"Green\",\r\n  \"Violet\",\r\n  \"GoldenRod\",\r\n  \"OrangeRed\",\r\n  \"Khaki\",\r\n  \"Teal\",\r\n  \"Purple\",\r\n  \"Orange\",\r\n  \"Pink\",\r\n  \"Black\",\r\n  \"DarkTurquoise\"\r\n];\r\n\r\nexport const AVAILABLE_MANUFACTURES = [\r\n  \"Pontiac\",\r\n  \"Kia\",\r\n  \"Lotus\",\r\n  \"Subaru\",\r\n  \"Jeep\",\r\n  \"Isuzu\",\r\n  \"Mitsubishi\",\r\n  \"Oldsmobile\",\r\n  \"Chevrolet\",\r\n  \"Chrysler\",\r\n  \"Audi\",\r\n  \"Suzuki\",\r\n  \"GMC\",\r\n  \"Cadillac\",\r\n  \"Infinity\",\r\n  \"Mercury\",\r\n  \"Dodge\",\r\n  \"Ram\",\r\n  \"Lexus\",\r\n  \"Lamborghini\",\r\n  \"Honda\",\r\n  \"Nissan\",\r\n  \"Ford\",\r\n  \"Hyundai\",\r\n  \"Saab\",\r\n  \"Toyota\"\r\n];\r\n","import React, { createContext, useContext, useState, useCallback } from \"react\";\r\nimport { isEqual, isFunction } from \"lodash\";\r\nimport { initialFilter } from \"./ProductsUIHelpers\";\r\n\r\nconst ProductsUIContext = createContext();\r\n\r\nexport function useProductsUIContext() {\r\n  return useContext(ProductsUIContext);\r\n}\r\n\r\nexport const ProductsUIConsumer = ProductsUIContext.Consumer;\r\n\r\nexport function ProductsUIProvider({ productsUIEvents, children }) {\r\n  const [queryParams, setQueryParamsBase] = useState(initialFilter);\r\n  const [ids, setIds] = useState([]);\r\n  const setQueryParams = useCallback((nextQueryParams) => {\r\n    setQueryParamsBase((prevQueryParams) => {\r\n      if (isFunction(nextQueryParams)) {\r\n        nextQueryParams = nextQueryParams(prevQueryParams);\r\n      }\r\n\r\n      if (isEqual(prevQueryParams, nextQueryParams)) {\r\n        return prevQueryParams;\r\n      }\r\n\r\n      return nextQueryParams;\r\n    });\r\n  }, []);\r\n\r\n  const value = {\r\n    queryParams,\r\n    setQueryParamsBase,\r\n    ids,\r\n    setIds,\r\n    setQueryParams,\r\n    newProductButtonClick: productsUIEvents.newProductButtonClick,\r\n    openEditProductPage: productsUIEvents.openEditProductPage,\r\n    openDeleteProductDialog: productsUIEvents.openDeleteProductDialog,\r\n    openDeleteProductsDialog: productsUIEvents.openDeleteProductsDialog,\r\n    openFetchProductsDialog: productsUIEvents.openFetchProductsDialog,\r\n    openUpdateProductsStatusDialog:\r\n      productsUIEvents.openUpdateProductsStatusDialog,\r\n  };\r\n\r\n  return (\r\n    <ProductsUIContext.Provider value={value}>\r\n      {children}\r\n    </ProductsUIContext.Provider>\r\n  );\r\n}\r\n","/* eslint-disable no-restricted-imports */\r\nimport React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { ModalProgressBar } from \"../../../../../../_metronic/_partials/controls\";\r\nimport * as actions from \"../../../_redux/products/productsActions\";\r\nimport { useProductsUIContext } from \"../ProductsUIContext\";\r\n\r\nexport function ProductDeleteDialog({ id, show, onHide }) {\r\n  // Products UI Context\r\n  const productsUIContext = useProductsUIContext();\r\n  const productsUIProps = useMemo(() => {\r\n    return {\r\n      setIds: productsUIContext.setIds,\r\n      queryParams: productsUIContext.queryParams,\r\n    };\r\n  }, [productsUIContext]);\r\n\r\n  // Products Redux state\r\n  const dispatch = useDispatch();\r\n  const { isLoading } = useSelector(\r\n    (state) => ({ isLoading: state.products.actionsLoading }),\r\n    shallowEqual\r\n  );\r\n\r\n  // if !id we should close modal\r\n  useEffect(() => {\r\n    if (!id) {\r\n      onHide();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [id]);\r\n\r\n  // looking for loading/dispatch\r\n  useEffect(() => {}, [isLoading, dispatch]);\r\n\r\n  const deleteProduct = () => {\r\n    // server request for deleting product by id\r\n    dispatch(actions.deleteProduct(id)).then(() => {\r\n      // refresh list after deletion\r\n      dispatch(actions.fetchProducts(productsUIProps.queryParams));\r\n      // clear selections list\r\n      productsUIProps.setIds([]);\r\n      // closing delete modal\r\n      onHide();\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      {isLoading && <ModalProgressBar variant=\"query\" />}\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Product Delete\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {!isLoading && (\r\n          <span>Are you sure to permanently delete this product?</span>\r\n        )}\r\n        {isLoading && <span>Product is deleting...</span>}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onHide}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={deleteProduct}\r\n            className=\"btn btn-delete btn-elevate\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","/* eslint-disable no-restricted-imports */\r\nimport React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { ModalProgressBar } from \"../../../../../../_metronic/_partials/controls\";\r\nimport * as actions from \"../../../_redux/products/productsActions\";\r\nimport { useProductsUIContext } from \"../ProductsUIContext\";\r\n\r\nexport function ProductsDeleteDialog({ show, onHide }) {\r\n  // Products UI Context\r\n  const productsUIContext = useProductsUIContext();\r\n  const productsUIProps = useMemo(() => {\r\n    return {\r\n      ids: productsUIContext.ids,\r\n      setIds: productsUIContext.setIds,\r\n      queryParams: productsUIContext.queryParams,\r\n    };\r\n  }, [productsUIContext]);\r\n\r\n  // Products Redux state\r\n  const dispatch = useDispatch();\r\n  const { isLoading } = useSelector(\r\n    (state) => ({ isLoading: state.products.actionsLoading }),\r\n    shallowEqual\r\n  );\r\n\r\n  // looking for loading/dispatch\r\n  useEffect(() => {}, [isLoading, dispatch]);\r\n\r\n  // if there weren't selected products we should close modal\r\n  useEffect(() => {\r\n    if (!productsUIProps.ids || productsUIProps.ids.length === 0) {\r\n      onHide();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [productsUIProps.ids]);\r\n\r\n  const deleteProducts = () => {\r\n    // server request for deleting product by seleted ids\r\n    dispatch(actions.deleteProducts(productsUIProps.ids)).then(() => {\r\n      // refresh list after deletion\r\n      dispatch(actions.fetchProducts(productsUIProps.queryParams)).then(() => {\r\n        // clear selections list\r\n        productsUIProps.setIds([]);\r\n        // closing delete modal\r\n        onHide();\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      {isLoading && <ModalProgressBar />}\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Products Delete\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {!isLoading && (\r\n          <span>Are you sure to permanently delete selected products?</span>\r\n        )}\r\n        {isLoading && <span>Products are deleting...</span>}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onHide}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={deleteProducts}\r\n            className=\"btn btn-primary btn-elevate\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport { ProductStatusCssClasses } from \"../ProductsUIHelpers\";\r\nimport { useProductsUIContext } from \"../ProductsUIContext\";\r\n\r\nconst selectedProducts = (entities, ids) => {\r\n  const _products = [];\r\n  ids.forEach((id) => {\r\n    const product = entities.find((el) => el.id === id);\r\n    if (product) {\r\n      _products.push(product);\r\n    }\r\n  });\r\n  return _products;\r\n};\r\n\r\nexport function ProductsFetchDialog({ show, onHide }) {\r\n  // Products UI Context\r\n  const productsUIContext = useProductsUIContext();\r\n  const productsUIProps = useMemo(() => {\r\n    return {\r\n      ids: productsUIContext.ids,\r\n      queryParams: productsUIContext.queryParams,\r\n    };\r\n  }, [productsUIContext]);\r\n\r\n  // Products Redux state\r\n  const { products } = useSelector(\r\n    (state) => ({\r\n      products: selectedProducts(state.products.entities, productsUIProps.ids),\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  // if there weren't selected ids we should close modal\r\n  useEffect(() => {\r\n    if (!productsUIProps.ids || productsUIProps.ids.length === 0) {\r\n      onHide();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [productsUIProps.ids]);\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Fetch selected elements\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <div className=\"list-timeline list-timeline-skin-light padding-30\">\r\n          <div className=\"list-timeline-items\">\r\n            {products.map((product) => (\r\n              <div className=\"list-timeline-item mb-3\" key={product.id}>\r\n                <span className=\"list-timeline-text\">\r\n                  <span\r\n                    className={`label label-lg label-light-${\r\n                      ProductStatusCssClasses[product.status]\r\n                    } label-inline`}\r\n                    style={{ width: \"60px\" }}\r\n                  >\r\n                    ID: {product.id}\r\n                  </span>{\" \"}\r\n                  <span className=\"ml-5\">\r\n                    {product.manufacture}, {product.model}\r\n                  </span>\r\n                </span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onHide}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onHide}\r\n            className=\"btn btn-primary btn-elevate\"\r\n          >\r\n            Ok\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useEffect, useState, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { ProductStatusCssClasses } from \"../ProductsUIHelpers\";\r\nimport * as actions from \"../../../_redux/products/productsActions\";\r\nimport { useProductsUIContext } from \"../ProductsUIContext\";\r\n\r\nconst selectedProducts = (entities, ids) => {\r\n  const _products = [];\r\n  ids.forEach((id) => {\r\n    const product = entities.find((el) => el.id === id);\r\n    if (product) {\r\n      _products.push(product);\r\n    }\r\n  });\r\n  return _products;\r\n};\r\n\r\nexport function ProductsUpdateStatusDialog({ show, onHide }) {\r\n  // Products UI Context\r\n  const productsUIContext = useProductsUIContext();\r\n  const productsUIProps = useMemo(() => {\r\n    return {\r\n      ids: productsUIContext.ids,\r\n      setIds: productsUIContext.setIds,\r\n      queryParams: productsUIContext.queryParams,\r\n    };\r\n  }, [productsUIContext]);\r\n\r\n  // Products Redux state\r\n  const { products, isLoading } = useSelector(\r\n    (state) => ({\r\n      products: selectedProducts(state.products.entities, productsUIProps.ids),\r\n      isLoading: state.products.actionsLoading,\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  // if there weren't selected products we should close modal\r\n  useEffect(() => {\r\n    if (productsUIProps.ids || productsUIProps.ids.length === 0) {\r\n      onHide();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [productsUIProps.ids]);\r\n\r\n  const [status, setStatus] = useState(0);\r\n\r\n  const dispatch = useDispatch();\r\n  const updateStatus = () => {\r\n    // server request for updateing product by ids\r\n    dispatch(actions.updateProductsStatus(productsUIProps.ids, status)).then(\r\n      () => {\r\n        // refresh list after deletion\r\n        dispatch(actions.fetchProducts(productsUIProps.queryParams)).then(\r\n          () => {\r\n            // clear selections list\r\n            productsUIProps.setIds([]);\r\n            // closing delete modal\r\n            onHide();\r\n          }\r\n        );\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Status has been updated for selected products\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body className=\"overlay overlay-block cursor-default\">\r\n        {isLoading && (\r\n          <div className=\"overlay-layer bg-transparent\">\r\n            <div className=\"spinner spinner-lg spinner-warning\" />\r\n          </div>\r\n        )}\r\n        <div className=\"list-timeline list-timeline-skin-light padding-30\">\r\n          <div className=\"list-timeline-items\">\r\n            {products.map((product) => (\r\n              <div className=\"list-timeline-item mb-3\" key={product.id}>\r\n                <span className=\"list-timeline-text\">\r\n                  <span\r\n                    className={`label label-lg label-light-${\r\n                      ProductStatusCssClasses[product.status]\r\n                    } label-inline`}\r\n                    style={{ width: \"60px\" }}\r\n                  >\r\n                    ID: {product.id}\r\n                  </span>{\" \"}\r\n                  <span className=\"ml-5\">\r\n                    {product.manufacture}, {product.model}\r\n                  </span>\r\n                </span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </Modal.Body>\r\n      <Modal.Footer className=\"form\">\r\n        <div className=\"form-group\">\r\n          <select\r\n            className={`form-control ${ProductStatusCssClasses[status]}`}\r\n            value={status}\r\n            onChange={(e) => setStatus(+e.target.value)}\r\n          >\r\n            <option value=\"0\">Selling</option>\r\n            <option value=\"1\">Sold</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={onHide}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={updateStatus}\r\n            className=\"btn btn-primary btn-elevate\"\r\n          >\r\n            Update Status\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport { isEqual } from \"lodash\";\r\nimport { useProductsUIContext } from \"../ProductsUIContext\";\r\n\r\nconst prepareFilter = (queryParams, values) => {\r\n  const { status, condition, searchText } = values;\r\n  const newQueryParams = { ...queryParams };\r\n  const filter = {};\r\n  // Filter by status\r\n  filter.status = status !== \"\" ? +status : undefined;\r\n  // Filter by condition\r\n  filter.condition = condition !== \"\" ? +condition : undefined;\r\n  // Filter by all fields\r\n  filter.model = searchText;\r\n  if (searchText) {\r\n    filter.manufacture = searchText;\r\n    filter.VINCode = searchText;\r\n  }\r\n  newQueryParams.filter = filter;\r\n  return newQueryParams;\r\n};\r\n\r\nexport function ProductsFilter({ listLoading }) {\r\n  // Products UI Context\r\n  const productsUIContext = useProductsUIContext();\r\n  const productsUIProps = useMemo(() => {\r\n    return {\r\n      setQueryParams: productsUIContext.setQueryParams,\r\n      queryParams: productsUIContext.queryParams,\r\n    };\r\n  }, [productsUIContext]);\r\n\r\n  const applyFilter = (values) => {\r\n    const newQueryParams = prepareFilter(productsUIProps.queryParams, values);\r\n    if (!isEqual(newQueryParams, productsUIProps.queryParams)) {\r\n      newQueryParams.pageNumber = 1;\r\n      productsUIProps.setQueryParams(newQueryParams);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={{\r\n          status: \"\", // values => All=\"\"/Selling=0/Sold=1\r\n          condition: \"\", // values => All=\"\"/New=0/Used=1\r\n          searchText: \"\",\r\n        }}\r\n        onSubmit={(values) => {\r\n          applyFilter(values);\r\n        }}\r\n      >\r\n        {({\r\n          values,\r\n          handleSubmit,\r\n          handleBlur,\r\n          handleChange,\r\n          setFieldValue,\r\n        }) => (\r\n          <form onSubmit={handleSubmit} className=\"form form-label-right\">\r\n            <div className=\"form-group row\">\r\n              <div className=\"col-lg-2\">\r\n                <select\r\n                  className=\"form-control\"\r\n                  name=\"status\"\r\n                  placeholder=\"Filter by Status\"\r\n                  onChange={(e) => {\r\n                    setFieldValue(\"status\", e.target.value);\r\n                    handleSubmit();\r\n                  }}\r\n                  onBlur={handleBlur}\r\n                  value={values.status}\r\n                >\r\n                  <option value=\"\">All</option>\r\n                  <option value=\"0\">Selling</option>\r\n                  <option value=\"1\">Sold</option>\r\n                </select>\r\n                <small className=\"form-text text-muted\">\r\n                  <b>Filter</b> by Status\r\n                </small>\r\n              </div>\r\n              <div className=\"col-lg-2\">\r\n                <select\r\n                  className=\"form-control\"\r\n                  placeholder=\"Filter by Type\"\r\n                  name=\"condition\"\r\n                  onBlur={handleBlur}\r\n                  onChange={(e) => {\r\n                    setFieldValue(\"condition\", e.target.value);\r\n                    handleSubmit();\r\n                  }}\r\n                  value={values.condition}\r\n                >\r\n                  <option value=\"\">All</option>\r\n                  <option value=\"0\">New</option>\r\n                  <option value=\"1\">Used</option>\r\n                </select>\r\n                <small className=\"form-text text-muted\">\r\n                  <b>Filter</b> by Condition\r\n                </small>\r\n              </div>\r\n              <div className=\"col-lg-2\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"searchText\"\r\n                  placeholder=\"Search\"\r\n                  onBlur={handleBlur}\r\n                  value={values.searchText}\r\n                  onChange={(e) => {\r\n                    setFieldValue(\"searchText\", e.target.value);\r\n                    handleSubmit();\r\n                  }}\r\n                />\r\n                <small className=\"form-text text-muted\">\r\n                  <b>Search</b> in all fields\r\n                </small>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  ProductStatusCssClasses,\r\n  ProductStatusTitles\r\n} from \"../../ProductsUIHelpers\";\r\n\r\nexport const StatusColumnFormatter = (cellContent, row) => (\r\n  <span\r\n    className={`label label-lg label-light-${\r\n      ProductStatusCssClasses[row.status]\r\n    } label-inline`}\r\n  >\r\n    {ProductStatusTitles[row.status]}\r\n  </span>\r\n);\r\n","import React from \"react\";\r\nimport {\r\n  ProductConditionCssClasses,\r\n  ProductConditionTitles\r\n} from \"../../ProductsUIHelpers\";\r\n\r\nexport const ConditionColumnFormatter = (cellContent, row) => (\r\n  <>\r\n    <span\r\n      className={`badge badge-${\r\n        ProductConditionCssClasses[row.condition]\r\n      } badge-dot`}\r\n    ></span>\r\n    &nbsp;\r\n    <span\r\n      className={`font-bold font-${\r\n        ProductConditionCssClasses[row.condition]\r\n      }`}\r\n    >\r\n      {ProductConditionTitles[row.condition]}\r\n    </span>\r\n  </>\r\n);\r\n","import React from \"react\";\r\n\r\nexport const ColorColumnFormatter = (cellContent, row) => (\r\n  <span style={{ color: row.color }}>{row.color}</span>\r\n);\r\n","import React from \"react\";\r\n\r\nexport const PriceColumnFormatter = (cellContent, row) => <>${row.price}</>;\r\n","/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\r\nimport React from \"react\";\r\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport SVG from \"react-inlinesvg\";\r\nimport { toAbsoluteUrl } from \"../../../../../../../_metronic/_helpers\";\r\n\r\nexport const ActionsColumnFormatter = (\r\n  cellContent,\r\n  row,\r\n  rowIndex,\r\n  { openEditProductPage, openDeleteProductDialog }\r\n) => (\r\n  <>\r\n    <OverlayTrigger\r\n      overlay={<Tooltip id=\"products-edit-tooltip\">Edit product</Tooltip>}\r\n    >\r\n      <a\r\n        className=\"btn btn-icon btn-light btn-hover-primary btn-sm mx-3\"\r\n        onClick={() => openEditProductPage(row.id)}\r\n      >\r\n        <span className=\"svg-icon svg-icon-md svg-icon-primary\">\r\n          <SVG\r\n            src={toAbsoluteUrl(\"/media/svg/icons/Communication/Write.svg\")}\r\n          />\r\n        </span>\r\n      </a>\r\n    </OverlayTrigger>\r\n\r\n    <> </>\r\n    <OverlayTrigger\r\n      overlay={<Tooltip id=\"products-delete-tooltip\">Delete product</Tooltip>}\r\n    >\r\n      <a\r\n        className=\"btn btn-icon btn-light btn-hover-danger btn-sm\"\r\n        onClick={() => openDeleteProductDialog(row.id)}\r\n      >\r\n        <span className=\"svg-icon svg-icon-md svg-icon-danger\">\r\n          <SVG src={toAbsoluteUrl(\"/media/svg/icons/General/Trash.svg\")} />\r\n        </span>\r\n      </a>\r\n    </OverlayTrigger>\r\n  </>\r\n);\r\n","// React bootstrap table next =>\r\n// DOCS: https://react-bootstrap-table.github.io/react-bootstrap-table2/docs/\r\n// STORYBOOK: https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html\r\nimport React, { useEffect, useMemo } from \"react\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory, {\r\n  PaginationProvider,\r\n} from \"react-bootstrap-table2-paginator\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../../_redux/products/productsActions\";\r\nimport * as uiHelpers from \"../ProductsUIHelpers\";\r\nimport {\r\n  getSelectRow,\r\n  getHandlerTableChange,\r\n  NoRecordsFoundMessage,\r\n  PleaseWaitMessage,\r\n  sortCaret,\r\n} from \"../../../../../../_metronic/_helpers\";\r\nimport * as columnFormatters from \"./column-formatters\";\r\nimport { Pagination } from \"../../../../../../_metronic/_partials/controls\";\r\nimport { useProductsUIContext } from \"../ProductsUIContext\";\r\n\r\nexport function ProductsTable() {\r\n  // Products UI Context\r\n  const productsUIContext = useProductsUIContext();\r\n  const productsUIProps = useMemo(() => {\r\n    return {\r\n      ids: productsUIContext.ids,\r\n      setIds: productsUIContext.setIds,\r\n      queryParams: productsUIContext.queryParams,\r\n      setQueryParams: productsUIContext.setQueryParams,\r\n      openEditProductPage: productsUIContext.openEditProductPage,\r\n      openDeleteProductDialog: productsUIContext.openDeleteProductDialog,\r\n    };\r\n  }, [productsUIContext]);\r\n\r\n  // Getting curret state of products list from store (Redux)\r\n  const { currentState } = useSelector(\r\n    (state) => ({ currentState: state.products }),\r\n    shallowEqual\r\n  );\r\n  const { totalCount, entities, listLoading } = currentState;\r\n  // Products Redux state\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    // clear selections list\r\n    productsUIProps.setIds([]);\r\n    // server call by queryParams\r\n    dispatch(actions.fetchProducts(productsUIProps.queryParams));\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [productsUIProps.queryParams, dispatch]);\r\n  // Table columns\r\n  const columns = [\r\n    {\r\n      dataField: \"VINCode\",\r\n      text: \"VIN Code (ID)\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"manufacture\",\r\n      text: \"Manufacture\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"model\",\r\n      text: \"Model\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"modelYear\",\r\n      text: \"Model Year\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"color\",\r\n      text: \"Color\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      formatter: columnFormatters.ColorColumnFormatter,\r\n    },\r\n    {\r\n      dataField: \"price\",\r\n      text: \"Price\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      formatter: columnFormatters.PriceColumnFormatter,\r\n    },\r\n    {\r\n      dataField: \"status\",\r\n      text: \"Status\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      formatter: columnFormatters.StatusColumnFormatter,\r\n    },\r\n    {\r\n      dataField: \"condition\",\r\n      text: \"Condition\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      formatter: columnFormatters.ConditionColumnFormatter,\r\n    },\r\n    {\r\n      dataField: \"action\",\r\n      text: \"Actions\",\r\n      formatter: columnFormatters.ActionsColumnFormatter,\r\n      formatExtraData: {\r\n        openEditProductPage: productsUIProps.openEditProductPage,\r\n        openDeleteProductDialog: productsUIProps.openDeleteProductDialog,\r\n      },\r\n      classes: \"text-right pr-0\",\r\n      headerClasses: \"text-right pr-3\",\r\n      style: {\r\n        minWidth: \"100px\",\r\n      },\r\n    },\r\n  ];\r\n  // Table pagination properties\r\n  const paginationOptions = {\r\n    custom: true,\r\n    totalSize: totalCount,\r\n    sizePerPageList: uiHelpers.sizePerPageList,\r\n    sizePerPage: productsUIProps.queryParams.pageSize,\r\n    page: productsUIProps.queryParams.pageNumber,\r\n  };\r\n  return (\r\n    <>\r\n      <PaginationProvider pagination={paginationFactory(paginationOptions)}>\r\n        {({ paginationProps, paginationTableProps }) => {\r\n          return (\r\n            <Pagination\r\n              isLoading={listLoading}\r\n              paginationProps={paginationProps}\r\n            >\r\n              <BootstrapTable\r\n                wrapperClasses=\"table-responsive\"\r\n                classes=\"table table-head-custom table-vertical-center overflow-hidden\"\r\n                bootstrap4\r\n                bordered={false}\r\n                remote\r\n                keyField=\"id\"\r\n                data={entities === null ? [] : entities}\r\n                columns={columns}\r\n                defaultSorted={uiHelpers.defaultSorted}\r\n                onTableChange={getHandlerTableChange(\r\n                  productsUIProps.setQueryParams\r\n                )}\r\n                selectRow={getSelectRow({\r\n                  entities,\r\n                  ids: productsUIProps.ids,\r\n                  setIds: productsUIProps.setIds,\r\n                })}\r\n                {...paginationTableProps}\r\n              >\r\n                <PleaseWaitMessage entities={entities} />\r\n                <NoRecordsFoundMessage entities={entities} />\r\n              </BootstrapTable>\r\n            </Pagination>\r\n          );\r\n        }}\r\n      </PaginationProvider>\r\n    </>\r\n  );\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport { useProductsUIContext } from \"../ProductsUIContext\";\r\n\r\nexport function ProductsGrouping() {\r\n  // Products UI Context\r\n  const productsUIContext = useProductsUIContext();\r\n  const productsUIProps = useMemo(() => {\r\n    return {\r\n      ids: productsUIContext.ids,\r\n      setIds: productsUIContext.setIds,\r\n      openDeleteProductsDialog: productsUIContext.openDeleteProductsDialog,\r\n      openFetchProductsDialog: productsUIContext.openFetchProductsDialog,\r\n      openUpdateProductsStatusDialog:\r\n        productsUIContext.openUpdateProductsStatusDialog,\r\n    };\r\n  }, [productsUIContext]);\r\n\r\n  return (\r\n    <div className=\"form\">\r\n      <div className=\"row align-items-center form-group-actions margin-top-20 margin-bottom-20\">\r\n        <div className=\"col-xl-12\">\r\n          <div className=\"form-group form-group-inline\">\r\n            <div className=\"form-label form-label-no-wrap\">\r\n              <label className=\"-font-bold font-danger-\">\r\n                <span>\r\n                  Selected records count: <b>{productsUIProps.ids.length}</b>\r\n                </span>\r\n              </label>\r\n            </div>\r\n            <div>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-danger font-weight-bolder font-size-sm\"\r\n                onClick={productsUIProps.openDeleteProductsDialog}\r\n              >\r\n                <i className=\"fa fa-trash\"></i> Delete All\r\n              </button>\r\n              &nbsp;\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-light-primary font-weight-bolder font-size-sm\"\r\n                onClick={productsUIProps.openFetchProductsDialog}\r\n              >\r\n                <i className=\"fa fa-stream\"></i> Fetch Selected\r\n              </button>\r\n              &nbsp;\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-light-primary font-weight-bolder font-size-sm\"\r\n                onClick={productsUIProps.openUpdateProductsStatusDialog}\r\n              >\r\n                <i className=\"fa fa-sync-alt\"></i> Update Status\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, {useMemo} from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar,\r\n} from \"../../../../../_metronic/_partials/controls\";\r\nimport { ProductsFilter } from \"./products-filter/ProductsFilter\";\r\nimport { ProductsTable } from \"./products-table/ProductsTable\";\r\nimport { ProductsGrouping } from \"./products-grouping/ProductsGrouping\";\r\nimport { useProductsUIContext } from \"./ProductsUIContext\";\r\n\r\nexport function ProductsCard() {\r\n  const productsUIContext = useProductsUIContext();\r\n  const productsUIProps = useMemo(() => {\r\n    return {\r\n      ids: productsUIContext.ids,\r\n      queryParams: productsUIContext.queryParams,\r\n      setQueryParams: productsUIContext.setQueryParams,\r\n      newProductButtonClick: productsUIContext.newProductButtonClick,\r\n      openDeleteProductsDialog: productsUIContext.openDeleteProductsDialog,\r\n      openEditProductPage: productsUIContext.openEditProductPage,\r\n      openUpdateProductsStatusDialog:\r\n        productsUIContext.openUpdateProductsStatusDialog,\r\n      openFetchProductsDialog: productsUIContext.openFetchProductsDialog,\r\n    };\r\n  }, [productsUIContext]);\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader title=\"Products list\">\r\n        <CardHeaderToolbar>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary\"\r\n            onClick={productsUIProps.newProductButtonClick}\r\n          >\r\n            New Product\r\n          </button>\r\n        </CardHeaderToolbar>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <ProductsFilter />\r\n        {productsUIProps.ids.length > 0 && (\r\n          <>\r\n            <ProductsGrouping />\r\n          </>\r\n        )}\r\n        <ProductsTable />\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { ProductsLoadingDialog } from \"./products-loading-dialog/ProductsLoadingDialog\";\r\nimport { ProductDeleteDialog } from \"./product-delete-dialog/ProductDeleteDialog\";\r\nimport { ProductsDeleteDialog } from \"./products-delete-dialog/ProductsDeleteDialog\";\r\nimport { ProductsFetchDialog } from \"./products-fetch-dialog/ProductsFetchDialog\";\r\nimport { ProductsUpdateStatusDialog } from \"./products-update-status-dialog/ProductsUpdateStatusDialog\";\r\nimport { ProductsCard } from \"./ProductsCard\";\r\nimport { ProductsUIProvider } from \"./ProductsUIContext\";\r\n\r\nexport function ProductsPage({ history }) {\r\n  const productsUIEvents = {\r\n    newProductButtonClick: () => {\r\n      history.push(\"/e-commerce/products/new\");\r\n    },\r\n    openEditProductPage: (id) => {\r\n      history.push(`/e-commerce/products/${id}/edit`);\r\n    },\r\n    openDeleteProductDialog: (id) => {\r\n      history.push(`/e-commerce/products/${id}/delete`);\r\n    },\r\n    openDeleteProductsDialog: () => {\r\n      history.push(`/e-commerce/products/deleteProducts`);\r\n    },\r\n    openFetchProductsDialog: () => {\r\n      history.push(`/e-commerce/products/fetch`);\r\n    },\r\n    openUpdateProductsStatusDialog: () => {\r\n      history.push(\"/e-commerce/products/updateStatus\");\r\n    },\r\n  };\r\n\r\n  return (\r\n    <ProductsUIProvider productsUIEvents={productsUIEvents}>\r\n      <ProductsLoadingDialog />\r\n      <Route path=\"/e-commerce/products/deleteProducts\">\r\n        {({ history, match }) => (\r\n          <ProductsDeleteDialog\r\n            show={match != null}\r\n            onHide={() => {\r\n              history.push(\"/e-commerce/products\");\r\n            }}\r\n          />\r\n        )}\r\n      </Route>\r\n      <Route path=\"/e-commerce/products/:id/delete\">\r\n        {({ history, match }) => (\r\n          <ProductDeleteDialog\r\n            show={match != null}\r\n            id={match && match.params.id}\r\n            onHide={() => {\r\n              history.push(\"/e-commerce/products\");\r\n            }}\r\n          />\r\n        )}\r\n      </Route>\r\n      <Route path=\"/e-commerce/products/fetch\">\r\n        {({ history, match }) => (\r\n          <ProductsFetchDialog\r\n            show={match != null}\r\n            onHide={() => {\r\n              history.push(\"/e-commerce/products\");\r\n            }}\r\n          />\r\n        )}\r\n      </Route>\r\n      <Route path=\"/e-commerce/products/updateStatus\">\r\n        {({ history, match }) => (\r\n          <ProductsUpdateStatusDialog\r\n            show={match != null}\r\n            onHide={() => {\r\n              history.push(\"/e-commerce/products\");\r\n            }}\r\n          />\r\n        )}\r\n      </Route>\r\n      <ProductsCard />\r\n    </ProductsUIProvider>\r\n  );\r\n}\r\n","// Form is based on Formik\r\n// Data validation is based on Yup\r\n// Please, be familiar with article first:\r\n// https://hackernoon.com/react-form-validation-with-formik-and-yup-8b76bda62e10\r\nimport React from \"react\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Input, Select } from \"../../../../../../_metronic/_partials/controls\";\r\nimport {\r\n  AVAILABLE_COLORS,\r\n  AVAILABLE_MANUFACTURES,\r\n  ProductStatusTitles,\r\n  ProductConditionTitles,\r\n} from \"../ProductsUIHelpers\";\r\n\r\n// Validation schema\r\nconst ProductEditSchema = Yup.object().shape({\r\n  model: Yup.string()\r\n    .min(2, \"Minimum 2 symbols\")\r\n    .max(50, \"Maximum 50 symbols\")\r\n    .required(\"Model is required\"),\r\n  manufacture: Yup.string()\r\n    .min(2, \"Minimum 2 symbols\")\r\n    .max(50, \"Maximum 50 symbols\")\r\n    .required(\"Manufacture is required\"),\r\n  modelYear: Yup.number()\r\n    .min(1950, \"1950 is minimum\")\r\n    .max(2020, \"2020 is maximum\")\r\n    .required(\"Model year is required\"),\r\n  mileage: Yup.number()\r\n    .min(0, \"0 is minimum\")\r\n    .max(1000000, \"1000000 is maximum\")\r\n    .required(\"Mileage is required\"),\r\n  color: Yup.string().required(\"Color is required\"),\r\n  price: Yup.number()\r\n    .min(1, \"$1 is minimum\")\r\n    .max(1000000, \"$1000000 is maximum\")\r\n    .required(\"Price is required\"),\r\n  VINCode: Yup.string().required(\"VINCode is required\"),\r\n});\r\n\r\nexport function ProductEditForm({\r\n  product,\r\n  btnRef,\r\n  saveProduct,\r\n}) {\r\n  return (\r\n    <>\r\n      <Formik\r\n        enableReinitialize={true}\r\n        initialValues={product}\r\n        validationSchema={ProductEditSchema}\r\n        onSubmit={(values) => {\r\n          saveProduct(values);\r\n        }}\r\n      >\r\n        {({ handleSubmit }) => (\r\n          <>\r\n            <Form className=\"form form-label-right\">\r\n              <div className=\"form-group row\">\r\n                <div className=\"col-lg-4\">\r\n                  <Field\r\n                    name=\"model\"\r\n                    component={Input}\r\n                    placeholder=\"Model\"\r\n                    label=\"Model\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                  <Select name=\"manufacture\" label=\"Manufacture\">\r\n                    {AVAILABLE_MANUFACTURES.map((manufacture) => (\r\n                      <option key={manufacture} value={manufacture}>\r\n                        {manufacture}\r\n                      </option>\r\n                    ))}\r\n                  </Select>\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                  <Field\r\n                    type=\"number\"\r\n                    name=\"modelYear\"\r\n                    component={Input}\r\n                    placeholder=\"Model year\"\r\n                    label=\"Model year\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group row\">\r\n                <div className=\"col-lg-4\">\r\n                  <Field\r\n                    type=\"number\"\r\n                    name=\"mileage\"\r\n                    component={Input}\r\n                    placeholder=\"Mileage\"\r\n                    label=\"Mileage\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                  <Select name=\"color\" label=\"Color\">\r\n                    {AVAILABLE_COLORS.map((color) => (\r\n                      <option key={color} value={color}>\r\n                        {color}\r\n                      </option>\r\n                    ))}\r\n                  </Select>\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                  <Field\r\n                    type=\"number\"\r\n                    name=\"price\"\r\n                    component={Input}\r\n                    placeholder=\"Price\"\r\n                    label=\"Price ($)\"\r\n                    customFeedbackLabel=\"Please enter Price\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group row\">\r\n                <div className=\"col-lg-4\">\r\n                  <Field\r\n                    name=\"VINCode\"\r\n                    component={Input}\r\n                    placeholder=\"VIN code\"\r\n                    label=\"VIN code\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                  <Select name=\"status\" label=\"Status\">\r\n                    {ProductStatusTitles.map((status, index) => (\r\n                      <option key={status} value={index}>\r\n                        {status}\r\n                      </option>\r\n                    ))}\r\n                  </Select>\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                  <Select name=\"condition\" label=\"Condition\">\r\n                    {ProductConditionTitles.map((condition, index) => (\r\n                      <option key={condition} value={index}>\r\n                        {condition}\r\n                      </option>\r\n                    ))}\r\n                  </Select>\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Description</label>\r\n                <Field\r\n                  name=\"description\"\r\n                  as=\"textarea\"\r\n                  className=\"form-control\"\r\n                />\r\n              </div>\r\n              <button\r\n                type=\"submit\"\r\n                style={{ display: \"none\" }}\r\n                ref={btnRef}\r\n                onSubmit={() => handleSubmit()}\r\n              ></button>\r\n            </Form>\r\n          </>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n","export const defaultSorted = [{ dataField: \"id\", order: \"asc\" }];\r\nexport const sizePerPageList = [\r\n  { text: \"1\", value: 1 },\r\n  { text: \"3\", value: 3 },\r\n  { text: \"5\", value: 5 },\r\n];\r\nexport const initialFilter = {\r\n  filter: {\r\n    value: \"\",\r\n  },\r\n  sortOrder: \"asc\", // asc||desc\r\n  sortField: \"name\",\r\n  pageNumber: 1,\r\n  pageSize: 5,\r\n};\r\n\r\nexport const SPECIFICATIONS_DICTIONARY = [\r\n  { id: 0, name: \"Seats\" },\r\n  { id: 1, name: \"Fuel Type\" },\r\n  { id: 2, name: \"Stock\" },\r\n  { id: 3, name: \"Door count\" },\r\n  { id: 4, name: \"Engine\" },\r\n  { id: 5, name: \"Transmission\" },\r\n  { id: 6, name: \"Drivetrain\" },\r\n  { id: 7, name: \"Combined MPG\" },\r\n  { id: 8, name: \"Warranty\" },\r\n  { id: 9, name: \"Wheels\" },\r\n];\r\n","/* eslint-disable no-unused-vars */\r\nimport React, {\r\n  useEffect,\r\n  useContext,\r\n  createContext,\r\n  useState,\r\n  useCallback,\r\n} from \"react\";\r\nimport { isEqual, isFunction } from \"lodash\";\r\nimport { initialFilter } from \"./SpecificationsUIHelper\";\r\n\r\nconst SpecificationsUIContext = createContext();\r\n\r\nexport function useSpecificationsUIContext() {\r\n  return useContext(SpecificationsUIContext);\r\n}\r\n\r\nexport const SpecificationsUIConsumer = SpecificationsUIContext.Consumer;\r\n\r\nexport function SpecificationsUIProvider({ currentProductId, children }) {\r\n  const [productId, setProductId] = useState(currentProductId);\r\n  const [queryParams, setQueryParamsBase] = useState(initialFilter);\r\n  const [ids, setIds] = useState([]);\r\n  const setQueryParams = useCallback((nextQueryParams) => {\r\n    setQueryParamsBase((prevQueryParams) => {\r\n      if (isFunction(nextQueryParams)) {\r\n        nextQueryParams = nextQueryParams(prevQueryParams);\r\n      }\r\n\r\n      if (isEqual(prevQueryParams, nextQueryParams)) {\r\n        return prevQueryParams;\r\n      }\r\n\r\n      return nextQueryParams;\r\n    });\r\n  }, []);\r\n  const [selectedId, setSelectedId] = useState(null);\r\n  const initSpecification = {\r\n    id: undefined,\r\n    value: \"\",\r\n    specId: 0,\r\n    carId: productId,\r\n  };\r\n  useEffect(() => {\r\n    initSpecification.carId = currentProductId;\r\n    initSpecification.productId = currentProductId;\r\n    setProductId(currentProductId);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currentProductId]);\r\n  const [\r\n    showEditSpecificationDialog,\r\n    setShowEditSpecificationDialog,\r\n  ] = useState(false);\r\n  const openNewSpecificationDialog = () => {\r\n    setSelectedId(undefined);\r\n    setShowEditSpecificationDialog(true);\r\n  };\r\n  const openEditSpecificationDialog = (id) => {\r\n    setSelectedId(id);\r\n    setShowEditSpecificationDialog(true);\r\n  };\r\n  const closeEditSpecificationDialog = () => {\r\n    setSelectedId(undefined);\r\n    setShowEditSpecificationDialog(false);\r\n  };\r\n  const [\r\n    showDeleteSpecificationDialog,\r\n    setShowDeleteSpecificationDialog,\r\n  ] = useState(false);\r\n  const openDeleteSpecificationDialog = (id) => {\r\n    setSelectedId(id);\r\n    setShowDeleteSpecificationDialog(true);\r\n  };\r\n  const closeDeleteSpecificationDialog = () => {\r\n    setSelectedId(undefined);\r\n    setShowDeleteSpecificationDialog(false);\r\n  };\r\n  const [\r\n    showDeleteSpecificationsDialog,\r\n    setShowDeleteSpecificationsDialog,\r\n  ] = useState(false);\r\n  const openDeleteSpecificationsDialog = () => {\r\n    setShowDeleteSpecificationsDialog(true);\r\n  };\r\n  const closeDeleteSpecificationsDialog = () => {\r\n    setShowDeleteSpecificationsDialog(false);\r\n  };\r\n  const [\r\n    showFetchSpecificationsDialog,\r\n    setShowFetchSpecificationsDialog,\r\n  ] = useState(false);\r\n  const openFetchSpecificationsDialog = () => {\r\n    setShowFetchSpecificationsDialog(true);\r\n  };\r\n  const closeFetchSpecificationsDialog = () => {\r\n    setShowFetchSpecificationsDialog(false);\r\n  };\r\n  const value = {\r\n    ids,\r\n    setIds,\r\n    productId,\r\n    setProductId,\r\n    queryParams,\r\n    setQueryParams,\r\n    initSpecification,\r\n    selectedId,\r\n    showEditSpecificationDialog,\r\n    openEditSpecificationDialog,\r\n    openNewSpecificationDialog,\r\n    closeEditSpecificationDialog,\r\n    showDeleteSpecificationDialog,\r\n    openDeleteSpecificationDialog,\r\n    closeDeleteSpecificationDialog,\r\n    showDeleteSpecificationsDialog,\r\n    openDeleteSpecificationsDialog,\r\n    closeDeleteSpecificationsDialog,\r\n    showFetchSpecificationsDialog,\r\n    openFetchSpecificationsDialog,\r\n    closeFetchSpecificationsDialog,\r\n  };\r\n\r\n  return (\r\n    <SpecificationsUIContext.Provider value={value}>\r\n      {children}\r\n    </SpecificationsUIContext.Provider>\r\n  );\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport { isEqual } from \"lodash\";\r\nimport { useSpecificationsUIContext } from \"./SpecificationsUIContext\";\r\n\r\nconst prepareFilter = (queryParams, values) => {\r\n  const { searchText } = values;\r\n  const newQueryParams = { ...queryParams };\r\n  const filter = {};\r\n  filter.value = searchText;\r\n  if (searchText) {\r\n    filter.name = searchText;\r\n  }\r\n  newQueryParams.filter = filter;\r\n  return newQueryParams;\r\n};\r\n\r\nexport function SpecificationsFilter() {\r\n  // Specs UI Context\r\n  const specsUIContext = useSpecificationsUIContext();\r\n  const specsUIProps = useMemo(() => {\r\n    return {\r\n      openNewSpecificationDialog: specsUIContext.openNewSpecificationDialog,\r\n      setQueryParams: specsUIContext.setQueryParams,\r\n      queryParams: specsUIContext.queryParams,\r\n    };\r\n  }, [specsUIContext]);\r\n\r\n  const applyFilter = (values) => {\r\n    const newQueryParams = prepareFilter(specsUIProps.queryParams, values);\r\n    if (!isEqual(newQueryParams, specsUIProps.queryParams)) {\r\n      newQueryParams.pageNumber = 1;\r\n      specsUIProps.setQueryParams(newQueryParams);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"form-filtration\">\r\n        <div className=\"row align-items-center\">\r\n          <div className=\"col-md-2 margin-bottom-10-mobile\">\r\n            <Formik\r\n              initialValues={{\r\n                searchText: \"\",\r\n              }}\r\n              onSubmit={(values) => {\r\n                applyFilter(values);\r\n              }}\r\n            >\r\n              {({\r\n                values,\r\n                handleSubmit,\r\n                handleBlur,\r\n                handleChange,\r\n                setFieldValue,\r\n              }) => (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"searchText\"\r\n                      placeholder=\"Search\"\r\n                      onBlur={handleBlur}\r\n                      value={values.searchText}\r\n                      onChange={(e) => {\r\n                        setFieldValue(\"searchText\", e.target.value);\r\n                        handleSubmit();\r\n                      }}\r\n                    />\r\n                    <small className=\"form-text text-muted\">\r\n                      <b>Search</b> in all fields\r\n                    </small>\r\n                  </div>\r\n                </form>\r\n              )}\r\n            </Formik>\r\n          </div>\r\n          <div className=\"col-md-7 margin-bottom-10-mobile\"></div>\r\n          <div className=\"col-md-3 text-right margin-bottom-10-mobile\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary\"\r\n              onClick={() => specsUIProps.openNewSpecificationDialog()}\r\n            >\r\n              Create new specification\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import {createSlice} from \"@reduxjs/toolkit\";\r\n\r\nconst initialSpecificationsState = {\r\n  listLoading: false,\r\n  actionsLoading: false,\r\n  totalCount: 0,\r\n  entities: null,\r\n  specificationForEdit: undefined,\r\n  lastError: null\r\n};\r\nexport const callTypes = {\r\n  list: \"list\",\r\n  action: \"action\"\r\n};\r\n\r\nexport const specificationsSlice = createSlice({\r\n  name: \"specifications\",\r\n  initialState: initialSpecificationsState,\r\n  reducers: {\r\n    catchError: (state, action) => {\r\n      state.error = `${action.type}: ${action.payload.error}`;\r\n      if (action.payload.callType === callTypes.list) {\r\n        state.listLoading = false;\r\n      } else {\r\n        state.actionsLoading = false;\r\n      }\r\n    },\r\n    startCall: (state, action) => {\r\n      state.error = null;\r\n      if (action.payload.callType === callTypes.list) {\r\n        state.listLoading = true;\r\n      } else {\r\n        state.actionsLoading = true;\r\n      }\r\n    },\r\n    // getSpecificationById\r\n    specificationFetched: (state, action) => {\r\n      state.actionsLoading = false;\r\n      state.specificationForEdit = action.payload.specificationForEdit;\r\n      state.error = null;\r\n    },\r\n    // findSpecifications\r\n    specificationsFetched: (state, action) => {\r\n      const { totalCount, entities } = action.payload;\r\n      state.listLoading = false;\r\n      state.error = null;\r\n      state.entities = entities;\r\n      state.totalCount = totalCount;\r\n    },\r\n    // createSpecification\r\n    specificationCreated: (state, action) => {\r\n      state.actionsLoading = false;\r\n      state.error = null;\r\n      state.entities.push(action.payload.specification);\r\n    },\r\n    // updateSpecification\r\n    specificationUpdated: (state, action) => {\r\n      state.error = null;\r\n      state.actionsLoading = false;\r\n      state.entities = state.entities.map(entity => {\r\n        if (entity.id === action.payload.specification.id) {\r\n          return action.payload.specification;\r\n        }\r\n        return entity;\r\n      });\r\n    },\r\n    // deleteSpecification\r\n    specificationDeleted: (state, action) => {\r\n      state.error = null;\r\n      state.actionsLoading = false;\r\n      state.entities = state.entities.filter(el => el.id !== action.payload.id);\r\n    },\r\n    // deleteSpecifications\r\n    specificationsDeleted: (state, action) => {\r\n      state.error = null;\r\n      state.actionsLoading = false;\r\n      state.entities = state.entities.filter(\r\n        el => !action.payload.ids.includes(el.id)\r\n      );\r\n    }\r\n  }\r\n});\r\n","import * as requestFromServer from \"./specificationsCrud\";\r\nimport {specificationsSlice, callTypes} from \"./specificationsSlice\";\r\n\r\nconst {actions} = specificationsSlice;\r\n\r\nexport const fetchSpecifications = (queryParams, productId) => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.list }));\r\n  if (!productId) {\r\n    return dispatch(\r\n      actions.specificationsFetched({ totalCount: 0, entities: null })\r\n    );\r\n  }\r\n\r\n  return requestFromServer\r\n    .findSpecifications(queryParams, productId)\r\n    .then(response => {\r\n      const { totalCount, entities } = response.data;\r\n      dispatch(actions.specificationsFetched({ totalCount, entities }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't find specifications\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.list }));\r\n    });\r\n};\r\n\r\nexport const fetchSpecification = id => dispatch => {\r\n  if (!id) {\r\n    return dispatch(\r\n      actions.specificationFetched({ specificationForEdit: undefined })\r\n    );\r\n  }\r\n\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .getSpecificationById(id)\r\n    .then(response => {\r\n      const specification = response.data;\r\n      dispatch(\r\n        actions.specificationFetched({ specificationForEdit: specification })\r\n      );\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't find specification\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const deleteSpecification = id => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .deleteSpecification(id)\r\n    .then(response => {\r\n      dispatch(actions.specificationDeleted({ id }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't delete specification\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const createSpecification = specificationForCreation => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .createSpecification(specificationForCreation)\r\n    .then(response => {\r\n      const { specification } = response.data;\r\n      dispatch(actions.specificationCreated({ specification }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't create specification\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const updateSpecification = specification => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .updateSpecification(specification)\r\n    .then(() => {\r\n      dispatch(actions.specificationUpdated({ specification }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't update specification\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const deleteSpecifications = ids => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .deleteSpecifications(ids)\r\n    .then(() => {\r\n      dispatch(actions.specificationsDeleted({ ids }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't delete specifications\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport const SPECIFICATIONS_URL = \"api/specifications\";\r\n\r\n// CREATE =>  POST: add a new specifications to the server\r\nexport function createSpecification(specification) {\r\n  return axios.post(SPECIFICATIONS_URL, { specification });\r\n}\r\n\r\n// READ\r\n// Server should return filtered specifications by productId\r\nexport function getAllProductSpecificationsByProductId(productId) {\r\n  return axios.get(`${SPECIFICATIONS_URL}?productId=${productId}`);\r\n}\r\n\r\nexport function getSpecificationById(specificationId) {\r\n  return axios.get(`${SPECIFICATIONS_URL}/${specificationId}`);\r\n}\r\n\r\n// Server should return sorted/filtered specifications and merge with items from state\r\n// TODO: Change your URL to REAL API, right now URL is 'api/specificationsfind/{productId}'. Should be 'api/specifications/find/{productId}'!!!\r\nexport function findSpecifications(queryParams, productId) {\r\n  return axios.post(`${SPECIFICATIONS_URL}find/${productId}`, { queryParams });\r\n}\r\n\r\n// UPDATE => PUT: update the specification\r\nexport function updateSpecification(specification) {\r\n  return axios.put(`${SPECIFICATIONS_URL}/${specification.id}`, {\r\n    specification\r\n  });\r\n}\r\n\r\n// DELETE => delete the specification\r\nexport function deleteSpecification(specificationId) {\r\n  return axios.delete(`${SPECIFICATIONS_URL}/${specificationId}`);\r\n}\r\n\r\n// DELETE specifications by ids\r\nexport function deleteSpecifications(ids) {\r\n  return axios.post(`${SPECIFICATIONS_URL}/deleteSpecifications`, { ids });\r\n}\r\n","/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\r\nimport React from \"react\";\r\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport SVG from \"react-inlinesvg\";\r\nimport { toAbsoluteUrl } from \"../../../../../../../_metronic/_helpers\";\r\n\r\nexport function ActionsColumnFormatter(\r\n  cellContent,\r\n  row,\r\n  rowIndex,\r\n  { openEditSpecificationDialog, openDeleteSpecificationDialog }\r\n) {\r\n  return (\r\n    <>\r\n      <OverlayTrigger\r\n        overlay={<Tooltip id=\"specs-edit-tooltip\">Edit specification</Tooltip>}\r\n      >\r\n        <a\r\n          className=\"btn btn-icon btn-light btn-hover-primary btn-sm mx-3\"\r\n          onClick={() => openEditSpecificationDialog(row.id)}\r\n        >\r\n          <span className=\"svg-icon svg-icon-md svg-icon-primary\">\r\n            <SVG\r\n              src={toAbsoluteUrl(\"/media/svg/icons/Communication/Write.svg\")}\r\n            />\r\n          </span>\r\n        </a>\r\n      </OverlayTrigger>\r\n\r\n      <> </>\r\n      <OverlayTrigger\r\n        overlay={\r\n          <Tooltip id=\"spec-delete-tooltip\">Delete specification</Tooltip>\r\n        }\r\n      >\r\n        <a\r\n          className=\"btn btn-icon btn-light btn-hover-danger btn-sm\"\r\n          onClick={() => openDeleteSpecificationDialog(row.id)}\r\n        >\r\n          <span className=\"svg-icon svg-icon-md svg-icon-danger\">\r\n            <SVG src={toAbsoluteUrl(\"/media/svg/icons/General/Trash.svg\")} />\r\n          </span>\r\n        </a>\r\n      </OverlayTrigger>\r\n    </>\r\n  );\r\n}\r\n","// React bootstrap table next =>\r\n// DOCS: https://react-bootstrap-table.github.io/react-bootstrap-table2/docs/\r\n// STORYBOOK: https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html\r\nimport React, { useEffect, useMemo } from \"react\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory, {\r\n  PaginationProvider,\r\n} from \"react-bootstrap-table2-paginator\";\r\nimport * as actions from \"../../../_redux/specifications/specificationsActions\";\r\nimport { ActionsColumnFormatter } from \"./column-formatters/ActionsColumnFormatter\";\r\nimport * as uiHelpers from \"./SpecificationsUIHelper\";\r\nimport { Pagination } from \"../../../../../../_metronic/_partials/controls\";\r\nimport {\r\n  getSelectRow,\r\n  getHandlerTableChange,\r\n  NoRecordsFoundMessage,\r\n  PleaseWaitMessage,\r\n  sortCaret,\r\n} from \"../../../../../../_metronic/_helpers\";\r\nimport { useSpecificationsUIContext } from \"./SpecificationsUIContext\";\r\n\r\nexport function SpecificationsTable() {\r\n  // Specs UI Context\r\n  const specsUIContext = useSpecificationsUIContext();\r\n  const specsUIProps = useMemo(() => {\r\n    return {\r\n      queryParams: specsUIContext.queryParams,\r\n      setQueryParams: specsUIContext.setQueryParams,\r\n      openEditSpecificationDialog: specsUIContext.openEditSpecificationDialog,\r\n      openDeleteSpecificationDialog:\r\n        specsUIContext.openDeleteSpecificationDialog,\r\n      ids: specsUIContext.ids,\r\n      setIds: specsUIContext.setIds,\r\n      productId: specsUIContext.productId,\r\n    };\r\n  }, [specsUIContext]);\r\n\r\n  // Specs Redux state\r\n  // Getting curret state of products list from store (Redux)\r\n  const { currentState } = useSelector(\r\n    (state) => ({ currentState: state.specifications }),\r\n    shallowEqual\r\n  );\r\n  const { totalCount, entities, listLoading } = currentState;\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    specsUIProps.setIds([]);\r\n    dispatch(\r\n      actions.fetchSpecifications(specsUIProps.queryParams,specsUIProps.productId)\r\n    );\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [specsUIProps.queryParams, dispatch, specsUIProps.productId]);\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"name\",\r\n      text: \"Specification Type\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"value\",\r\n      text: \"Value\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"action\",\r\n      text: \"Actions\",\r\n      formatter: ActionsColumnFormatter,\r\n      formatExtraData: {\r\n        openEditSpecificationDialog: specsUIProps.openEditSpecificationDialog,\r\n        openDeleteSpecificationDialog:\r\n          specsUIProps.openDeleteSpecificationDialog,\r\n      },\r\n      classes: \"text-right pr-0\",\r\n      headerClasses: \"text-right pr-3\",\r\n      style: {\r\n        minWidth: \"100px\",\r\n      },\r\n    },\r\n  ];\r\n  // Table pagination properties\r\n  const paginationOptions = {\r\n    custom: true,\r\n    totalSize: totalCount,\r\n    sizePerPageList: uiHelpers.sizePerPageList,\r\n    sizePerPage: specsUIProps.queryParams.pageSize,\r\n    page: specsUIProps.queryParams.pageNumber,\r\n  };\r\n  return (\r\n    <>\r\n      <PaginationProvider pagination={paginationFactory(paginationOptions)}>\r\n        {({ paginationProps, paginationTableProps }) => {\r\n          return (\r\n            <Pagination\r\n              isLoading={listLoading}\r\n              paginationProps={paginationProps}\r\n            >\r\n              <BootstrapTable\r\n                wrapperClasses=\"table-responsive\"\r\n                classes=\"table table-head-custom table-vertical-center overflow-hidden\"\r\n                bordered={false}\r\n                bootstrap4\r\n                remote\r\n                keyField=\"id\"\r\n                data={entities === null ? [] : entities}\r\n                columns={columns}\r\n                defaultSorted={uiHelpers.defaultSorted}\r\n                onTableChange={getHandlerTableChange(\r\n                  specsUIProps.setQueryParams\r\n                )}\r\n                selectRow={getSelectRow({\r\n                  entities,\r\n                  ids: specsUIProps.ids,\r\n                  setIds: specsUIProps.setIds,\r\n                })}\r\n                {...paginationTableProps}\r\n              >\r\n                <PleaseWaitMessage entities={entities} />\r\n                <NoRecordsFoundMessage entities={entities} />\r\n              </BootstrapTable>\r\n            </Pagination>\r\n          );\r\n        }}\r\n      </PaginationProvider>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport { LoadingDialog } from \"../../../../../../_metronic/_partials/controls\";\r\n\r\nexport function SpecificationsLoadingDialog() {\r\n  const { isLoading } = useSelector(\r\n    (state) => ({ isLoading: state.specifications.listLoading }),\r\n    shallowEqual\r\n  );\r\n  useEffect(() => {}, [isLoading]);\r\n  return <LoadingDialog isLoading={isLoading} text=\"Loading ...\" />;\r\n}\r\n","/* eslint-disable no-restricted-imports */\r\nimport React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { ModalProgressBar } from \"../../../../../../_metronic/_partials/controls\";\r\nimport * as actions from \"../../../_redux/specifications/specificationsActions\";\r\nimport { useSpecificationsUIContext } from \"./SpecificationsUIContext\";\r\n\r\nexport function SpecificationsDeleteDialog() {\r\n  // Specs UI Context\r\n  const specsUIContext = useSpecificationsUIContext();\r\n  const specsUIProps = useMemo(() => {\r\n    return {\r\n      productId: specsUIContext.productId,\r\n      ids: specsUIContext.ids,\r\n      show: specsUIContext.showDeleteSpecificationsDialog,\r\n      onHide: specsUIContext.closeDeleteSpecificationsDialog,\r\n      setIds: specsUIContext.setIds,\r\n      queryParams: specsUIContext.queryParams,\r\n    };\r\n  }, [specsUIContext]);\r\n\r\n  // Specs Redux state\r\n  const dispatch = useDispatch();\r\n  const { isLoading } = useSelector(\r\n    (state) => ({ isLoading: state.specifications.actionsLoading }),\r\n    shallowEqual\r\n  );\r\n\r\n  // looking for loading/dispatch\r\n  useEffect(() => {}, [isLoading, dispatch]);\r\n\r\n  // if there weren't selected specs we should close modal\r\n  useEffect(() => {\r\n    if (!specsUIProps.ids || specsUIProps.ids.length === 0) {\r\n      specsUIProps.onHide();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [specsUIProps.ids]);\r\n\r\n  const deleteSpecifications = () => {\r\n    // server request for selected deleting specs\r\n    dispatch(actions.deleteSpecifications(specsUIProps.ids)).then(() => {\r\n      // refresh list after deletion\r\n      dispatch(\r\n        actions.fetchSpecifications(\r\n          specsUIProps.queryParams,\r\n          specsUIProps.productId\r\n        )\r\n      ).then(() => {\r\n        specsUIProps.setIds([]);\r\n        specsUIProps.onHide();\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={specsUIProps.show}\r\n      onHide={specsUIProps.onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      {isLoading && <ModalProgressBar variant=\"query\" />}\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Specifications Delete\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {!isLoading && (\r\n          <span>\r\n            Are you sure to permanently delete selected specifications?\r\n          </span>\r\n        )}\r\n        {isLoading && <span>Specifications are deleting...</span>}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={specsUIProps.onHide}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={deleteSpecifications}\r\n            className=\"btn btn-primary btn-elevate\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","/* eslint-disable no-restricted-imports */\r\nimport React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { ModalProgressBar } from \"../../../../../../_metronic/_partials/controls\";\r\nimport * as actions from \"../../../_redux/specifications/specificationsActions\";\r\nimport { useSpecificationsUIContext } from \"./SpecificationsUIContext\";\r\n\r\nexport function SpecificationDeleteDialog() {\r\n  // Specifications UI Context\r\n  const specsUIContext = useSpecificationsUIContext();\r\n  const specsUIProps = useMemo(() => {\r\n    return {\r\n      id: specsUIContext.selectedId,\r\n      productId: specsUIContext.productId,\r\n      show: specsUIContext.showDeleteSpecificationDialog,\r\n      onHide: specsUIContext.closeDeleteSpecificationDialog,\r\n      queryParams: specsUIContext.queryParams,\r\n      setIds: specsUIContext.setIds,\r\n    };\r\n  }, [specsUIContext]);\r\n\r\n  // Specs Redux state\r\n  const dispatch = useDispatch();\r\n  const { isLoading } = useSelector(\r\n    (state) => ({ isLoading: state.specifications.actionsLoading }),\r\n    shallowEqual\r\n  );\r\n\r\n  // if !id we should close modal\r\n  useEffect(() => {\r\n    if (!specsUIProps.id) {\r\n      specsUIProps.onHide();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [specsUIProps.id]);\r\n\r\n  // looking for loading/dispatch\r\n  useEffect(() => {}, [isLoading, dispatch]);\r\n\r\n  const deleteSpecification = () => {\r\n    // server request for deleting spec by id\r\n    dispatch(actions.deleteSpecification(specsUIProps.id)).then(() => {\r\n      // refresh list after deletion\r\n      dispatch(\r\n        actions.fetchSpecifications(\r\n          specsUIProps.queryParams,\r\n          specsUIProps.productId\r\n        )\r\n      );\r\n      specsUIProps.setIds([]);\r\n      specsUIProps.onHide();\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={specsUIProps.show}\r\n      onHide={specsUIProps.onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      {isLoading && <ModalProgressBar variant=\"query\" />}\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Specification Delete\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {!isLoading && (\r\n          <span>Are you sure to permanently delete this specification?</span>\r\n        )}\r\n        {isLoading && <span>Specification is deleting...</span>}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={specsUIProps.onHide}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={deleteSpecification}\r\n            className=\"btn btn-primary btn-elevate\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport { useSpecificationsUIContext } from \"./SpecificationsUIContext\";\r\n\r\nconst selectedSpecifications = (entities, ids) => {\r\n  const _specifications = [];\r\n  ids.forEach((id) => {\r\n    const specification = entities.find((el) => el.id === id);\r\n    if (specification) {\r\n      _specifications.push(specification);\r\n    }\r\n  });\r\n  return _specifications;\r\n};\r\n\r\nexport function SpecificationsFetchDialog() {\r\n  // Specs UI Context\r\n  const specsUIContext = useSpecificationsUIContext();\r\n  const specsUIProps = useMemo(() => {\r\n    return {\r\n      ids: specsUIContext.ids,\r\n      show: specsUIContext.showFetchSpecificationsDialog,\r\n      onHide: specsUIContext.closeFetchSpecificationsDialog,\r\n      queryParams: specsUIContext.queryParams,\r\n    };\r\n  }, [specsUIContext]);\r\n\r\n  // Specs Redux state\r\n  const { specifications } = useSelector(\r\n    (state) => ({\r\n      specifications: selectedSpecifications(\r\n        state.specifications.entities,\r\n        specsUIProps.ids\r\n      ),\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!specsUIProps.ids || specsUIProps.ids.length === 0) {\r\n      specsUIProps.onHide();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [specsUIProps.ids]);\r\n\r\n  return (\r\n    <Modal\r\n      show={specsUIProps.show}\r\n      onHide={specsUIProps.onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Fetch selected elements\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <div className=\"list-timeline list-timeline-skin-light padding-30\">\r\n          <div className=\"list-timeline-items\">\r\n            {specifications.map((specification) => (\r\n              <div className=\"list-timeline-item mb-3\" key={specification.id}>\r\n                <span className=\"list-timeline-text\">\r\n                  <span\r\n                    className=\"label label-lg label-light-success label-inline\"\r\n                    style={{ width: \"60px\" }}\r\n                  >\r\n                    ID: {specification.id}\r\n                  </span>{\" \"}\r\n                  <span className=\"ml-5\">\r\n                    {specification.name}: {specification.value}{\" \"}\r\n                  </span>\r\n                </span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={specsUIProps.onHide}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={specsUIProps.onHide}\r\n            className=\"btn btn-primary btn-elevate\"\r\n          >\r\n            Ok\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport { useSpecificationsUIContext } from \"./SpecificationsUIContext\";\r\n\r\nexport function SpecificationsGrouping() {\r\n  // Specs UI Context\r\n  const specsUIContext = useSpecificationsUIContext();\r\n  const specsUIProps = useMemo(() => {\r\n    return {\r\n      ids: specsUIContext.ids,\r\n      openDeleteSpecificationsDialog:\r\n        specsUIContext.openDeleteSpecificationsDialog,\r\n      openFetchSpecificationsDialog:\r\n        specsUIContext.openFetchSpecificationsDialog,\r\n    };\r\n  }, [specsUIContext]);\r\n\r\n  return (\r\n    <div className=\"form\">\r\n      <div className=\"row align-items-center form-group-actions margin-top-20\">\r\n        <div className=\"col-xl-12\">\r\n          <div className=\"form-group form-group-inline\">\r\n            <div className=\"form-label form-label-no-wrap\">\r\n              <label className=\"font-bold font-danger mt-5\">\r\n                <span>Selected records count: {specsUIProps.ids.length}</span>\r\n              </label>\r\n            </div>\r\n            <div className=\"form-group-inline\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-danger font-weight-bolder font-size-sm\"\r\n                onClick={specsUIProps.openDeleteSpecificationsDialog}\r\n              >\r\n                <i className=\"fa fa-trash\"></i> Delete All\r\n              </button>\r\n              &nbsp;\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-light-primary font-weight-bolder font-size-sm\"\r\n                onClick={specsUIProps.openFetchSpecificationsDialog}\r\n              >\r\n                <i className=\"fa fa-stream\"></i> Fetch Selected\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","/* eslint-disable no-restricted-imports */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { ModalProgressBar } from \"../../../../../../../_metronic/_partials/controls\";\r\n\r\nexport function SpecificationEditDialogHeader({ id }) {\r\n  const [title, setTitle] = useState(\"\");\r\n  // Specs Redux state\r\n  const { specificationForEdit, actionsLoading } = useSelector(\r\n    (state) => ({\r\n      specificationForEdit: state.specifications.specificationForEdit,\r\n      actionsLoading: state.specifications.actionsLoading,\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  useEffect(() => {\r\n    let _title = id ? \"\" : \"New Specification\";\r\n    if (specificationForEdit && id) {\r\n      _title = \"Edit Specification\";\r\n    }\r\n\r\n    setTitle(_title);\r\n    // eslint-disable-next-line\r\n  }, [specificationForEdit, actionsLoading]);\r\n  return (\r\n    <>\r\n      {actionsLoading && <ModalProgressBar variant=\"query\" />}\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">{title}</Modal.Title>\r\n      </Modal.Header>\r\n    </>\r\n  );\r\n}\r\n","// Form is based on Formik\r\n// Data validation is based on Yup\r\n// Please, be familiar with article first:\r\n// https://hackernoon.com/react-form-validation-with-formik-and-yup-8b76bda62e10\r\nimport React from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n  Select,\r\n  Input,\r\n} from \"../../../../../../../_metronic/_partials/controls\";\r\nimport { SPECIFICATIONS_DICTIONARY } from \"../SpecificationsUIHelper\";\r\n\r\n// Validation schema\r\nconst SpecificationEditSchema = Yup.object().shape({\r\n  value: Yup.string()\r\n    .min(2, \"Minimum 2 symbols\")\r\n    .max(50, \"Maximum 50 symbols\")\r\n    .required(\"Value is required\"),\r\n  specId: Yup.number().required(\"Specification type is required\"),\r\n});\r\n\r\nexport function SpecificationEditForm({\r\n  saveSpecification,\r\n  specification,\r\n  actionsLoading,\r\n  onHide,\r\n}) {\r\n  return (\r\n    <>\r\n      <Formik\r\n        enableReinitialize={true}\r\n        initialValues={specification}\r\n        validationSchema={SpecificationEditSchema}\r\n        onSubmit={(values) => {\r\n          saveSpecification(values);\r\n        }}\r\n      >\r\n        {({ handleSubmit }) => (\r\n          <>\r\n            <Modal.Body className=\"overlay overlay-block cursor-default\">\r\n              {actionsLoading && (\r\n                <div className=\"overlay-layer bg-transparent\">\r\n                  <div className=\"spinner spinner-lg spinner-success\" />\r\n                </div>\r\n              )}\r\n              <Form className=\"form form-label-right\">\r\n                <div className=\"form-group row\">\r\n                  <div className=\"col-lg-12\">\r\n                    <Select name=\"specId\" label=\"Specification Type\">\r\n                      {SPECIFICATIONS_DICTIONARY.map((spec) => (\r\n                        <option key={spec.id} value={spec.id}>\r\n                          {spec.name}\r\n                        </option>\r\n                      ))}\r\n                    </Select>\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                  <div className=\"col-lg-12\">\r\n                    <Field\r\n                      name=\"value\"\r\n                      component={Input}\r\n                      placeholder=\"Value\"\r\n                      label=\"Value\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <button\r\n                type=\"button\"\r\n                onClick={onHide}\r\n                className=\"btn btn-light btn-elevate\"\r\n              >\r\n                Cancel\r\n              </button>\r\n              <> </>\r\n              <button\r\n                type=\"submit\"\r\n                onClick={() => handleSubmit()}\r\n                className=\"btn btn-primary btn-elevate\"\r\n              >\r\n                Save\r\n              </button>\r\n            </Modal.Footer>\r\n          </>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../../../_redux/specifications/specificationsActions\";\r\nimport { SpecificationEditDialogHeader } from \"./SpecificationEditDialogHeader\";\r\nimport { SpecificationEditForm } from \"./SpecificationEditForm\";\r\nimport { useSpecificationsUIContext } from \"../SpecificationsUIContext\";\r\n\r\nexport function SpecificationEditDialog() {\r\n  // Specifications UI Context\r\n  const specsUIContext = useSpecificationsUIContext();\r\n  const specsUIProps = useMemo(() => {\r\n    return {\r\n      id: specsUIContext.selectedId,\r\n      show: specsUIContext.showEditSpecificationDialog,\r\n      onHide: specsUIContext.closeEditSpecificationDialog,\r\n      productId: specsUIContext.productId,\r\n      queryParams: specsUIContext.queryParams,\r\n      initSpecification: specsUIContext.initSpecification,\r\n    };\r\n  }, [specsUIContext]);\r\n\r\n  // Specifications Redux state\r\n  const dispatch = useDispatch();\r\n  const { actionsLoading, specificationForEdit } = useSelector(\r\n    (state) => ({\r\n      actionsLoading: state.specifications.actionsLoading,\r\n      specificationForEdit: state.specifications.specificationForEdit,\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  useEffect(() => {\r\n    // server request for getting spec by seleted id\r\n    dispatch(actions.fetchSpecification(specsUIProps.id));\r\n  }, [specsUIProps.id, dispatch]);\r\n\r\n  const saveSpecification = (specification) => {\r\n    if (!specsUIProps.id) {\r\n      dispatch(actions.createSpecification(specification)).then(() => {\r\n        dispatch(\r\n          actions.fetchSpecifications(\r\n            specsUIProps.queryParams,\r\n            specsUIProps.productId\r\n          )\r\n        ).then(() => specsUIProps.onHide());\r\n      });\r\n    } else {\r\n      dispatch(actions.updateSpecification(specification)).then(() => {\r\n        dispatch(\r\n          actions.fetchSpecifications(\r\n            specsUIProps.queryParams,\r\n            specsUIProps.productId\r\n          )\r\n        ).then(() => specsUIProps.onHide());\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={specsUIProps.show}\r\n      onHide={specsUIProps.onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      <SpecificationEditDialogHeader id={specsUIProps.id} />\r\n      <SpecificationEditForm\r\n        saveSpecification={saveSpecification}\r\n        actionsLoading={actionsLoading}\r\n        specification={specificationForEdit || specsUIProps.initSpecification}\r\n        onHide={specsUIProps.onHide}\r\n      />\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport { SpecificationsFilter } from \"./SpecificationsFilter\";\r\nimport { SpecificationsTable } from \"./SpecificationsTable\";\r\nimport { SpecificationsLoadingDialog } from \"./SpecificationsLoadingDialog\";\r\nimport { SpecificationsDeleteDialog } from \"./SpecificationsDeleteDialog\";\r\nimport { SpecificationDeleteDialog } from \"./SpecificationDeleteDialog\";\r\nimport { SpecificationsFetchDialog } from \"./SpecificationsFetchDialog\";\r\nimport { SpecificationsGrouping } from \"./SpecificationsGrouping\";\r\nimport { SpecificationEditDialog } from \"./specification-edit-dialog/SpecificationEditDialog\";\r\nimport { useSpecificationsUIContext } from \"./SpecificationsUIContext\";\r\n\r\nexport function Specifications() {\r\n  // Specifications UI Context\r\n  const specsUIContext = useSpecificationsUIContext();\r\n  const specsUIProps = useMemo(() => {\r\n    return { ids: specsUIContext.ids };\r\n  }, [specsUIContext]);\r\n\r\n  return (\r\n    <>\r\n      <SpecificationsLoadingDialog />\r\n      <SpecificationEditDialog />\r\n      <SpecificationDeleteDialog />\r\n      <SpecificationsDeleteDialog />\r\n      <SpecificationsFetchDialog />\r\n      <div className=\"form margin-b-30\">\r\n        <SpecificationsFilter />\r\n        {specsUIProps.ids.length > 0 && (\r\n          <>\r\n            <SpecificationsGrouping />\r\n            <br />\r\n          </>\r\n        )}\r\n      </div>\r\n      <SpecificationsTable />\r\n    </>\r\n  );\r\n}\r\n","export const defaultSorted = [{ dataField: \"id\", order: \"asc\" }];\r\nexport const sizePerPageList = [\r\n  { text: \"1\", value: 1 },\r\n  { text: \"3\", value: 3 },\r\n  { text: \"5\", value: 5 }\r\n];\r\nexport const initialFilter = {\r\n  filter: {\r\n    text: \"\"\r\n  },\r\n  sortOrder: \"asc\", // asc||desc\r\n  sortField: \"id\",\r\n  pageNumber: 1,\r\n  pageSize: 5\r\n};\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { useEffect, useContext, createContext, useState, useCallback } from \"react\";\r\nimport {isEqual, isFunction} from \"lodash\";\r\nimport {initialFilter} from \"./RemarksUIHelper\";\r\n\r\nconst RemarksUIContext = createContext();\r\n\r\nexport function useRemarksUIContext() {\r\n  return useContext(RemarksUIContext);\r\n}\r\n\r\nexport const RemarksUIConsumer = RemarksUIContext.Consumer;\r\n\r\nexport function RemarksUIProvider({ currentProductId, children }) {\r\n  const [productId, setProductId] = useState(currentProductId);\r\n  const [queryParams, setQueryParamsBase] = useState(initialFilter);\r\n  const [ids, setIds] = useState([]);\r\n  const setQueryParams = useCallback(nextQueryParams => {\r\n    setQueryParamsBase(prevQueryParams => {\r\n      if (isFunction(nextQueryParams)) {\r\n        nextQueryParams = nextQueryParams(prevQueryParams);\r\n      }\r\n\r\n      if (isEqual(prevQueryParams, nextQueryParams)) {\r\n        return prevQueryParams;\r\n      }\r\n\r\n      return nextQueryParams;\r\n    });\r\n  }, []);\r\n  const [selectedId, setSelectedId] = useState(null);\r\n  const [showEditRemarkDialog, setShowEditRemarkDialog] = useState(false);\r\n  const initRemark = {\r\n    id: undefined,\r\n    text: \"\",\r\n    type: 0,\r\n    dueDate: \"01/07/2020\",\r\n    carId: productId\r\n  };\r\n  useEffect(()=> {\r\n    initRemark.productId = currentProductId;\r\n    initRemark.carId = currentProductId;\r\n    setProductId(currentProductId);\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currentProductId]);\r\n  const openNewRemarkDialog = () => {\r\n    setSelectedId(undefined);\r\n    setShowEditRemarkDialog(true);\r\n  };\r\n  const openEditRemarkDialog = id => {\r\n    setSelectedId(id);\r\n    setShowEditRemarkDialog(true);\r\n  };\r\n  const closeEditRemarkDialog = () => {\r\n    setSelectedId(undefined);\r\n    setShowEditRemarkDialog(false);\r\n  };\r\n  const [showDeleteRemarkDialog, setShowDeleteRemarkDialog] = useState(false);\r\n  const openDeleteRemarkDialog = id => {\r\n    setSelectedId(id);\r\n    setShowDeleteRemarkDialog(true);\r\n  };\r\n  const closeDeleteRemarkDialog = () => {\r\n    setSelectedId(undefined);\r\n    setShowDeleteRemarkDialog(false);\r\n  };\r\n\r\n  const [showDeleteRemarksDialog, setShowDeleteRemarksDialog] = useState(false);\r\n  const openDeleteRemarksDialog = () => {\r\n    setShowDeleteRemarksDialog(true);\r\n  };\r\n  const closeDeleteRemarksDialog = () => {\r\n    setShowDeleteRemarksDialog(false);\r\n  };\r\n\r\n  const [showFetchRemarksDialog, setShowFetchRemarksDialog] = useState(false);\r\n  const openFetchRemarksDialog = () => {\r\n    setShowFetchRemarksDialog(true);\r\n  };\r\n  const closeFetchRemarksDialog = () => {\r\n    setShowFetchRemarksDialog(false);\r\n  };\r\n\r\n  const value = {\r\n    ids,\r\n    setIds,\r\n    productId,\r\n    setProductId,\r\n    queryParams,\r\n    setQueryParams,\r\n    initRemark,\r\n    selectedId,\r\n    showEditRemarkDialog,\r\n    openNewRemarkDialog,    \r\n    openEditRemarkDialog,\r\n    closeEditRemarkDialog,\r\n    showDeleteRemarkDialog,\r\n    openDeleteRemarkDialog,\r\n    closeDeleteRemarkDialog,\r\n    showDeleteRemarksDialog,\r\n    openDeleteRemarksDialog,\r\n    closeDeleteRemarksDialog,\r\n    openFetchRemarksDialog,\r\n    closeFetchRemarksDialog,\r\n    showFetchRemarksDialog\r\n  };\r\n  \r\n  return (\r\n    <RemarksUIContext.Provider value={value}>\r\n      {children}\r\n    </RemarksUIContext.Provider>\r\n  );\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport { isEqual } from \"lodash\";\r\nimport { useRemarksUIContext } from \"./RemarksUIContext\";\r\n\r\nconst prepareFilter = (queryParams, values) => {\r\n  const { searchText } = values;\r\n  const newQueryParams = { ...queryParams };\r\n  const filter = {};\r\n  filter.text = searchText;\r\n  newQueryParams.filter = filter;\r\n  return newQueryParams;\r\n};\r\n\r\nexport function RemarksFilter() {\r\n  // Remarks UI Context\r\n  const remarksUIContext = useRemarksUIContext();\r\n  const remarksUIProps = useMemo(() => {\r\n    return {\r\n      setQueryParams: remarksUIContext.setQueryParams,\r\n      openNewRemarkDialog: remarksUIContext.openNewRemarkDialog,\r\n      queryParams: remarksUIContext.queryParams,\r\n    };\r\n  }, [remarksUIContext]);\r\n\r\n  const applyFilter = (values) => {\r\n    const newQueryParams = prepareFilter(remarksUIProps.queryParams, values);\r\n    if (!isEqual(newQueryParams, remarksUIProps.queryParams)) {\r\n      newQueryParams.pageNumber = 1;\r\n      remarksUIProps.setQueryParams(newQueryParams);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"form-filtration\">\r\n        <div className=\"row align-items-center\">\r\n          <div className=\"col-md-2 margin-bottom-10-mobile\">\r\n            <Formik\r\n              initialValues={{\r\n                searchText: \"\",\r\n              }}\r\n              onSubmit={(values) => {\r\n                applyFilter(values);\r\n              }}\r\n            >\r\n              {({\r\n                values,\r\n                handleSubmit,\r\n                handleBlur,\r\n                handleChange,\r\n                setFieldValue,\r\n              }) => (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"searchText\"\r\n                      placeholder=\"Search\"\r\n                      onBlur={handleBlur}\r\n                      value={values.searchText}\r\n                      onChange={(e) => {\r\n                        setFieldValue(\"searchText\", e.target.value);\r\n                        handleSubmit();\r\n                      }}\r\n                    />\r\n                    <small className=\"form-text text-muted\">\r\n                      <b>Search</b> in all fields\r\n                    </small>\r\n                  </div>\r\n                </form>\r\n              )}\r\n            </Formik>\r\n          </div>\r\n          <div className=\"col-md-8 margin-bottom-10-mobile\"></div>\r\n          <div className=\"col-md-2 text-right margin-bottom-10-mobile\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary\"\r\n              onClick={() => remarksUIProps.openNewRemarkDialog()}\r\n            >\r\n              Create new remark\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import {createSlice} from \"@reduxjs/toolkit\";\r\n\r\nconst initialRemarksState = {\r\n  listLoading: false,\r\n  actionsLoading: false,\r\n  totalCount: 0,\r\n  entities: null,\r\n  remarkForEdit: undefined,\r\n  lastError: null\r\n};\r\nexport const callTypes = {\r\n  list: \"list\",\r\n  action: \"action\"\r\n};\r\n\r\nexport const remarksSlice = createSlice({\r\n  name: \"remarks\",\r\n  initialState: initialRemarksState,\r\n  reducers: {\r\n    catchError: (state, action) => {\r\n      state.error = `${action.type}: ${action.payload.error}`;\r\n      if (action.payload.callType === callTypes.list) {\r\n        state.listLoading = false;\r\n      } else {\r\n        state.actionsLoading = false;\r\n      }\r\n    },\r\n    startCall: (state, action) => {\r\n      state.error = null;\r\n      if (action.payload.callType === callTypes.list) {\r\n        state.listLoading = true;\r\n      } else {\r\n        state.actionsLoading = true;\r\n      }\r\n    },\r\n    // getRemarkById\r\n    remarkFetched: (state, action) => {\r\n      state.actionsLoading = false;\r\n      state.remarkForEdit = action.payload.remarkForEdit;\r\n      state.error = null;\r\n    },\r\n    // findRemarks\r\n    remarksFetched: (state, action) => {\r\n      const { totalCount, entities } = action.payload;\r\n      state.listLoading = false;\r\n      state.error = null;\r\n      state.entities = entities;\r\n      state.totalCount = totalCount;\r\n    },\r\n    // createRemark\r\n    remarkCreated: (state, action) => {\r\n      state.actionsLoading = false;\r\n      state.error = null;\r\n      state.entities.push(action.payload.remark);\r\n    },\r\n    // updateRemark\r\n    remarkUpdated: (state, action) => {\r\n      state.error = null;\r\n      state.actionsLoading = false;\r\n      state.entities = state.entities.map(entity => {\r\n        if (entity.id === action.payload.remark.id) {\r\n          return action.payload.remark;\r\n        }\r\n        return entity;\r\n      });\r\n    },\r\n    // deleteRemark\r\n    remarkDeleted: (state, action) => {\r\n      state.error = null;\r\n      state.actionsLoading = false;\r\n      state.entities = state.entities.filter(el => el.id !== action.payload.id);\r\n    },\r\n    // deleteRemarks\r\n    remarksDeleted: (state, action) => {\r\n      state.error = null;\r\n      state.actionsLoading = false;\r\n      state.entities = state.entities.filter(\r\n        el => !action.payload.ids.includes(el.id)\r\n      );\r\n    },\r\n    // remarksUpdateState\r\n    remarksStatusUpdated: (state, action) => {\r\n      state.actionsLoading = false;\r\n      state.error = null;\r\n      const { ids, status } = action.payload;\r\n      state.entities = state.entities.map(entity => {\r\n        if (ids.findIndex(id => id === entity.id) > -1) {\r\n          entity.status = status;\r\n        }\r\n        return entity;\r\n      });\r\n    }\r\n  }\r\n});\r\n","import * as requestFromServer from \"./remarksCrud\";\r\nimport {remarksSlice, callTypes} from \"./remarksSlice\";\r\n\r\nconst {actions} = remarksSlice;\r\n\r\nexport const fetchRemarks = (queryParams, productId) => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.list }));\r\n  if (!productId) {\r\n    return dispatch(actions.remarksFetched({ totalCount: 0, entities: null }));\r\n  }\r\n\r\n  return requestFromServer\r\n    .findRemarks(queryParams, productId)\r\n    .then(response => {\r\n      const { totalCount, entities } = response.data;\r\n      dispatch(actions.remarksFetched({ totalCount, entities }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't find remarks\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.list }));\r\n    });\r\n};\r\n\r\nexport const fetchRemark = id => dispatch => {\r\n  if (!id) {\r\n    return dispatch(actions.remarkFetched({ remarkForEdit: undefined }));\r\n  }\r\n\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .getRemarkById(id)\r\n    .then(response => {\r\n      const remark = response.data;\r\n      dispatch(actions.remarkFetched({ remarkForEdit: remark }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't find remark\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const deleteRemark = id => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .deleteRemark(id)\r\n    .then(response => {\r\n      dispatch(actions.remarkDeleted({ id }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't delete remark\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const createRemark = remarkForCreation => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .createRemark(remarkForCreation)\r\n    .then(response => {\r\n      const { remark } = response.data;\r\n      dispatch(actions.remarkCreated({ remark }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't create remark\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const updateRemark = remark => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .updateRemark(remark)\r\n    .then(() => {\r\n      dispatch(actions.remarkUpdated({ remark }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't update remark\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const deleteRemarks = ids => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .deleteRemarks(ids)\r\n    .then(() => {\r\n      console.log(\"delete return\");\r\n      dispatch(actions.remarksDeleted({ ids }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't delete remarks\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport const REMARKS_URL = \"api/remarks\";\r\n\r\n// CREATE =>  POST: add a new remark to the server\r\nexport function createRemark(remark) {\r\n  return axios.post(REMARKS_URL, { remark });\r\n}\r\n\r\n// READ\r\n// Server should return filtered remarks by productId\r\nexport function getAllProductRemarksByProductId(productId) {\r\n  return axios.get(`${REMARKS_URL}?productId=${productId}`);\r\n}\r\n\r\nexport function getRemarkById(remarkId) {\r\n  return axios.get(`${REMARKS_URL}/${remarkId}`);\r\n}\r\n\r\n// Server should return sorted/filtered remarks and merge with items from state\r\n// TODO: Change your URL to REAL API, right now URL is 'api/remarksfind/{productId}'. Should be 'api/remarks/find/{productId}'!!!\r\nexport function findRemarks(queryParams, productId) {\r\n  return axios.post(`${REMARKS_URL}find/${productId}`, { queryParams });\r\n}\r\n\r\n// UPDATE => PUT: update the remark\r\nexport function updateRemark(remark) {\r\n  return axios.put(`${REMARKS_URL}/${remark.id}`, { remark });\r\n}\r\n\r\n// DELETE => delete the remark\r\nexport function deleteRemark(remarkId) {\r\n  return axios.delete(`${REMARKS_URL}/${remarkId}`);\r\n}\r\n\r\n// DELETE Remarks by ids\r\nexport function deleteRemarks(ids) {\r\n  return axios.post(`${REMARKS_URL}/deleteRemarks`, { ids });\r\n}\r\n","/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\r\nimport React from \"react\";\r\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport SVG from \"react-inlinesvg\";\r\nimport { toAbsoluteUrl } from \"../../../../../../../_metronic/_helpers\";\r\n\r\nexport const ActionsColumnFormatter = (\r\n  cellContent,\r\n  row,\r\n  rowIndex,\r\n  { openEditRemarkDialog, openDeleteRemarkDialog }\r\n) => (\r\n  <>\r\n    <OverlayTrigger\r\n      overlay={<Tooltip id=\"customers-edit-tooltip\">Edit remark</Tooltip>}\r\n    >\r\n      <a\r\n        className=\"btn btn-icon btn-light btn-hover-primary btn-sm mx-3\"\r\n        onClick={() => openEditRemarkDialog(row.id)}\r\n      >\r\n        <span className=\"svg-icon svg-icon-md svg-icon-primary\">\r\n          <SVG\r\n            src={toAbsoluteUrl(\"/media/svg/icons/Communication/Write.svg\")}\r\n          />\r\n        </span>\r\n      </a>\r\n    </OverlayTrigger>\r\n\r\n    <> </>\r\n    <OverlayTrigger\r\n      overlay={<Tooltip id=\"customers-delete-tooltip\">Delete remark</Tooltip>}\r\n    >\r\n      <a\r\n        className=\"btn btn-icon btn-light btn-hover-danger btn-sm\"\r\n        onClick={() => openDeleteRemarkDialog(row.id)}\r\n      >\r\n        <span className=\"svg-icon svg-icon-md svg-icon-danger\">\r\n          <SVG src={toAbsoluteUrl(\"/media/svg/icons/General/Trash.svg\")} />\r\n        </span>\r\n      </a>\r\n    </OverlayTrigger>\r\n  </>\r\n);\r\n","// React bootstrap table next =>\r\n// DOCS: https://react-bootstrap-table.github.io/react-bootstrap-table2/docs/\r\n// STORYBOOK: https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html\r\nimport React, { useEffect, useMemo } from \"react\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory, {\r\n  PaginationProvider,\r\n} from \"react-bootstrap-table2-paginator\";\r\nimport * as actions from \"../../../_redux/remarks/remarksActions\";\r\nimport { ActionsColumnFormatter } from \"./column-formatters/ActionsColumnFormatter\";\r\nimport * as uiHelpers from \"./RemarksUIHelper\";\r\nimport { Pagination } from \"../../../../../../_metronic/_partials/controls\";\r\nimport {\r\n  getSelectRow,\r\n  getHandlerTableChange,\r\n  NoRecordsFoundMessage,\r\n  PleaseWaitMessage,\r\n  sortCaret,\r\n} from \"../../../../../../_metronic/_helpers\";\r\nimport { useRemarksUIContext } from \"./RemarksUIContext\";\r\n\r\nexport function RemarksTable() {\r\n  // Remarks UI Context\r\n  const remarksUIContext = useRemarksUIContext();\r\n  const remarksUIProps = useMemo(() => {\r\n    return {\r\n      ids: remarksUIContext.ids,\r\n      setIds: remarksUIContext.setIds,\r\n      queryParams: remarksUIContext.queryParams,\r\n      setQueryParams: remarksUIContext.setQueryParams,\r\n      productId: remarksUIContext.productId,\r\n      openEditRemarkDialog: remarksUIContext.openEditRemarkDialog,\r\n      openDeleteRemarkDialog: remarksUIContext.openDeleteRemarkDialog,\r\n    };\r\n  }, [remarksUIContext]);\r\n\r\n  // Getting curret state of products list from store (Redux)\r\n  const { currentState } = useSelector(\r\n    (state) => ({ currentState: state.remarks }),\r\n    shallowEqual\r\n  );\r\n  const { totalCount, entities, listLoading } = currentState;\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    remarksUIProps.setIds([]);\r\n    dispatch(\r\n      actions.fetchRemarks(remarksUIProps.queryParams, remarksUIProps.productId)\r\n    );\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [remarksUIProps.queryParams, dispatch, remarksUIProps.productId]);\r\n  const columns = [\r\n    {\r\n      dataField: \"id\",\r\n      text: \"ID\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"text\",\r\n      text: \"Text\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"dueDate\",\r\n      text: \"Due date\",\r\n      sort: false,\r\n    },\r\n    {\r\n      dataField: \"action\",\r\n      text: \"Actions\",\r\n      formatter: ActionsColumnFormatter,\r\n      formatExtraData: {\r\n        openEditRemarkDialog: remarksUIProps.openEditRemarkDialog,\r\n        openDeleteRemarkDialog: remarksUIProps.openDeleteRemarkDialog,\r\n      },\r\n      classes: \"text-right pr-0\",\r\n      headerClasses: \"text-right pr-3\",\r\n      style: {\r\n        minWidth: \"100px\",\r\n      },\r\n    },\r\n  ];\r\n\r\n  const paginationOptions = {\r\n    custom: true,\r\n    totalSize: totalCount,\r\n    sizePerPageList: uiHelpers.sizePerPageList,\r\n    sizePerPage: remarksUIProps.queryParams.pageSize,\r\n    page: remarksUIProps.queryParams.pageNumber,\r\n  };\r\n  return (\r\n    <>\r\n      <PaginationProvider pagination={paginationFactory(paginationOptions)}>\r\n        {({ paginationProps, paginationTableProps }) => {\r\n          return (\r\n            <Pagination\r\n              isLoading={listLoading}\r\n              paginationProps={paginationProps}\r\n            >\r\n              <BootstrapTable\r\n                wrapperClasses=\"table-responsive\"\r\n                classes=\"table table-head-custom table-vertical-center overflow-hidden\"\r\n                bordered={false}\r\n                bootstrap4\r\n                remote\r\n                keyField=\"id\"\r\n                data={entities === null ? [] : entities}\r\n                columns={columns}\r\n                defaultSorted={uiHelpers.defaultSorted}\r\n                onTableChange={getHandlerTableChange(\r\n                  remarksUIProps.setQueryParams\r\n                )}\r\n                selectRow={getSelectRow({\r\n                  entities,\r\n                  ids: remarksUIProps.ids,\r\n                  setIds: remarksUIProps.setIds,\r\n                })}\r\n                {...paginationTableProps}\r\n              >\r\n                <PleaseWaitMessage entities={entities} />\r\n                <NoRecordsFoundMessage entities={entities} />\r\n              </BootstrapTable>\r\n            </Pagination>\r\n          );\r\n        }}\r\n      </PaginationProvider>\r\n    </>\r\n  );\r\n}\r\n","import React, {useEffect} from \"react\";\r\nimport {shallowEqual, useSelector} from \"react-redux\";\r\nimport {LoadingDialog} from \"../../../../../../_metronic/_partials/controls\";\r\n\r\nexport function RemarksLoadingDialog() {\r\n  const { isLoading } = useSelector(\r\n    state => ({ isLoading: state.remarks.listLoading }),\r\n    shallowEqual\r\n  );\r\n  useEffect(() => {}, [isLoading]);\r\n  return <LoadingDialog isLoading={isLoading} text=\"Loading ...\" />;\r\n}\r\n","/* eslint-disable no-restricted-imports */\r\nimport React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { ModalProgressBar } from \"../../../../../../_metronic/_partials/controls\";\r\nimport * as actions from \"../../../_redux/remarks/remarksActions\";\r\nimport { useRemarksUIContext } from \"./RemarksUIContext\";\r\n\r\nexport function RemarksDeleteDialog() {\r\n  // Remarks UI Context\r\n  const remarksUIContext = useRemarksUIContext();\r\n  const remarksUIProps = useMemo(() => {\r\n    return {\r\n      ids: remarksUIContext.ids,\r\n      setIds: remarksUIContext.setIds,\r\n      productId: remarksUIContext.productId,\r\n      queryParams: remarksUIContext.queryParams,\r\n      showDeleteRemarksDialog: remarksUIContext.showDeleteRemarksDialog,\r\n      closeDeleteRemarksDialog: remarksUIContext.closeDeleteRemarksDialog,\r\n    };\r\n  }, [remarksUIContext]);\r\n\r\n  const dispatch = useDispatch();\r\n  const { isLoading } = useSelector(\r\n    (state) => ({ isLoading: state.remarks.actionsLoading }),\r\n    shallowEqual\r\n  );\r\n\r\n  useEffect(() => {}, [isLoading, dispatch]);\r\n  useEffect(() => {\r\n    if (!remarksUIProps.ids || remarksUIProps.ids.length === 0) {\r\n      remarksUIProps.closeDeleteRemarksDialog();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [remarksUIProps.ids]);\r\n\r\n  const deleteRemarks = () => {\r\n    dispatch(actions.deleteRemarks(remarksUIProps.ids)).then(() => {\r\n      dispatch(\r\n        actions.fetchRemarks(\r\n          remarksUIProps.queryParams,\r\n          remarksUIProps.productId\r\n        )\r\n      ).then(() => {\r\n        remarksUIProps.setIds([]);\r\n        remarksUIProps.closeDeleteRemarksDialog();\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={remarksUIProps.showDeleteRemarksDialog}\r\n      onHide={remarksUIProps.closeDeleteRemarksDialog}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      {isLoading && <ModalProgressBar variant=\"query\" />}\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Remarks Delete\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {!isLoading && (\r\n          <span>Are you sure to permanently delete selected remarks?</span>\r\n        )}\r\n        {isLoading && <span>Remarks are deleting...</span>}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={remarksUIProps.closeDeleteRemarksDialog}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={deleteRemarks}\r\n            className=\"btn btn-primary btn-elevate\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","/* eslint-disable no-restricted-imports */\r\nimport React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { ModalProgressBar } from \"../../../../../../_metronic/_partials/controls\";\r\nimport * as actions from \"../../../_redux/remarks/remarksActions\";\r\nimport { useRemarksUIContext } from \"./RemarksUIContext\";\r\n\r\nexport function RemarkDeleteDialog() {\r\n  // Remarks UI Context\r\n  const remarksUIContext = useRemarksUIContext();\r\n  const remarksUIProps = useMemo(() => {\r\n    return {\r\n      id: remarksUIContext.selectedId,\r\n      setIds: remarksUIContext.setIds,\r\n      productId: remarksUIContext.productId,\r\n      queryParams: remarksUIContext.queryParams,\r\n      showDeleteRemarkDialog: remarksUIContext.showDeleteRemarkDialog,\r\n      closeDeleteRemarkDialog: remarksUIContext.closeDeleteRemarkDialog,\r\n    };\r\n  }, [remarksUIContext]);\r\n\r\n  // Remarks Redux state\r\n  const dispatch = useDispatch();\r\n  const { isLoading } = useSelector(\r\n    (state) => ({ isLoading: state.remarks.actionsLoading }),\r\n    shallowEqual\r\n  );\r\n\r\n  // if !id we should close modal\r\n  useEffect(() => {\r\n    if (!remarksUIProps.id) {\r\n      remarksUIProps.closeDeleteRemarkDialog();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [remarksUIProps.id]);\r\n\r\n  // looking for loading/dispatch\r\n  useEffect(() => {}, [isLoading, dispatch]);\r\n\r\n  const deleteRemark = () => {\r\n    // server request for deleting remark by id\r\n    dispatch(actions.deleteRemark(remarksUIProps.id)).then(() => {\r\n      // refresh list after deletion\r\n      dispatch(\r\n        actions.fetchRemarks(\r\n          remarksUIProps.queryParams,\r\n          remarksUIProps.productId\r\n        )\r\n      );\r\n      // clear selections list\r\n      remarksUIProps.setIds([]);\r\n      // closing delete modal\r\n      remarksUIProps.closeDeleteRemarkDialog();\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={remarksUIProps.showDeleteRemarkDialog}\r\n      onHide={remarksUIProps.closeDeleteRemarkDialog}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      {isLoading && <ModalProgressBar variant=\"query\" />}\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Remark Delete\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {!isLoading && (\r\n          <span>Are you sure to permanently delete this remark?</span>\r\n        )}\r\n        {isLoading && <span>Remark is deleting...</span>}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={remarksUIProps.closeDeleteRemarkDialog}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={deleteRemark}\r\n            className=\"btn btn-primary btn-elevate\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport { useRemarksUIContext } from \"./RemarksUIContext\";\r\n\r\nconst selectedRemarks = (entities, ids) => {\r\n  const _remarks = [];\r\n  ids.forEach((id) => {\r\n    const remark = entities.find((el) => el.id === id);\r\n    if (remark) {\r\n      _remarks.push(remark);\r\n    }\r\n  });\r\n  return _remarks;\r\n};\r\n\r\nexport function RemarksFetchDialog() {\r\n  // Remarks UI Context\r\n  const remarksUIContext = useRemarksUIContext();\r\n  const remarksUIProps = useMemo(() => {\r\n    return {\r\n      ids: remarksUIContext.ids,\r\n      queryParams: remarksUIContext.queryParams,\r\n      showFetchRemarksDialog: remarksUIContext.showFetchRemarksDialog,\r\n      closeFetchRemarksDialog: remarksUIContext.closeFetchRemarksDialog,\r\n    };\r\n  }, [remarksUIContext]);\r\n\r\n  const { remarks } = useSelector(\r\n    (state) => ({\r\n      remarks: selectedRemarks(state.remarks.entities, remarksUIProps.ids),\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!remarksUIProps.ids || remarksUIProps.ids.length === 0) {\r\n      remarksUIProps.closeFetchRemarksDialog();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [remarksUIProps.ids]);\r\n\r\n  return (\r\n    <Modal\r\n      show={remarksUIProps.showFetchRemarksDialog}\r\n      onHide={remarksUIProps.closeFetchRemarksDialog}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Fetch selected elements\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <div className=\"list-timeline list-timeline-skin-light padding-30\">\r\n          <div className=\"list-timeline-items\">\r\n            {remarks.map((remark) => (\r\n              <div className=\"list-timeline-item mb-3\" key={remark.id}>\r\n                <span className=\"list-timeline-text\">\r\n                  <span\r\n                    className=\"label label-lg label-light-success label-inline\"\r\n                    style={{ width: \"60px\" }}\r\n                  >\r\n                    ID: {remark.id}\r\n                  </span>{\" \"}\r\n                  <span className=\"ml-5\">{remark.text} </span>\r\n                </span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={remarksUIProps.closeFetchRemarksDialog}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={remarksUIProps.closeFetchRemarksDialog}\r\n            className=\"btn btn-primary btn-elevate\"\r\n          >\r\n            Ok\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport { useRemarksUIContext } from \"./RemarksUIContext\";\r\n\r\nexport function RemarksGrouping() {\r\n  // Remarks UI Context\r\n  const remarksUIContext = useRemarksUIContext();\r\n  const remarksUIProps = useMemo(() => {\r\n    return {\r\n      ids: remarksUIContext.ids,\r\n      openDeleteRemarksDialog: remarksUIContext.openDeleteRemarksDialog,\r\n      openFetchRemarksDialog: remarksUIContext.openFetchRemarksDialog,\r\n    };\r\n  }, [remarksUIContext]);\r\n\r\n  return (\r\n    <div className=\"form\">\r\n      <div className=\"row align-items-center form-group-actions margin-top-20\">\r\n        <div className=\"col-xl-12\">\r\n          <div className=\"form-group form-group-inline\">\r\n            <div className=\"form-label form-label-no-wrap\">\r\n              <label className=\"font-bold font-danger mt-5\">\r\n                <span>Selected records count: {remarksUIProps.ids.length}</span>\r\n              </label>\r\n            </div>\r\n            <div className=\"form-group-inline\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-danger font-weight-bolder font-size-sm\"\r\n                onClick={remarksUIProps.openDeleteRemarksDialog}\r\n              >\r\n                <i className=\"fa fa-trash\"></i> Delete All\r\n              </button>\r\n              &nbsp;\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-light-primary font-weight-bolder font-size-sm\"\r\n                onClick={remarksUIProps.openFetchRemarksDialog}\r\n              >\r\n                <i className=\"fa fa-stream\"></i> Fetch Selected\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","/* eslint-disable no-restricted-imports */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { ModalProgressBar } from \"../../../../../../../_metronic/_partials/controls\";\r\n\r\nexport function RemarkEditDialogHeader({ id }) {\r\n  const [title, setTitle] = useState(\"\");\r\n  // Remarks Redux state\r\n  const { remarkForEdit, actionsLoading } = useSelector(\r\n    (state) => ({\r\n      remarkForEdit: state.remarks.remarkForEdit,\r\n      actionsLoading: state.remarks.actionsLoading,\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  useEffect(() => {\r\n    let _title = id ? \"\" : \"New Remark\";\r\n    if (remarkForEdit && id) {\r\n      _title = \"Edit remark\";\r\n    }\r\n\r\n    setTitle(_title);\r\n    // eslint-disable-next-line\r\n  }, [remarkForEdit, actionsLoading]);\r\n\r\n  return (\r\n    <>\r\n      {actionsLoading && <ModalProgressBar variant=\"query\" />}\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">{title}</Modal.Title>\r\n      </Modal.Header>\r\n    </>\r\n  );\r\n}\r\n","// Form is based on Formik\r\n// Data validation is based on Yup\r\n// Please, be familiar with article first:\r\n// https://hackernoon.com/react-form-validation-with-formik-and-yup-8b76bda62e10\r\nimport React from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n  Input,\r\n  Select,\r\n  DatePickerField,\r\n} from \"../../../../../../../_metronic/_partials/controls\";\r\n\r\n// Validation schema\r\nconst RemarkEditSchema = Yup.object().shape({\r\n  text: Yup.string()\r\n    .min(2, \"Minimum 2 symbols\")\r\n    .max(50, \"Maximum 50 symbols\")\r\n    .required(\"Text is required\"),\r\n  type: Yup.number().required(\"Type is required\"),\r\n  dueDate: Yup.mixed()\r\n    .nullable(false)\r\n    .required(\"Due date is required\"),\r\n});\r\n\r\nexport function RemarkEditForm({ saveRemark, remark, actionsLoading, onHide }) {\r\n  return (\r\n    <>\r\n      <Formik\r\n        enableReinitialize={true}\r\n        initialValues={remark}\r\n        validationSchema={RemarkEditSchema}\r\n        onSubmit={(values) => saveRemark(values)}\r\n      >\r\n        {({ handleSubmit }) => (\r\n          <>\r\n            <Modal.Body className=\"overlay overlay-block cursor-default\">\r\n              {actionsLoading && (\r\n                <div className=\"overlay-layer bg-transparent\">\r\n                  <div className=\"spinner spinner-lg spinner-success\" />\r\n                </div>\r\n              )}\r\n              <Form className=\"form form-label-right\">\r\n                <div className=\"form-group row\">\r\n                  <div className=\"col-lg-12\">\r\n                    <Field\r\n                      name=\"text\"\r\n                      component={Input}\r\n                      placeholder=\"Text\"\r\n                      label=\"Text\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                  <div className=\"col-lg-12\">\r\n                    <DatePickerField name=\"dueDate\" label=\"Due date\" />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                  <div className=\"col-lg-12\">\r\n                    <Select name=\"type\" label=\"Type\">\r\n                      <option value=\"0\">Info</option>\r\n                      <option value=\"1\">Note</option>\r\n                      <option value=\"2\">Reminder</option>\r\n                    </Select>\r\n                  </div>\r\n                </div>\r\n              </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <button\r\n                type=\"button\"\r\n                onClick={onHide}\r\n                className=\"btn btn-light btn-elevate\"\r\n              >\r\n                Cancel\r\n              </button>\r\n              <> </>\r\n              <button\r\n                type=\"submit\"\r\n                onClick={() => handleSubmit()}\r\n                className=\"btn btn-primary btn-elevate\"\r\n              >\r\n                Save\r\n              </button>\r\n            </Modal.Footer>\r\n          </>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../../../_redux/remarks/remarksActions\";\r\nimport { RemarkEditDialogHeader } from \"./RemarkEditDialogHeader\";\r\nimport { RemarkEditForm } from \"./RemarkEditForm\";\r\nimport { useRemarksUIContext } from \"../RemarksUIContext\";\r\n\r\nfunction getFormattedDate(date) {\r\n  if (typeof date === \"string\") {\r\n    return date;\r\n  }\r\n\r\n  var year = date.getFullYear();\r\n\r\n  var month = (1 + date.getMonth()).toString();\r\n  month = month.length > 1 ? month : \"0\" + month;\r\n\r\n  var day = date.getDate().toString();\r\n  day = day.length > 1 ? day : \"0\" + day;\r\n\r\n  return month + \"/\" + day + \"/\" + year;\r\n}\r\n\r\nexport function RemarkEditDialog() {\r\n  // Remarks UI Context\r\n  const remarksUIContext = useRemarksUIContext();\r\n  const remarksUIProps = useMemo(() => {\r\n    return {\r\n      id: remarksUIContext.selectedId,\r\n      setIds: remarksUIContext.setIds,\r\n      productId: remarksUIContext.productId,\r\n      queryParams: remarksUIContext.queryParams,\r\n      showEditRemarkDialog: remarksUIContext.showEditRemarkDialog,\r\n      closeEditRemarkDialog: remarksUIContext.closeEditRemarkDialog,\r\n      initRemark: remarksUIContext.initRemark,\r\n    };\r\n  }, [remarksUIContext]);\r\n\r\n  // Remarks Redux state\r\n  const dispatch = useDispatch();\r\n  const { actionsLoading, remarkForEdit } = useSelector(\r\n    (state) => ({\r\n      actionsLoading: state.remarks.actionsLoading,\r\n      remarkForEdit: state.remarks.remarkForEdit,\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  useEffect(() => {\r\n    // server request for getting remark by seleted id\r\n    dispatch(actions.fetchRemark(remarksUIProps.id));\r\n  }, [remarksUIProps.id, dispatch]);\r\n\r\n  const saveRemark = (remark) => {\r\n    remark.dueDate = getFormattedDate(remark.dueDate);\r\n    if (!remarksUIProps.id) {\r\n      // server request for creating remarks\r\n      dispatch(actions.createRemark(remark)).then(() => {\r\n        // refresh list after deletion\r\n        dispatch(\r\n          actions.fetchRemarks(\r\n            remarksUIProps.queryParams,\r\n            remarksUIProps.productId\r\n          )\r\n        ).then(() => {\r\n          // clear selections list\r\n          remarksUIProps.setIds([]);\r\n          // closing edit modal\r\n          remarksUIProps.closeEditRemarkDialog();\r\n        });\r\n      });\r\n    } else {\r\n      // server request for updating remarks\r\n      dispatch(actions.updateRemark(remark)).then(() => {\r\n        // refresh list after deletion\r\n        dispatch(\r\n          // refresh list after deletion\r\n          actions.fetchRemarks(\r\n            remarksUIProps.queryParams,\r\n            remarksUIProps.productId\r\n          )\r\n        ).then(() => {\r\n          // clear selections list\r\n          remarksUIProps.setIds([]);\r\n          // closing edit modal\r\n          remarksUIProps.closeEditRemarkDialog();\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={remarksUIProps.showEditRemarkDialog}\r\n      onHide={remarksUIProps.closeEditRemarkDialog}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      <RemarkEditDialogHeader id={remarksUIProps.id} />\r\n      <RemarkEditForm\r\n        saveRemark={saveRemark}\r\n        actionsLoading={actionsLoading}\r\n        remark={remarkForEdit || remarksUIProps.initRemark}\r\n        onHide={remarksUIProps.closeEditRemarkDialog}\r\n      />\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport { RemarksFilter } from \"./RemarksFilter\";\r\nimport { RemarksTable } from \"./RemarksTable\";\r\nimport { RemarksLoadingDialog } from \"./RemarksLoadingDialog\";\r\nimport { RemarksDeleteDialog } from \"./RemarksDeleteDialog\";\r\nimport { RemarkDeleteDialog } from \"./RemarkDeleteDialog\";\r\nimport { RemarksFetchDialog } from \"./RemarksFetchDialog\";\r\nimport { RemarksGrouping } from \"./RemarksGrouping\";\r\nimport { RemarkEditDialog } from \"./remark-edit-dialog/RemarkEditDialog\";\r\nimport { useRemarksUIContext } from \"./RemarksUIContext\";\r\n\r\nexport function Remarks() {\r\n  // Remarks UI Context\r\n  const remarksUIContext = useRemarksUIContext();\r\n  const remarksUIProps = useMemo(() => {\r\n    return { ids: remarksUIContext.ids };\r\n  }, [remarksUIContext]);\r\n\r\n  return (\r\n    <>\r\n      <RemarksLoadingDialog />\r\n      <RemarkEditDialog />\r\n      <RemarkDeleteDialog />\r\n      <RemarksDeleteDialog />\r\n      <RemarksFetchDialog />\r\n      <div className=\"form margin-b-30\">\r\n        <RemarksFilter />\r\n        {remarksUIProps.ids.length > 0 && <RemarksGrouping />}\r\n      </div>\r\n      <RemarksTable />\r\n    </>\r\n  );\r\n}\r\n","/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid,jsx-a11y/role-supports-aria-props */\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../../_redux/products/productsActions\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar,\r\n} from \"../../../../../../_metronic/_partials/controls\";\r\nimport { ProductEditForm } from \"./ProductEditForm\";\r\nimport { Specifications } from \"../product-specifications/Specifications\";\r\nimport { SpecificationsUIProvider } from \"../product-specifications/SpecificationsUIContext\";\r\nimport { useSubheader } from \"../../../../../../_metronic/layout\";\r\nimport { ModalProgressBar } from \"../../../../../../_metronic/_partials/controls\";\r\nimport { RemarksUIProvider } from \"../product-remarks/RemarksUIContext\";\r\nimport { Remarks } from \"../product-remarks/Remarks\";\r\n\r\nconst initProduct = {\r\n  id: undefined,\r\n  model: \"\",\r\n  manufacture: \"Pontiac\",\r\n  modelYear: 2020,\r\n  mileage: 0,\r\n  description: \"\",\r\n  color: \"Red\",\r\n  price: 10000,\r\n  condition: 1,\r\n  status: 0,\r\n  VINCode: \"\",\r\n};\r\n\r\nexport function ProductEdit({\r\n  history,\r\n  match: {\r\n    params: { id },\r\n  },\r\n}) {\r\n  // Subheader\r\n  const suhbeader = useSubheader();\r\n\r\n  // Tabs\r\n  const [tab, setTab] = useState(\"basic\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  // const layoutDispatch = useContext(LayoutContext.Dispatch);\r\n  const { actionsLoading, productForEdit } = useSelector(\r\n    (state) => ({\r\n      actionsLoading: state.products.actionsLoading,\r\n      productForEdit: state.products.productForEdit,\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(actions.fetchProduct(id));\r\n  }, [id, dispatch]);\r\n\r\n  useEffect(() => {\r\n    let _title = id ? \"\" : \"New Product\";\r\n    if (productForEdit && id) {\r\n      _title = `Edit product '${productForEdit.manufacture} ${productForEdit.model} - ${productForEdit.modelYear}'`;\r\n    }\r\n\r\n    setTitle(_title);\r\n    suhbeader.setTitle(_title);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [productForEdit, id]);\r\n\r\n  const saveProduct = (values) => {\r\n    if (!id) {\r\n      dispatch(actions.createProduct(values)).then(() => backToProductsList());\r\n    } else {\r\n      dispatch(actions.updateProduct(values)).then(() => backToProductsList());\r\n    }\r\n  };\r\n\r\n  const btnRef = useRef();  \r\n  const saveProductClick = () => {\r\n    if (btnRef && btnRef.current) {\r\n      btnRef.current.click();\r\n    }\r\n  };\r\n\r\n  const backToProductsList = () => {\r\n    history.push(`/e-commerce/products`);\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      {actionsLoading && <ModalProgressBar />}\r\n      <CardHeader title={title}>\r\n        <CardHeaderToolbar>\r\n          <button\r\n            type=\"button\"\r\n            onClick={backToProductsList}\r\n            className=\"btn btn-light\"\r\n          >\r\n            <i className=\"fa fa-arrow-left\"></i>\r\n            Back\r\n          </button>\r\n          {`  `}\r\n          <button className=\"btn btn-light ml-2\">\r\n            <i className=\"fa fa-redo\"></i>\r\n            Reset\r\n          </button>\r\n          {`  `}\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-primary ml-2\"\r\n            onClick={saveProductClick}\r\n          >\r\n            Save\r\n          </button>\r\n        </CardHeaderToolbar>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <ul className=\"nav nav-tabs nav-tabs-line \" role=\"tablist\">\r\n          <li className=\"nav-item\" onClick={() => setTab(\"basic\")}>\r\n            <a\r\n              className={`nav-link ${tab === \"basic\" && \"active\"}`}\r\n              data-toggle=\"tab\"\r\n              role=\"tab\"\r\n              aria-selected={(tab === \"basic\").toString()}\r\n            >\r\n              Basic info\r\n            </a>\r\n          </li>\r\n          {id && (\r\n            <>\r\n              {\" \"}\r\n              <li className=\"nav-item\" onClick={() => setTab(\"remarks\")}>\r\n                <a\r\n                  className={`nav-link ${tab === \"remarks\" && \"active\"}`}\r\n                  data-toggle=\"tab\"\r\n                  role=\"button\"\r\n                  aria-selected={(tab === \"remarks\").toString()}\r\n                >\r\n                  Product remarks\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\" onClick={() => setTab(\"specs\")}>\r\n                <a\r\n                  className={`nav-link ${tab === \"specs\" && \"active\"}`}\r\n                  data-toggle=\"tab\"\r\n                  role=\"tab\"\r\n                  aria-selected={(tab === \"specs\").toString()}\r\n                >\r\n                  Product specifications\r\n                </a>\r\n              </li>\r\n            </>\r\n          )}\r\n        </ul>\r\n        <div className=\"mt-5\">\r\n          {tab === \"basic\" && (\r\n            <ProductEditForm\r\n              actionsLoading={actionsLoading}\r\n              product={productForEdit || initProduct}\r\n              btnRef={btnRef}\r\n              saveProduct={saveProduct}\r\n            />\r\n          )}\r\n          {tab === \"remarks\" && id && (\r\n            <RemarksUIProvider currentProductId={id}>\r\n              <Remarks />\r\n            </RemarksUIProvider>\r\n          )}\r\n          {tab === \"specs\" && id && (\r\n            <SpecificationsUIProvider currentProductId={id}>\r\n              <Specifications />\r\n            </SpecificationsUIProvider>\r\n          )}\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\n","import React, { Suspense } from \"react\";\r\nimport { Redirect, Switch } from \"react-router-dom\";\r\nimport { CustomersPage } from \"./customers/CustomersPage\";\r\nimport { ProductsPage } from \"./products/ProductsPage\";\r\nimport { ProductEdit } from \"./products/product-edit/ProductEdit\";\r\nimport { LayoutSplashScreen, ContentRoute } from \"../../../../_metronic/layout\";\r\n\r\nexport default function eCommercePage() {\r\n  return (\r\n    <Suspense fallback={<LayoutSplashScreen />}>\r\n      <Switch>\r\n        {\r\n          /* Redirect from eCommerce root URL to /customers */\r\n          <Redirect\r\n            exact={true}\r\n            from=\"/e-commerce\"\r\n            to=\"/e-commerce/customers\"\r\n          />\r\n        }\r\n        <ContentRoute path=\"/e-commerce/customers\" component={CustomersPage} />\r\n        <ContentRoute path=\"/e-commerce/products/new\" component={ProductEdit} />\r\n        <ContentRoute\r\n          path=\"/e-commerce/products/:id/edit\"\r\n          component={ProductEdit}\r\n        />\r\n\r\n        <ContentRoute path=\"/e-commerce/products\" component={ProductsPage} />\r\n      </Switch>\r\n    </Suspense>\r\n  );\r\n}\r\n"],"sourceRoot":""}